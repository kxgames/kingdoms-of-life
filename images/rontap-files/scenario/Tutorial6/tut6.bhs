include "tut_lib.bhs"

scenario {

  labels {
    ENGLISH,
    FRENCH,
    GERMAN,
    POLAND
  }

  static int objective_delay   = 120;
  static int lock_cutscene       = true;
  static int window_accidentally_closed = false;

  static int warsaw_id         = find_city_id( $S("Warsaw") );
  static int warsaw_x          = object_position_x( POLAND, warsaw_id );
  static int warsaw_y          = object_position_y( POLAND, warsaw_id );
  static int warsaw_attacked   = false;
  static int belguim_airbase_id  = find_build( POLAND, "airbase" );

  static int german_airbase_id = 2003;
  static int new_german_airbase = 2001;
  static int german_general_id   = find_unit( GERMAN, "general" );
  static int german_supply_wagon_id = find_unit( GERMAN, "supply wagon");

  static int german_infantry_x   = 251;
  static int german_infantry_y   = 62;

  static int paris_id            = find_city_id( $S("Paris") );
  static int calais_id           = find_city_id( $S("Calais") );
  static int dunkirk_id          = find_city_id( $S("Dunkirk") );
  static int english_redoubt_id  = 2005;  // redoubt
  static int english_redoubt_x   = object_position_x(ENGLISH, english_redoubt_id);
  static int english_redoubt_y   = object_position_y(ENGLISH, english_redoubt_id);

  static int french_start_military_units = num_military_units( FRENCH );

  static int french_armored_car_id = 86;
  static int rendezous_point_x   = 160;
  static int rendezous_point_y   = 169;

  static int german_tank_rally_x = 238;
  static int german_tank_rally_y = 198;
  static int german_infantry_rally_x = 242;
  static int german_infantry_rally_y = 146;
  static int german_artillery_rally_x = 222;
  static int german_artillery_rally_y = 146;

  //static int german_paris_attack_x = 230;
  //static int german_paris_attack_y = 230;
  static int german_paris_attack_x = 250;
  static int german_paris_attack_y = 228;

  static int calais_x       = 198;         
  static int calais_y       = 191;

  static int car_calais_x   = 200;
  static int car_calais_y   = 192;
  static int car_park_x      = 230;
  static int car_park_y      = 216;

  static int dunkirk_rally_x = 146;
  static int dunkirk_rally_y = 166;

  static int dover_rally_x   = 106;
  static int dover_rally_y   = 153;

  static int german_english_attack_rally_x = 215;
  static int german_english_attack_rally_y = 191;
  static int german_english_attack_point_x = calais_x + 6;
  static int german_english_attack_point_y = calais_y;
  static int german_english_attack_tank1_id     = find_unit( GERMAN, "tiger tank");
  static int german_english_attack_tank2_id     = find_unit( GERMAN, "tiger tank");
  static int german_english_attack_tank3_id     = find_unit( GERMAN, "tiger tank");
  static int german_english_attack_tank4_id     = find_unit( GERMAN, "tiger tank");
  static int german_english_attack_infantry1_id = find_military_category( GERMAN, "foot" );
  static int german_english_attack_infantry2_id = find_military_category( GERMAN, "foot" );
  static int german_english_attack_infantry3_id = find_military_category( GERMAN, "foot" );
  static int german_english_attack_infantry4_id = find_military_category( GERMAN, "foot" );

  static int paris_attack_cutscene_x = 232;
  static int paris_attack_cutscene_y = 210;

  static int oil_spot_x            = 36;
  static int oil_spot_y            = 201;

  static int patrol_point_x = 104;
  static int patrol_point_y = 132;

  static int english_airbase_one   = -1;
  static int english_airbase_two   = -1;
  static int english_airbase_three = -1;
  static int english_airbase_count = -1;
  static int english_fighter_id    = -1;
  static int english_general_id    = -1;

  static int fighter_reinforcement_x = 1;
  static int fighter_reinforcement_y = 200;
  static int fighter_zoom_id = -1;

  static int german_num_airforce   = -1;

  static int german_airbase_show_x = 204;
  static int german_airbase_show_y = 101;
  static int oops_bombers          = false;

  // ========
  // run once
  // ========
  run_once {
    set_nation_name("Russians", $S("Polish"));
    bubble_text_hide();
    disable_all_triggers();
  
    enable_trigger("intro");
    enable_trigger("all_military_lost");

    //enable_trigger("airbases_complete");
    //enable_trigger("start_bombing_campaign");
    //enable_trigger("oil_intro");
    //enable_trigger( "intro_airwar" );
    //enable_trigger( "german_england_air_attack");
    //enable_trigger("general_train");
    //enable_trigger("learn_about_oil");

    objective_delay = 120;
    set_timer("progress_check",objective_delay);

    set_object_type_max_health( "riflemen", 75 );
    set_object_type_max_health( "light tank", 150 );
    set_object_type_max_health( "armored car", 100 );

    set_type_build_time("general",          type_build_time("general") / 10 );  
    set_type_build_time("oil well",         type_build_time("oil well") / 9 );
    set_type_build_time("refinery",         type_build_time("refinery") / 5 );
    set_type_build_time("airbase",          type_build_time( "airbase" ) / 3 );
    set_type_build_time("fighter",          type_build_time( "fighter" ) / 120 ) ;
    set_type_build_time("lancaster bomber", type_build_time( "lancaster bomber" ) / 45 );

    diplomacy_set_reject( GERMAN );
    diplomacy_set_reject( POLAND );
    diplomacy_set_wait( FRENCH );
    diplomacy_block_war( ENGLISH, FRENCH );
    diplomacy_block_war( ENGLISH, POLAND );

    disable_type("Helicopter");
    set_music_mood("losing", true);
  }
  // ============
  // end run once
  // ============

  // ==========
  // Lost catch
  // ==========

  trigger Objective_Reminder( timer_expired("progress_check") && sound_finished() ) {
    clear_all_arrows();
    right = get_objectives_right();
    top   = get_objectives_top();

    if (right >= 0 && top >= 0) {
      draw_screen_arrow_line( right + 75, top - 75, right, top, 10 );
      play_sound("objective.wav");
      if(objective_delay < 300) {
       objective_delay = objective_delay * 2;
      } else {
       objective_delay = 300;
      }

    }
    set_timer("progress_check", objective_delay);
    enable_trigger("Objective_Reminder");
  }


  // ==============
  // end Lost catch
  // ==============

  // =====
  // Intro
  // =====

  trigger intro( ) {
    show_all_map_enable(ENGLISH);
    if( lock_cutscene ) {
      cutscene_begin();
    }

    enable_trigger("german_attack");
    enable_trigger("start_vo");
  }

  // ====================
  // WW2 German diplomacy
  // ====================

  // ========================
  // end WW2 German diplomacy
  // ========================

  // =====================
  // Initial German Attack
  // =====================

  trigger german_attack( ) {
    enable_trigger("german_tank_attack");
    enable_trigger("german_siege_attack");
    enable_trigger("german_air_attack");
    enable_trigger("german_infantry_attack");
    enable_trigger("german_support_move");
    enable_trigger("germans_near_warsaw");
    enable_trigger("warsaw_fallen");

    start_time = 0;
    tank_time = start_time + 2;
    set_timer( "tank_attack", tank_time );
    set_timer( "infantry_attack", tank_time + 3 );
    set_timer( "support_attack", tank_time );
    set_timer( "siege_attack", tank_time + 1);
  }

  trigger german_tank_attack( timer_expired( "tank_attack" ) ) {
    clear_group( GERMAN );
    for( i = 0; i < num_type( GERMAN, "tiger tank"); i++ ) {
      tank_id = find_unit( GERMAN, "tiger tank" );
      add_to_group( GERMAN, tank_id );
    }

    group_attack_to_order( GERMAN, warsaw_x, warsaw_y );
  }

  trigger german_siege_attack( timer_expired( "siege_attack") ) {
    clear_group( GERMAN );
    for( i = 0; i < num_unit_category( GERMAN, "artillery" ); i++ ) {
      artillery_id = find_military_category( GERMAN, "artillery" );
      add_to_group( GERMAN, artillery_id );
    }

    group_attack_to_order( GERMAN, warsaw_x, warsaw_y );
  }

  trigger german_air_attack() {
    for( i = 0; i < 2; i++ ) {
      plane_id = find_all_unit( GERMAN, "bomber" );
      unit_attack_ground_order( GERMAN, plane_id, warsaw_x, warsaw_y );
    }
  }

  trigger german_infantry_attack( timer_expired("infantry_attack" ) ) {
    clear_group( GERMAN );
    for( i = 0; i < num_unit_category( GERMAN, "foot" ); i++ ) {
      troup_id = find_military_category( GERMAN, "foot" );
      add_to_group( GERMAN, troup_id );
    }
    
    group_attack_to_order( GERMAN, german_infantry_x, german_infantry_y );
  }

  trigger german_support_move( timer_expired("support_attack" ) ) {
    unit_move_order( GERMAN, german_general_id, warsaw_x + 10, warsaw_y - 10 );

    for( i = 0; i < num_type( GERMAN, "supply wagon"); i++ ) {
      supply_wagon_id = find_unit( GERMAN, "supply wagon");
      path = i % 3;
      loc_x = 0;
      loc_y = 0;

      switch (path) {
      case 0:
        loc_x = 246;
        loc_y = 46;
        break;
      case 1:
        loc_x = 262;
        loc_y = 64;
        break;
      case 2:
      default:
        loc_x = 254;
        loc_y = 46;
        break;
      }

      unit_move_order( GERMAN, supply_wagon_id, loc_x, loc_y );
    }
  }

  trigger germans_near_warsaw( any_object_near( GERMAN, 1, warsaw_x, warsaw_y, 13 ) ) {   
    clear_group( POLAND );
    for( i = 0; i < num_military_units( POLAND); i++ ) {
      unit_id = find_all_military( POLAND );
      add_to_group( POLAND, unit_id );
    }

    group_attack_to_order( POLAND, 248, 53 );
  }

  trigger warsaw_fallen( city_captured_by( POLAND, GERMAN, $S("Warsaw") ) ) {
    enable_trigger("polands_defeated" );
  }

  trigger polands_defeated( num_military_units( POLAND ) == 0 ) {
    city_assimilate( GERMAN, $S("Warsaw"));
    switch_building_type(GERMAN, POLAND, "Large City");
    for( i = 0; i < num_military_units( GERMAN ); i++ ) {
      unit_id = find_all_military( GERMAN );
      unit_clear_orders( GERMAN, unit_id );
    }  

    // move airplanes around
    //new_german_airbase = switch_teams( GERMAN, POLAND, find_build( POLAND, "airbase") );
    enable_trigger("airbases_destroyed");
  }

  // =========================
  // end Initial German Attack
  // =========================

  // ====================================
  // german repositioning to attack paris
  // ====================================

  trigger advance_germans( ) {

    clear_group( GERMAN );
    // move tanks
    for( i = 0; i < num_type( GERMAN, "tiger tank" ); i++ ) {
      unit_id = find_unit( GERMAN, "tiger tank" ); 
      add_to_group( GERMAN, unit_id );
    }

    // move infantry
    for( i = 0; i < num_unit_category( GERMAN, "foot" ); i++ ) {
      troup_id = find_military_category( GERMAN, "foot" );
      add_to_group( GERMAN, troup_id );
    }

    // move artillery 
    for( i = 0; i < num_unit_category( GERMAN, "artillery" ); i++ ) {
      artillery_id = find_military_category( GERMAN, "artillery" );
      add_to_group( GERMAN, artillery_id );
    }

    // move support 
    //unit_move_order( GERMAN, german_general_id, german_artillery_rally_x, german_artillery_rally_y );
    //unit_move_order( GERMAN, german_supply_wagon_id, german_artillery_rally_x, german_artillery_rally_y );
    add_to_group( GERMAN, german_general_id );
    add_to_group( GERMAN, german_supply_wagon_id );

    group_move_order( GERMAN, german_tank_rally_x, german_tank_rally_y );

    //new_german_airbase = find_build(GERMAN, "airbase");

    // move airplanes over to poland air base
    for( i = 0; i < num_type( GERMAN, "fighter" ); i++ ) {
      fighter_id = find_all_unit( GERMAN, "fighter" );
      air_unit_transfer_order( GERMAN, fighter_id, new_german_airbase );
    }

    for( i = 0; i < num_type( GERMAN, "bomber" ); i++ ) {
      bomber_id = find_all_unit( GERMAN, "bomber" );
      air_unit_transfer_order( GERMAN, bomber_id, new_german_airbase );
    }
  }
  
  // ========================
  // end german repositioning
  // ========================

  // ======================
  // german attack on paris
  // ======================

  trigger germans_attack_paris( ) {
    group_attack_to_order( GERMAN, german_paris_attack_x, german_paris_attack_y );
    
    for( i = 0; i < num_type( GERMAN, "fighter"); i++ ) {
      fighter_id = find_all_unit( GERMAN, "fighter");
      unit_patrol_order( GERMAN, fighter_id, german_paris_attack_x, german_paris_attack_y );
    }

    for( i = 0; i < num_type( GERMAN, "bomber" ) ; i++ ) {
      bomber_id = find_all_unit( GERMAN, "bomber" );
      unit_attack_ground_order( GERMAN, bomber_id, german_paris_attack_x, german_paris_attack_y );
    }
    
    unit_move_order( GERMAN, german_english_attack_tank1_id, german_english_attack_rally_x, german_english_attack_rally_y );
    unit_move_order( GERMAN, german_english_attack_tank2_id, german_english_attack_rally_x, german_english_attack_rally_y );
    unit_move_order( GERMAN, german_english_attack_tank3_id, german_english_attack_rally_x, german_english_attack_rally_y );
    unit_move_order( GERMAN, german_english_attack_tank4_id, german_english_attack_rally_x, german_english_attack_rally_y );
    unit_move_order( GERMAN, german_english_attack_infantry1_id, german_english_attack_rally_x, german_english_attack_rally_y );
    unit_move_order( GERMAN, german_english_attack_infantry2_id, german_english_attack_rally_x, german_english_attack_rally_y );
    unit_move_order( GERMAN, german_english_attack_infantry3_id, german_english_attack_rally_x, german_english_attack_rally_y );
    unit_move_order( GERMAN, german_english_attack_infantry4_id, german_english_attack_rally_x, german_english_attack_rally_y );
  }

  // ==========================
  // end german attack on paris
  // ==========================

  // ===============================
  // german ground attack on england
  // ===============================

  trigger german_ground_attack_england( ) {
    unit_move_order( GERMAN, german_english_attack_tank1_id, german_english_attack_point_x, german_english_attack_point_y - 4 );
    unit_move_order( GERMAN, german_english_attack_tank2_id, german_english_attack_point_x, german_english_attack_point_y + 4 );
    unit_move_order( GERMAN, german_english_attack_tank3_id, german_english_attack_point_x, german_english_attack_point_y - 2 );
    unit_move_order( GERMAN, german_english_attack_tank4_id, german_english_attack_point_x, german_english_attack_point_y + 2 );
    unit_move_order( GERMAN, german_english_attack_infantry1_id, german_english_attack_point_x, german_english_attack_point_y );
    unit_move_order( GERMAN, german_english_attack_infantry2_id, german_english_attack_point_x, german_english_attack_point_y );
    unit_move_order( GERMAN, german_english_attack_infantry3_id, german_english_attack_point_x, german_english_attack_point_y );
    unit_move_order( GERMAN, german_english_attack_infantry4_id, german_english_attack_point_x, german_english_attack_point_y );
  }

  // ===================================
  // end german ground attack on england
  // ===================================

  trigger germans_chase_english() {
    clear_group(GERMAN);
    for( i = 0; i < num_military_units( GERMAN ); i++ ) {
      unit_id = find_military( GERMAN );
      add_to_group(GERMAN, unit_id);
    }
    group_attack_to_order(GERMAN, dunkirk_rally_x, dunkirk_rally_y);

    for( i = 0; i < num_unit_category( GERMAN, "air" ); i++ ) {
      air_id = find_all_military_category( GERMAN, "air" );
      unit_clear_orders( GERMAN, air_id );
    }

    unit_id = find_military_category(GERMAN, "foot");
    unit_attack_order(GERMAN, unit_id, FRENCH, paris_id);
  }

  trigger germans_pull_back() {
    clear_group(GERMAN);
    for( i = 0; i < num_military_units( GERMAN ); i++ ) {
      unit_id = find_military( GERMAN ); 
      add_to_group(GERMAN, unit_id);
    }
    group_attack_to_order(GERMAN, calais_x, calais_y);
  }

  // ============================
  // german air attack on england
  // ============================

  trigger german_england_air_attack( ) {
    set_timer("air_attack_delay", 5);
    enable_trigger("german_england_air_attack_timer_up");
  }

  trigger german_england_air_attack_timer_up(timer_expired("air_attack_delay")) {
    for( i = 0; i < num_type(GERMAN, "bomber"); i++ ) {
      bomber_id = find_all_unit( GERMAN, "bomber");
      unit_attack_ground_order( GERMAN, bomber_id, english_redoubt_x, english_redoubt_y);
    }

    /*
    // half the bombers attack the airbases
    for( i = 0; i < num_type( GERMAN, "bomber" ) / 2; i++ ) {
      target_airbase_id = find_build( ENGLISH, "airbase" );
      target_airbase_x = object_position_x( ENGLISH, target_airbase_id );
      target_airbase_y = object_position_y( ENGLISH, target_airbase_id );
      
      bomber_id = find_all_unit( GERMAN, "bomber" );
      unit_attack_ground_order( GERMAN, bomber_id, target_airbase_x, target_airbase_y );
    }

    // other half attack the redoubt
    target_redoubt_id = find_build( ENGLISH, "redoubt" );
    target_redoubt_x  = object_position_x( ENGLISH, target_redoubt_id );
    target_redoubt_y  = object_position_y( ENGLISH, target_redoubt_id );
    for( i = ( num_type( GERMAN, "bomber" ) / 2  ); i < num_type( GERMAN, "bomber" ); i++ ) {
      bomber_id = find_all_unit( GERMAN, "bomber" );
      unit_attack_ground_order( GERMAN, bomber_id, target_redoubt_x, target_redoubt_y );
    }*/

    
    // send the fighters to patrol over the airbases
    for( i = 0; i < num_type( GERMAN, "fighter" ); i++ ) {
      /*
      target_airbase_id = find_build( ENGLISH, "airbase" );
      target_airbase_x = object_position_x( ENGLISH, target_airbase_id );
      target_airbase_y = object_position_y( ENGLISH, target_airbase_id );

      fighter_id = find_all_unit( GERMAN, "fighter" );
      unit_patrol_order( GERMAN, fighter_id, target_airbase_x, target_airbase_y );
      */
      fighter_id = find_all_unit(GERMAN, "fighter");
      unit_patrol_order(GERMAN, fighter_id, patrol_point_x, patrol_point_y);
    }
  }

  // ================================
  // end german air attack on england
  // ================================

  trigger start_vo( any_object_near( GERMAN, 1, warsaw_x, warsaw_y, 13 ) ) {
    // WAV:  After years of conceding to German requests, it is clear to 
    //       England that there is no appeasing Adolf Hitler.  He has invaded Poland,
    //       and declared war on the free world.
    play_sound("german_intent.wav");
    enable_trigger("neutral");
  }

  // =========
  // Diplomacy
  // =========

  trigger neutral( city_captured_by( POLAND, GERMAN, $S("Warsaw")) || (find_city_owner( $S("Warsaw")) == GERMAN) ) {
    cutscene_end();

    center_camera_on( FRENCH, paris_id );
    //move_camera( 234, 225 );
    // WAV: England can no longer watch passively while the free countries of Europe are conquered.  
    //      We must declare war on the Germans and establish an alliance with the 
    //      French to stop their onslaught.
    play_sound("neutral.wav");
    enable_trigger("diplomacy_start");
  }

  trigger diplomacy_start( sound_finished() ) {
    enable_trigger("Objective_Reminder");
    // WAV: Click on the diplomacy button that is in the bottom right of the screen.
    line_x = get_screen_width()  - 85;
    line_y = get_screen_height() - 190;
    draw_screen_arrow_line( line_x, line_y - 100, line_x, line_y, -1 );
    add_objective($S("Click on the diplomacy button."), "click_diplomacy", "click_diplomacy.wav" );
    play_objective_sound("click_diplomacy");
    enable_trigger("diplomacy_opened");
    set_timer("progress_check", objective_delay);
  }

  trigger diplomacy_opened( (diplomacy_open() || contact_open()) && sound_finished() ) {
    clear_all_arrows();
    objective_complete("click_diplomacy");
    // WAV: This is the diplomacy window.
    play_sound("diplomacy_window.wav");
    enable_trigger( "nations_listed" );
    set_timer("diplomacy_timer", 5);
    enable_trigger( "diplomacy_closed" );
    set_timer("progress_check", objective_delay);
    enable_trigger("war_declared");
  }

  trigger diplomacy_closed( !diplomacy_open() && !contact_open() && sound_finished() && timer_expired( "diplomacy_timer") ) {
    // WAV:  You have closed the diplomacy window but we are not done negotiating yet.  Re-open the diplomacy window and resume negotiations.
    play_sound("diplomacy_closed.wav");
    set_timer("diplomacy_timer", 25);
    enable_trigger("diplomacy_closed");
    window_accidentally_closed = true;
  }

  trigger nations_listed( diplomacy_open() && ( sound_finished() || window_accidentally_closed ) ) {
    window_accidentally_closed = false;
    // WAV: Each of our neighboring nations has a stance icon that represents our relationship with them.
    play_sound("nations_listed.wav");
    enable_trigger("talk_about_diplo_icons");
  }

  trigger talk_about_diplo_icons( diplomacy_open() && ( sound_finished() || window_accidentally_closed ) ) {
    window_accidentally_closed = false;
    // WAV: We have peace with all of our neighbors, as represented by the dove.
    play_sound("peace_with_everyone.wav");
    enable_trigger("to_declare_war");
  }

  trigger to_declare_war( diplomacy_open() && ( sound_finished() || window_accidentally_closed ) ) {
    window_accidentally_closed = false;
    // WAV: Click on the dove icon next to Adolf Hilter to declare war on Germany.
    add_objective($S("Click on the dove icon next to Adolf Hitler to declare war on Germany."), "war_with_germans", "click_near_germans.wav");
    play_objective_sound("war_with_germans");
    enable_trigger( "declaring_war" );
    set_timer("progress_check", objective_delay);
  }

  trigger declaring_war( diplomacy_open() && ( sound_finished() || window_accidentally_closed ) ) {
    window_accidentally_closed = false;
    // WAV: It costs a sizable amount of wealth to start a war.  We need to join the French in the battle, so agree to pay the cost.
    play_sound("costs_money.wav");
    //enable_trigger( "war_declared" );
  }

  trigger war_declared( have_war( ENGLISH, GERMAN ) ) {
    objective_complete("war_with_germans");
    disable_trigger("declaring_war");
    disable_trigger("to_declare_war");
    disable_trigger("talk_about_diplo_icons");
    disable_trigger("nations_listed");

    clear_objectives();
    // WAV: Now we have declared war on the Germans and the icon has changed from a dove to a sword to represent that.  We need to set up an alliance with France.
    play_sound("start_negotiations_with_france.wav");
    enable_trigger( "select_french_name" );
    enable_trigger("diplo_opened");
    set_timer("progress_check", objective_delay);
  }

  trigger select_french_name( sound_finished() ) {
    // WAV: Select Premier Paul Reynaud to open up the negotiation window with France.
    add_objective($S("Select Premier Paul Reynaud to open up the negotiation window."), "select_french_name", "select_french_name.wav");
    play_objective_sound("select_french_name");
    //enable_trigger( "diplo_opened" );
    enable_trigger("diplo_opened_oops");
    set_timer("progress_check", objective_delay);
  }

  trigger diplo_opened( contact_open() == FRENCH ) {
    objective_complete("select_french_name");
    enable_trigger("first_offer_made");
    disable_trigger("diplo_opened_oops");
    disable_trigger("select_french_name");

    play_sound("contact_opened.wav");
    // WAV: Good.  This is where we can make deals with the French.       
    enable_trigger( "form_alliance" );
    set_timer("progress_check", objective_delay);
  }

  trigger diplo_opened_oops( contact_open() && ( contact_open() != FRENCH ) ) {
    play_sound("accident_contact_opened.wav");
    // WAV: You have opened a negotiation window, but not with the French.
    //      Close then reopen the diplomacy window and select Premier Paul Reynaud to negotiate with the French.
    window_accidentally_closed = true;
  }

  trigger form_alliance( contact_open() && ( sound_finished() || window_accidentally_closed ) ) {
    window_accidentally_closed = false;
    play_sound("want_to_form_alliance.wav");
    // WAV: We want to form an alliance with France.
    enable_trigger( "select_ally" );
  }

  trigger select_ally( contact_open() && ( sound_finished() || window_accidentally_closed ) ) {
    window_accidentally_closed = false;
    add_objective($S("Click on the 'ally' checkbox."), "click_on_ally", "click_on_ally.wav");
    play_objective_sound("click_on_ally");
    // WAV: Click on the "ally" checkbox to indicate that you want to propose an alliance.
    enable_trigger("talk_about_offers");
    set_timer("progress_check", objective_delay);
  }

  trigger talk_about_offers( contact_open() && is_offering_alliance( ENGLISH, FRENCH ) ) {
    objective_complete("click_on_ally");
    
    // WAV: After you have set the options that you want, you can propose the offer to the other party.
    play_sound("talk_about_offers.wav");
    enable_trigger("first_proposal");
    set_timer("progress_check", objective_delay);
  }

  trigger first_proposal( contact_open() && ( sound_finished() || window_accidentally_closed ) ) {
    window_accidentally_closed = false;
    add_objective($S("Click on propose to send the offer to the French."), "propose_to_french", "propose_to_french.wav");
    // WAV: Click on the propose button to propose the alliance to France.
    play_objective_sound("propose_to_french");
    set_timer("progress_check", objective_delay);
  }
  
  trigger first_offer_made( contact_open() && offer_made( ENGLISH, FRENCH ) ) {
    if( is_offering_alliance(ENGLISH, FRENCH) && ( amount_offered( ENGLISH, FRENCH, "food" ) >= 500 ) ) {
      disable_trigger("form_alliance");
      disable_trigger("select_ally");
      disable_trigger("talk_about_offers");
      disable_trigger("first_proposal");
      objective_complete("propose_to_french");
      accept_offer( FRENCH, ENGLISH );
      enable_trigger("negotiations_complete");
    } else {
      make_counter_offer( ENGLISH, FRENCH, "food", "500", $S("We welcome an alliance with the English, but we desperately need more food to train more troops.") );
      enable_trigger("french_refusal");
      enable_trigger("propose_second_time");
    }
  }

  trigger french_refusal( contact_open() && ( sound_finished() || window_accidentally_closed ) ) {
    window_accidentally_closed = false;
    objective_complete("propose_to_french");
    // WAV: The French need the alliance, but have indicated that they need food to train more troops for battle. 
    play_sound("french_refuse.wav");
    enable_trigger("give_french_resources");
    set_timer("progress_check", objective_delay);
  }

  trigger give_french_resources( contact_open() && ( sound_finished() || window_accidentally_closed ) ) {
    window_accidentally_closed = false;
    play_sound("give_resources_to_french.wav");
    // WAV: In the top left of the window is the interface to offer and demand resources in negotation.  Clicking on the buttons on the left
    //      will demand 100 of the resource from the leader your are negotating with.  Click on the buttons on the right 
    //      will offer 100 of the resource to the leader.
    enable_trigger("give_french_food");
  }

  trigger give_french_food( contact_open() && ( sound_finished() || window_accidentally_closed ) ) {
    window_accidentally_closed = false;
    add_objective($S("Click 5 times on the food offer button to give the French 500 food."), "give_french_food", "give_french_food.wav");
    play_objective_sound("give_french_food");
    // WAV: Click 5 times on the food offer button to give the French 500 food.
    enable_trigger("click_propose_again");
    set_timer("progress_check", objective_delay);
  }

  trigger click_propose_again( contact_open() && amount_offered( ENGLISH, FRENCH, "food" ) >= 500 ) {
    objective_complete("give_french_food");

    add_objective($S("Press the propose button again to submit the new proposal."), "propose_again", "propose_again.wav");
    play_objective_sound("propose_again");
    // WAV: Now click on the propose button again to make this new proposal.
    set_timer("progress_check", objective_delay);
  }

  trigger propose_second_time( contact_open() && offer_made( ENGLISH, FRENCH ) ) {
    if( is_offering_alliance( ENGLISH, FRENCH ) && ( amount_offered( ENGLISH, FRENCH, "food" ) >= 500 ) ) {
      objective_complete("propose_again");
      accept_offer( FRENCH, ENGLISH );
      disable_trigger( "diplomacy_closed" );
      enable_trigger( "negotiations_complete" );
    } else {  
      // WAV:  The French want 500 food and need an alliance.  Make sure you are offering 500 food and 
      //       have ally checked when you click the propose button.
      play_sound("proposal_failed.wav");
      reject_offer( FRENCH, ENGLISH );
      enable_trigger("propose_second_time");
    }
    set_timer("progress_check", objective_delay);
  }

  trigger negotiations_complete( ) {
    // WAV:  We have successfully negotiated an alliance with the French!  Now we must put our agreement into action.
    clear_objectives();
    disable_trigger( "diplomacy_closed" );
    play_sound("successful_negotiations.wav");
    enable_trigger("close_windows");
    enable_trigger("windows_closed");
  }

  trigger close_windows( sound_finished() && (diplomacy_open() || contact_open()) ) {
    // WAV: Close the diplomacy window.
    add_objective( $S("Close the diplomacy windows."), "close_windows", "close_windows.wav");
    play_objective_sound("close_windows");
    enable_trigger("windows_closed");
    set_timer("progress_check", objective_delay);
  }

  trigger windows_closed( !diplomacy_open() && !contact_open() ) {
    objective_complete("close_windows");
    disable_trigger("close_windows");
    enable_trigger("french_alliance");
  }

  trigger french_alliance( sound_finished() ) {
    show_all_map_disable(ENGLISH);
    scrolling_unlock();
    zooming_unlock();
    objective_complete("propose_again");
    // WAV: We now have an alliance with the French.  Among other advantages, alliances allow their members share their line of sight
    //      and knowledge of the world.  Members of an alliance can move into each other's territory without penalty.  
    play_sound("allied_with_french.wav");
    enable_trigger("send_forces_to_defend");
  }

  // =============
  // end Diplomacy
  // =============

  // ==========================
  // begin General Construction
  // ==========================

  trigger send_forces_to_defend( sound_finished() ) {
    // WAV: Now that we have declared war on Germany, they will be advancing into France to capture Paris.  
    //      The French need all the help they can get to turn back the German assault, so we will send in forces to help with the defence.
    play_sound("help_defend_france.wav");
    enable_trigger("anticipated");
  }

  trigger anticipated( sound_finished() ) {
    center_camera_on( ENGLISH, find_unit( ENGLISH, $S("Heavy Machine Gun") ) );
    // WAV: We anticipated the German threat and readied a company of foot soldiers 
    //      near the town of Dover for the fight.
    play_sound("anticipated_attack.wav");
    enable_trigger("general_intro");
  }

  trigger general_intro( sound_finished() ) {
    // WAV: The Battle of France will be fiercely fought and we need our army to fight as best as they possibly can.  One 
    //      way to increase the effectiveness of ground troups in battle is to have a General nearby when they fight. 
    play_sound("general.wav");

    if( !find_unit( ENGLISH, "general" ) ) {
      enable_trigger("general_train");
    } else {
      enable_trigger("general_talk");
    }

  }
  
  trigger general_train( sound_finished() ) {
    // WAV: Generals are created in fortifications, like the Redoubt.  
    play_sound("general_created.wav");
    center_camera_on( ENGLISH, english_redoubt_id );

    //if( !object_selected( ENGLISH, english_redoubt_id ) ) {
    //  enable_trigger("select_redoubt");
    //} else {
    //  enable_trigger("redoubt_selected");
    //}

    enable_trigger( "create_general_at_redoubt" );
    enable_trigger( "advance_germans" );
  }

  trigger create_general_at_redoubt( sound_finished() ) {
    add_objective($S("Create a General at your Redoubt."), "build_general", "build_general.wav");
    play_objective_sound("build_general");
    enable_trigger("general_talk");
    enable_trigger("building_general");
    highlight_train_option("general");
    set_timer("progress_check", objective_delay);
  }

  /*
  trigger select_redoubt( sound_finished() ) {
    // WAV: Select your redoubt.
    ping(1, 1, english_redoubt_x, english_redoubt_y);
    play_objective_sound("select_redoubt");
    enable_trigger("redoubt_selected");
  }
  
  trigger redoubt_selected( object_selected( ENGLISH, english_redoubt_id ) && sound_finished() ) {
    objective_complete("select_redoubt");
    highlight_train_option( "general" );

    // WAV:  Build a general at your redoubt.
    add_objective($S("Build a general"), "build_general", "build_general.wav");
    play_objective_sound("build_general");
    enable_trigger("general_talk");
    enable_trigger("building_general");
  }
  */

  trigger building_general( num_type_queued( ENGLISH, find_build(ENGLISH, "redoubt"), "general" ) || num_type( ENGLISH, "general" ) ) {
    clear_highlight();
  }

  trigger general_talk( num_type( ENGLISH, "general" )  && sound_finished() ) {
    objective_complete("build_general");
    english_general_id = find_unit( ENGLISH, "general");

    // WAV: Generals have a number of special abilities that are useful in combat.  They also automatically enhance the fighting
    //      ability of nearby units.
    play_sound("general_abilities.wav");
    enable_trigger( "french_escourt" );
    enable_trigger( "advance_germans" );
    enable_trigger("lost_all_ground_units");
    set_timer("progress_check", objective_delay);
  }

  // ========================
  // end General Construction
  // ========================

  // ==============
  // Auto-transport
  // ==============

  trigger french_escourt( sound_finished() ) {
    // WAV: We are to move our forces across the English channel and rendevous with a French armored car near the coast.
    move_camera( rendezous_point_x, rendezous_point_y );
    unit_move_order( FRENCH, french_armored_car_id, 163, 171 );
    add_flag( rendezous_point_x, rendezous_point_y );
    play_sound("french_escourt.wav");

    if( all_military_selected( ENGLISH ) && object_selected( ENGLISH, english_general_id ) ) {
      enable_trigger( "military_selected" );
    } else {
      enable_trigger("select_all_army");
    }
  }

  trigger select_all_army( sound_finished() ) {
    center_camera_on( ENGLISH, find_unit( ENGLISH, "Heavy Machine Gun" ) );
    // WAV: Select all of your military.
    add_objective($S("Select all your military."), "select_all_military", "select_all_military.wav");
    play_objective_sound("select_all_military");
    set_timer( "not_all_selected", 6 );
    enable_trigger("military_selected");
    enable_trigger("some_military_selected");
  }

  trigger some_military_selected( ( num_objects_selected( ENGLISH ) > 1 ) && !( all_military_selected( ENGLISH ) && object_selected( ENGLISH, english_general_id) ) && sound_finished() && timer_expired( "not_all_selected") ) {
    // WAV: You have selected some but not all of your military.  Remember to select your entire fighting force and your general.
    play_sound("some_military_selected.wav");
  }

  trigger military_selected( all_military_selected( ENGLISH ) && object_selected( ENGLISH, english_general_id) && sound_finished() ) {
    disable_trigger("some_military_selected");
    objective_complete("select_all_military");
    // WAV: Now right click on the flag near the French armored car to have your units move across the English channel.
    add_objective($S( "Right click on the flag near the armored car to move your units across the English channel."), "move_units", "move_units.wav" );
    play_objective_sound("move_units");
    enable_trigger( "water_crossed" );
    set_timer("progress_check", objective_delay);
  }

  trigger water_crossed( all_military_near( ENGLISH, rendezous_point_x, rendezous_point_y, 10) && sound_finished() ) {
    objective_complete("move_units");

    clear_flags();
    play_sound( "get_in_position.wav");

    if( lock_cutscene ) {
      cutscene_begin();
    }
    // WAV:  Your army has moved to the rendezous spot.  We need to get into position for the German attack.
    enable_trigger("french_position");
  }

  // ==================
  // end Auto-transport
  // ==================

  // ======================
  // talk about positioning
  // ======================
  
  trigger french_position( sound_finished() ) {
    move_camera( 231, 215 );
    // WAV:  The French have put all of their forces on the main road to Paris to try to hold back the main assault.
    play_sound( "french_on_road.wav");
    enable_trigger("northern_flank");
  }

  trigger northern_flank( sound_finished() ) {
    move_camera( object_position_x( FRENCH, calais_id ), object_position_y( FRENCH, calais_id ) );
    // WAV:  The French have requested that we position the English forces to guard Calais on the northern coast.
    play_sound("guard_north_flank.wav");
    enable_trigger("talk_about_position");
  }

  // ==========================
  // end talk about positioning
  // ==========================

  // ==============
  // position units
  // ==============

  trigger talk_about_position( sound_finished() ) {
    cutscene_end();
    move_camera( calais_x, calais_y );
    add_flag( calais_x, calais_y );
    ping( 1, 1, calais_x, calais_y );
    add_objective($S("Move all of your army near the flag that is below Calais."), "move_to_calais", "prepare_for_battle.wav");
     // WAV:  We need to position our troops to defend Calais.  Move them to the flag below the city.
    unit_move_order( FRENCH, french_armored_car_id, car_calais_x, car_calais_y );
    play_sound("prepare_for_battle.wav");
    enable_trigger("arrived_at_calais");
    enable_trigger("mouse_over_position");
    set_timer("progress_check", objective_delay);
  }

  trigger mouse_over_position( ( num_objects_selected( ENGLISH ) > 1 ) && is_game_mouse_near( calais_x, calais_y, 3 ) && sound_finished() ) {
    // WAV: Sometimes it is effective to set up formations for your units.  To set a formation, press and hold the right 
    //      mouse down and move the mouse.  You will see a white line that indicates the direction that your units will be
    //      facing and circles to indicate where you units will be located.  Release the right mouse button to have your units move
    //      into that formation.
    play_sound("learn_about_formations.wav");
  }

  trigger arrived_at_calais( all_military_near( ENGLISH, calais_x, calais_y, 9 ) && sound_finished() ) {
    disable_trigger("mouse_over_position");
    objective_complete("move_to_calais");
    // WAV: We are now in good position to defend calais against the german attacks.  Since this is a defensive action, we can use one of the general's special 
    //      abilities to help our troops fight even better. 
    play_sound("good_position.wav");
    clear_flags();
    //unit_move_order( FRENCH, french_armored_car_id, car_park_x, car_park_y );
    enable_trigger("teach_general_abilities");
    set_timer("progress_check", objective_delay);
  }

  // ==================
  // end position units
  // ===================

  // =======================
  // teach general abilities
  // =======================

  trigger teach_general_abilities( sound_finished() ) {
    if( num_objects_selected( ENGLISH ) == 0 ) {
      enable_trigger("no_select_general");
    } else {
      if( ( num_objects_selected( ENGLISH ) == 1 ) && object_selected( ENGLISH, english_general_id ) ) {
        enable_trigger("teach_entrench_look_at_abilities");
      } else {
        enable_trigger("multiple_select_general");
      }
    }
    set_timer("progress_check", objective_delay);
  }
  
  trigger no_select_general( sound_finished() ) {
    // WAV:  Select your general.
    add_objective($S("Select your general."), "select_general_entrench", "select_general_again.wav");
    play_objective_sound("select_general_entrench");
    enable_trigger("teach_entrench_look_at_abilities");
    set_timer("progress_check", objective_delay);
  }

  trigger multiple_select_general( sound_finished() ) {
    // WAV:  We want to get a closer look at the general, so left click on him to select him alone.
    add_objective($S("Select only your general."), "select_general_entrench", "select_general_alone_entrench.wav");
    play_objective_sound("select_general_entrench");
    enable_trigger("teach_entrench_look_at_abilities");
    set_timer("progress_check", objective_delay);
  }

  trigger teach_entrench_look_at_abilities( object_selected( ENGLISH, english_general_id) && ( num_objects_selected( ENGLISH ) == 1 ) ) {
    objective_complete("select_general_entrench");
    y_loc = get_screen_height() - 100;
    x_loc = get_button_right("left_window") - 61;
    draw_screen_arrow_line(x_loc + 100, y_loc, x_loc, y_loc, -1);      ;
    // WAV: The general has a number of abilities that he can use.  Each of these abilities effect ground units nearby.
    play_sound("teach_entrench_general_abilities.wav");
    enable_trigger("general_now_entrenching");
    enable_trigger("troops_entrenched");
    enable_trigger("general_entrench");
    enable_trigger("craft_talked_to_death");
    set_timer("progress_check", objective_delay);
  }


  //trigger mouse_over_abilities( sound_finished() ) {
  // WAV: Mouse over the abilities of the general and read the help text to learn about what they do.
  //  play_sound("mouse_over_abilities.wav");

  //  enable_trigger( "talk_about_craft" );
  //}

  //trigger talk_about_craft( sound_finished() ) {
  //  // WAV: Note that each of the abilites costs 500 craft to perform.  Special units, like generals, spies, supply wagons, and 
  //  //      scouts all use craft to perform their abilties.  The amount of craft a unit has appears as a blue bar above the unit.
  //  play_sound("talk_about_craft.wav");
  //  enable_trigger("general_craft");
  //}

  trigger general_entrench( sound_finished() ) {
    clear_all_arrows();
    // WAV: Select the general's entrench ability
    add_objective($S( "Select the general's entrench ability."), "general_entrench", "select_general_entrench.wav");
    highlight_option("Entrench");
    play_objective_sound("general_entrench");
    enable_trigger("troops_entrenched");
    enable_trigger("general_now_entrenching");
    set_timer("progress_check", objective_delay);
  }

  trigger general_now_entrenching( has_cast_order(ENGLISH, english_general_id) && (get_spell_name( ENGLISH, english_general_id ) == "Entrench") && sound_finished() ) {
    // WAV: It takes a few moments for the general to entrench nearby units.
    x_loc = get_button_left("right_window") + 125;
    y_loc = get_button_top("right_window") + 15;
    draw_screen_arrow_line( x_loc - 100, y_loc - 100, x_loc, y_loc, -1 );
    clear_highlight();
    play_sound("entrenching_takes_time.wav");
    enable_trigger("general_show_entrenching");
    set_timer("progress_check", objective_delay);
    enable_trigger("craft_talked_to_death");
  }

  trigger general_show_entrenching( sound_finished() ) {
    // WAV: Look at the bottom right of the screen and you will see the progress.
    play_sound("look_at_entrenching_progress.wav");
    enable_trigger("talk_about_craft_again");
    enable_trigger("craft_talked_to_death");
  }

  trigger talk_about_craft_again( sound_finished() ) {
    clear_all_arrows();
    x_loc = get_button_left("right_window") + 59;
    y_loc = get_screen_height() - 50;
    draw_screen_arrow_line( x_loc, y_loc - 100, x_loc, y_loc, -1 );

    // WAV:  Generals use craft to perform their special abilities.  The amount of craft is displayed in the bottom right corner of the screen
    //       or as the blue bar near the general's health bar.  Our general just used 500 out of his 1000 maximum craft to perform the entrench ability.  
    //       As you can see, the general quickly regenerates craft.
    play_sound("recovering_craft.wav");
    enable_trigger("troops_entrenched");
    enable_trigger("craft_talked_to_death");
    set_timer("progress_check", objective_delay);
  }

  trigger craft_talked_to_death( sound_finished() || !object_selected( ENGLISH, english_general_id ) || num_objects_selected(ENGLISH) > 1 ) {
    clear_all_arrows();
  }

  trigger troops_entrenched( sound_finished() && is_entrenched( ENGLISH, find_military( ENGLISH ) ) ) {
    clear_all_arrows();
    disable_trigger( "talk_about_craft_again");
    disable_trigger("general_show_entrenching");
    disable_trigger("general_now_entrenching");
    //disable_trigger("general_craft");
    objective_complete("general_entrench");

    // WAV: The troups around your general are now entrenched, which you can see by the sandbags around them.  Entrenched units
    //      take cover behind sandbags to reduce the amount of damage they take in battle.  You can cancel 
    //      entrenchment by moving your units.
    play_sound("now_entrenched.wav");

    enable_trigger("queue_german_assault");
    enable_trigger("germans_arrive");
    set_timer("progress_check", objective_delay);
  }
    
  // ===========================
  // end teach general abilities
  // ===========================


  trigger queue_german_assault( sound_finished() ) {
    enable_trigger("germans_attack_paris");

    if( lock_cutscene ) {
      cutscene_begin();
    }

    move_camera( paris_attack_cutscene_x, paris_attack_cutscene_y );
  }

  trigger germans_arrive(  any_object_near( GERMAN, 3, 231, 220, 17 ) ) {

    for( i = 0; i < num_military_units( FRENCH ); i++ ) {
      french_military_id = find_military( FRENCH );
      unit_attack_to_order( FRENCH, french_military_id, 230, 198 );
    }

    // WAV: The germans have arrived!
    play_sound("germans_arrived.wav");
    enable_trigger("french_losing");
  }

  trigger french_losing( num_military_units( FRENCH ) <  8  ) {
    // WAV: This is horrible.  The French were not prepared to deal with the German tanks and their army is getting torn apart.
    play_sound("this_is_horrible.wav");
    enable_trigger("no_chance_for_retreat");
    set_timer( "german_ground_attack", 10 );
  }

  trigger no_chance_for_retreat( sound_finished() ) {
    move_camera( 201, 194 );
    enable_trigger("german_ground_attack_england");
    // WAV: Now the germans have sent a force to capture Calais!  It is our time to battle!
    play_sound("survive_attack.wav");
    enable_trigger("attack_survived");
  }

  trigger attack_survived( !any_object_near( GERMAN, 1, german_english_attack_point_x, german_english_attack_point_y, 10 ) && timer_expired("german_ground_attack") ) {
    // WAV:  Well fought.  We fared better than the french because we were entrenched and had anti-tank weaponry to fend off the German Panzers.
    play_sound("attack_survived.wav");
    enable_trigger("france_fallen");
  }

  trigger france_fallen( sound_finished() ) {
    // WAV: The French army has been routed and Paris will soon fall.  Staying here would be suicide - we are outnumbered
    //      and outgunned by the German troups.  If we can return to England, we can live to fight another day.
    play_sound("paris_captured.wav");
    enable_trigger( "quick_escape" );
  }

  trigger quick_escape( sound_finished() ) {
    // WAV:  We need to quickly retreat to the coast and cross the channel back to England.
    play_sound("quick_escape.wav");
    cutscene_end();
    if( !all_military_selected( ENGLISH) || !object_selected( ENGLISH, english_general_id) ) {
      enable_trigger("select_military_for_escape");   
    } else {
      enable_trigger("learn_forced_march");
    }
    set_timer("progress_check", objective_delay);
  }

  trigger select_military_for_escape( sound_finished() ) {
    add_objective($S("Select all of your military."), "select_military", "select_military_for_escape.wav");
    // WAV:  Select all of your military.
    play_objective_sound("select_military");
    enable_trigger("germans_chase_english");    
    enable_trigger("learn_forced_march");
    set_timer("progress_check", objective_delay);
  }

  trigger learn_forced_march( all_military_selected( ENGLISH ) && object_selected( ENGLISH, english_general_id) ) {
    objective_complete( "select_military");

    // WAV:  The general has an ability that can help speed our retreat.
    play_sound("general_has_an_ability.wav");
    enable_trigger("select_the_forced_march_ability");
    set_timer("progress_check", objective_delay);
  }

  trigger select_the_forced_march_ability( sound_finished() ) {
    highlight_option("forced march");
    add_objective($S( "Select the forced march ability."), "select_forced_march", "select_forced_march.wav");
    // WAV:  Select the forced march ability.
    play_objective_sound("select_forced_march");
    enable_trigger("move_near_dunkirk");
    set_timer("progress_check", objective_delay);
  }

  trigger move_near_dunkirk( general_is_forced_marching( ENGLISH, english_general_id ) ) {
    clear_highlight();
    objective_complete("select_forced_march");
    add_flag( dunkirk_rally_x, dunkirk_rally_y );  
    move_camera( dunkirk_rally_x, dunkirk_rally_y );
    // Now right click near Dunkirk to move your army.
    add_objective($S("Move near Dunkirk for the escape."), "dunkirk_escape", "dunkirk_escape.wav");
    play_objective_sound("dunkirk_escape");
    enable_trigger( "units_moving" );
    set_timer("progress_check", objective_delay);
  }

  trigger units_moving( has_move_order( ENGLISH, english_general_id) ) {
    center_camera_on( ENGLISH, english_general_id );
    // WAV:  The General's forced march ability increases the rate at which nearby units will move.
    //       The range is indicated by a large yellow circle.  If the general's forced march expires,
    //       activate it again until your forces reach the coast.
    play_sound("talk_more_about_forced_march.wav");
    enable_trigger("send_germans_to_smash");
    enable_trigger("evacuate_to_dunkirk");
    set_timer("progress_check", objective_delay);
  }

  //trigger show_dunkirk( sound_finished() ) {

    // WAV: Dunkirk, a port city on the northern coast of France, remains free.
  //  play_sound( "dunkirk_retreat.wav");
  //  enable_trigger("german_anticipation" );
  //}

  //trigger german_anticipation( sound_finished() ) {
  //  center_camera_on( ENGLISH, english_general_id );
  //  // WAV:  The german war machine seems to be idling near Paris and is ignoring us for the time being.  
  //  //       Let us use this oversight to escape to Dunkirk and back to England.
  //  play_sound("german_anticipation.wav");
  //  enable_trigger("general_tricks");
  //}

  //trigger general_tricks( sound_finished() ) {
  //  ui_show();
 //   scrolling_unlock();

  //// WAV: Fortunately, the general has more abilities that we can use to escape to the coast.  
  //  play_sound("general_tricks.wav");

  //  if( object_selected( ENGLISH, english_general_id ) ) {
  //    enable_trigger( "teach_forced_march" );
  //  } else {
  //    enable_trigger( "select_general_yet_again" );
  //  }
  //}

  //trigger select_general_yet_again( sound_finished() ) {
  //  add_objective($S("Select your general."), "select_general_yet_again", "select_general.wav" );
  //  play_objective_sound("select_general_yet_again");
  //  enable_trigger("teach_forced_march");
  //}

  //trigger teach_forced_march( object_selected( ENGLISH, english_general_id ) ) {
  //  objective_complete("select_general_yet_again");

  //  // WAV: The general's force march ability allows the general and units nearby to move very rapidly  This will help us 
  //  //      get to the coast before the Germans can find us.
  //  play_sound("forced_march_info.wav");
  //  enable_trigger("enable_general_forced_march");
  //}

  //trigger enable_general_forced_march( sound_finished() ) {
  //  // WAV: Activate the general's forced march ability.
  //  add_objective($S("Activate the general's forced march ability."), "activate_forced_march", "activate_forced_march.wav");
  //  play_objective_sound("activate_forced_march");
  //  enable_trigger( "limited_time_offer" );
  //}

  //trigger limited_time_offer( general_is_forced_marching( ENGLISH, english_general_id ) ) {
  //  objective_complete("activate_forced_march");
  //  // WAV: The general's forced march ability lasts a limited time, so quickly select your army and move them to the flag near Dunkirk.
  //  add_objective($S("Move all of your units to the flag near Dunkirk."), "evacuate", "limited_time_offer.wav");
  //  play_objective_sound("evacuate"); 
  //  set_timer("forced_march_talk", 7 );
  //  enable_trigger("evaculate_to_dunkirk"); 
  //  enable_trigger("talk_about_forced_march");
  //  enable_trigger("send_germans_to_smash" );
  //}

  trigger send_germans_to_smash( ) {
    enable_trigger("germans_chase_english");
  }

  //trigger talk_about_forced_march( timer_expired( "forced_march_talk") ) {
  //  // WAV: The green circle around the general indicates the effective radius of the general's forced march ability.
  //  //      All the units within the circle move faster than normal.  If the forced march ends, activate it again to keep your troops moving 
  //  //      quickly.
  //  play_sound("talk_about_forced_march.wav");
  //}

  trigger evacuate_to_dunkirk( all_military_near( ENGLISH, dunkirk_rally_x, dunkirk_rally_y, 12 ) ) {
    clear_flags();
    objective_complete("dunkirk_escape");
    // WAV:  We have made it safely to the coast, but the Germans have realized their mistake and are sending their 
    //       forces to capture us before our escape.
    play_sound("dunkirk.wav");
    enable_trigger("move_back_to_dover");
  }

  trigger move_back_to_dover( sound_finished() ) {
    // WAV;  Select your entire army and them back to the Redoubt near Dover.
    add_flag( dover_rally_x, dover_rally_y );
    add_objective($S("Move your entire army back to the redoubt near Dover."), "back_to_dover", "back_to_dover.wav");
    play_objective_sound("back_to_dover");
    enable_trigger("back_to_dover");
    set_timer("progress_check", objective_delay);
  }

  trigger back_to_dover( all_military_near( ENGLISH, dover_rally_x, dover_rally_y, 15 ) ) {
    city_assimilate( GERMAN, $S("Paris"));
    switch_building_type(GERMAN, FRENCH, "Large City");
    defeat(FRENCH);

    clear_flags();
    objective_complete("back_to_dover");

    // WAV: The British forces have been saved by cunning and bravery.  But our time for bravery has not yet ended.
    play_sound("bravery.wav");
    enable_trigger("rambling_speech");
    set_timer("progress_check", objective_delay);
  }

  trigger lost_all_ground_units( ( num_military_units( ENGLISH ) == 0 ) || ( num_type(ENGLISH, "general") == 0) ) {
    // WAV: Alas, your forces were defeated, we will now be in a much worse position to defend against Germany but we must continue on. 
    play_sound("forces_lost.wav");
    disable_all_triggers();
    clear_objectives();
    enable_trigger("rambling_speech");
    center_camera_on( ENGLISH, english_redoubt_id );
    set_timer("progress_check", objective_delay);
  }

  trigger rambling_speech( sound_finished() ) {
    enable_trigger("germans_pull_back");
    disable_trigger("lost_all_ground_units");
    //      blatent, blatent plagarism of Mr. Churchill. 
    // WAV: The Battle of France is over, and the Battle of Britain is about to begin.  All of the enemy's might
    //      will be used to defeat our island of resistance.  If the Nazis conquer
    //      England, Europe, and possibly the world, will fall into a new dark age far more terrible than the last.
    //      If we prevail, our ansestors will say that this was our finest hour.
    play_sound("big_speech.wav");
    enable_trigger("german_invasion_plans");
    set_timer("progress_check", objective_delay);
  }
  
  trigger german_invasion_plans( sound_finished() ) {
    // WAV: The Germans will need to destroy our fortifications along the coast before they can move their ground forces across the channel to attack.
    //      To do this, they will need to establish air superiority over southern England and wipe out our installations with bombers.
    //      Our course of action is clear - we need to build airbases and fighter planes to defend against the impending German air
    //      attack.
    play_sound("german_invasion_plans.wav"); 
    enable_trigger("oil_intro");
  }

  trigger oil_intro( sound_finished() ) {
    move_camera( oil_spot_x, oil_spot_y );
    // WAV: To build airbases and airplanes, we will need to start accumulating oil.
    play_sound("oil_intro.wav"); 
    enable_trigger("learn_about_oil" );
  }

  trigger learn_about_oil( sound_finished() ) {
    // WAV: Oil can be found on rocky areas of the terrain starting at the industrial age.  To start gathering oil, we need to build 
    //      oil wells over these oil deposits.
    play_sound("all_about_oil.wav");
    enable_trigger("build_wells");
  }

  trigger build_wells( sound_finished() ) {
    // WAV: Have your citizens build oil well over each of the three oil deposits.
    add_objective($S("Build an oil well over each of the three oil deposits."), "build_oil_wells", "build_oil_wells.wav");
    play_objective_sound("build_oil_wells");
    highlight_build_option("oil well");
    enable_trigger("wells_built");
    enable_trigger("wells_building");
    set_timer("progress_check", objective_delay);
  }

  trigger wells_building( find_inactive_build( ENGLISH, "oil well" ) ) {
    clear_highlight();
  }

  trigger wells_built( ( num_type( ENGLISH, "oil well" ) >= 3 ) && sound_finished() ) {
    objective_complete("build_oil_wells");
    // WAV: Each oil well generates 50 oil, but we can increase our oil income even more by building an oil refinery.
    play_sound("only_three_oil_wells.wav");
    enable_trigger("enhancer_buildings");
    set_timer("progress_check", objective_delay);
  }

  trigger enhancer_buildings( sound_finished() ) {
    play_sound("talk_about_enhancer_buildings.wav");
    // WAV: Each resource has an enhancer building that increases the production of that resource.
    //      The enhancer building for oil is the refinery.
    //      Build enhancer buildings when you want to improve your production rate but cannot
    //      build any more gather buildings.
    enable_trigger("build_oil_refinery");
  }

  trigger build_oil_refinery( sound_finished() ) {
    // WAV: Build an oil refinery near London to increase our oil production.
    add_objective($S("Build an oil refinery near London to increase our oil production"), "build_oil_refinery", "build_oil_refinery.wav");
    play_objective_sound("build_oil_refinery");
    highlight_build_option( "refinery");

    enable_trigger("refinery_building");
    enable_trigger("refinery_built");
    set_timer("progress_check", objective_delay);
  }

  trigger refinery_building( find_inactive_build( ENGLISH, "refinery" ) ) {
    clear_highlight();
  }

  trigger refinery_built( ( num_type( ENGLISH, "refinery" ) >= 1 ) && sound_finished() ) {
    clear_highlight();
    objective_complete("build_oil_refinery");
    // WAV: Good, now notice that our oil production has substantially increased.
    //      Building enhancer buildings is critical to maximizing the gathering of any resource.
    play_sound("oil_increased.wav");
    enable_trigger("intro_airwar");
    set_timer("progress_check", objective_delay);
  }

  trigger intro_airwar( sound_finished() ) {  
    // WAV:  We have enough oil production to now start creating airbases and airplanes.
    play_sound("intro_air.wav");
    enable_trigger("placing_airbase_strategy");
  }

  trigger placing_airbase_strategy( sound_finished() ) {
    center_camera_on( ENGLISH, find_city_id( "Dover" ) );
    // WAV:  The Germans will most likely attack our fortifications near Dover, so 
    //       we need to set up our airbases so they can easily protect this area.
    play_sound("airbase_strategy.wav");
    enable_trigger("build_airbases");
    set_timer("progress_check", objective_delay);
  }

  trigger build_airbases( sound_finished() ) {
    // WAV: Have your citizens build two airbases near Dover.  
    center_camera_on( ENGLISH, find_idle_citizen( ENGLISH ) );
    add_objective($S("Build two airbases near Dover."), "two_airbases", "build_airbases.wav");
    play_objective_sound("two_airbases");
    highlight_build_option( "airbase" );
    enable_trigger( "airbase_building" );
    enable_trigger( "airbases_complete" );
    set_timer("progress_check", objective_delay);
  }

  trigger airbase_building( find_inactive_build( ENGLISH, "airbase" )  ) {
    clear_highlight();
  }

  trigger airbases_complete( num_type( ENGLISH, "airbase") >= 2 ) {
    english_airbase_one   = find_build( ENGLISH, "airbase" );
    english_airbase_two   = find_build( ENGLISH, "airbase" );

    objective_complete("two_airbases");

    enable_trigger("start_building_fighters");
    set_timer("progress_check", objective_delay);
  }

  trigger start_building_fighters( sound_finished() ) {
    // WAV: Now that we have some airbases, we should begin building an airforce to defend England.
    play_sound("built_airbases.wav");

    if( object_type_selected( ENGLISH, "airbase" ) ) {
      enable_trigger("talk_about_planes");
    } else {
      enable_trigger("select_airbase");
    }
    set_timer("progress_check", objective_delay);
  }

  trigger select_airbase( sound_finished() ) {
    // WAV: Select one of your airbases.
    add_objective($S("Select one of your airbases."), "select_airbase", "select_airbase.wav");
    play_objective_sound("select_airbase");
    enable_trigger("talk_about_planes");
    set_timer("progress_check", objective_delay);
  }

  trigger talk_about_planes( object_type_selected( ENGLISH, "airbase" ) && sound_finished() ) {
    objective_complete("select_airbase");
    // WAV: There are two kinds of airplanes can be built at an airbase, fighters and bombers. 
    //      Bombers can deal large amounts of damage to structures on the ground.  Fighters are best at attacking bombers
    //      and other fighters.  Since the germans will likely send in bombers to bomb our cities and airfields, we need
    //      to build fighters to defend against them.    
    play_sound("talking_about_planes.wav");
    enable_trigger("build_one_plane");
    set_timer("progress_check", objective_delay);
  }

  trigger build_one_plane( sound_finished() ) {
    highlight_train_option("fighter");
    // WAV: Build one fighter at this airbase.
    add_objective($S("Build one fighter at this airbase."), "build_one_fighter", "build_fighter.wav");
    play_objective_sound("build_one_fighter");
    enable_trigger("one_fighter_built");
    enable_trigger("fighter_building");
    enable_trigger("bomber_clear");
    enable_trigger("bombers_queued_early");
    set_timer("progress_check", objective_delay);
  }

  trigger fighter_building( num_type_queued( ENGLISH, find_build( ENGLISH, "airbase" ), "fighter" ) ) {
    clear_highlight();
  }

  trigger one_fighter_built( num_type( ENGLISH, "fighter" ) >= 1 ) {
    clear_highlight();
    objective_complete("build_one_fighter");
    english_fighter_id = find_all_unit( ENGLISH, "fighter" );

    
    // WAV:  When airplanes are created they remain in the airbase until you send them out.  
    //       The fighter you have created is shown on the bottom right as ready to go.
    play_sound("airplanes_stay_in_airbase.wav");
    enable_trigger("talk_about_patrol");
    set_timer("progress_check", objective_delay);
  }

  trigger talk_about_patrol( sound_finished() ) {
    // WAV: One of the best uses of fighters is to send them out to patrol the area to defend against incoming aircraft.
    play_sound("patrol.wav");

    valid_selection = false;

    if( object_type_selected( ENGLISH, "airbase" ) ) {
      enable_trigger("select_fighter");
      valid_selection = true;
    }

    if( object_type_selected( ENGLISH, "fighter" ) ) {
      enable_trigger("fighter_selected");
      valid_selection = true;
    }
  
    if( !valid_selection ) {
      enable_trigger("select_airbase_again");
    }
    set_timer("progress_check", objective_delay);
  }

  trigger select_airbase_again( sound_finished() ) {
    // WAV: Select the airbase where you built the fighter.
    add_objective($S("Select the airbase where you built the fighter."), "select_airbase", "select_airbase_with_fighter.wav" );
    play_objective_sound("select_airbase");
    enable_trigger("select_fighter");
    set_timer("progress_check", objective_delay);
  }

  trigger select_fighter( object_type_selected( ENGLISH, "airbase") ) {
    objective_complete("select_airbase");
    // WAV: Select the fighter on the right side of the screen
    add_objective($S("Select the fighter on the right side of the screen."), "select_fighter", "select_fighter.wav");
    play_objective_sound("select_fighter");
    enable_trigger("fighter_selected");

    x_loc = get_button_left("right_window") + 295;
    y_loc = get_button_top("right_window");

    draw_screen_arrow_line(x_loc - 100, y_loc - 100, x_loc, y_loc, -1);  
    set_timer("progress_check", objective_delay);
  }

  trigger fighter_selected( object_type_selected( ENGLISH, "fighter" ) ) {
    objective_complete("select_fighter");
    clear_all_arrows();

    // WAV: The left control area shows the actions available to the fighter plane.  Select the airstrike button.
    highlight_option("Air Mission");
    add_objective($S("Select the Air Mission button."), "select_patrol", "select_patrol.wav");
    play_objective_sound("select_patrol");
    enable_trigger("set_patrol_point");
    set_timer("progress_check", objective_delay);
  }

  trigger set_patrol_point( is_airstrike_selected() ) {
    clear_highlight();
    objective_complete("select_patrol");

    move_camera( patrol_point_x, patrol_point_y );
    add_flag( patrol_point_x, patrol_point_y );
    ping( ENGLISH, ENGLISH, patrol_point_x, patrol_point_y );

    // WAV: Left click near the flag in the English channel to set the plane's destination.
    add_objective($S("Left click near the flag to set the patrol point."), "left_click_on_flag", "left_click_on_flag.wav");
    play_objective_sound("left_click_on_flag");
    enable_trigger("patrol_set");
    enable_trigger("patrol_lost");
    set_timer("progress_check", objective_delay);
  }

  trigger patrol_lost( !is_airstrike_selected() && is_idle( ENGLISH, english_fighter_id ) ) {
    // WAV: Right clicking clears the selection.  Select airstrike again and left click on the target to set the airplane to patrol.
    play_sound("right_clicking_clear.wav");
  }

  trigger patrol_set( has_patrol_order( ENGLISH, english_fighter_id ) ) {
    clear_flags();
    center_camera_on( ENGLISH, english_fighter_id );
    disable_trigger("patrol_lost");
    objective_complete("left_click_on_flag");
    // WAV: Providing an airstrike order to a vacant part of the map will put the plane on a patrol.
    //      Watch your fighter as it flies off to patrol the area.  Patrolling fighters will fly between their airbase and patrolling point
    //      and attack any unit that comes into range.  This will help us keep a look out for when the German lufewaffe attacks.
    play_sound("info_about_patrol.wav");
    enable_trigger("talk_about_fuel");
    set_timer("progress_check", objective_delay);
  }

  trigger talk_about_fuel( sound_finished() ) {
    // WAV: Airplanes have a limited amount of fuel, shown by the blue bar over the fighter's health.  
    //      When an airplane's fuel is depleted, they will fly directly back to their home airbase to refuel.
    play_sound("talk_about_fuel.wav");
    enable_trigger("fighter_landed");
  }

  trigger fighter_landed( sound_finished() ) {
    // WAV: After your fighter lands, it will take some time to rearm and refuel from the journey, then head out to patrol again.
    play_sound("refuel.wav");
    //enable_trigger("build_more_fighters");
    enable_trigger("fighter_reinforcements");
  }

  trigger fighter_reinforcements( ) {
    transfer_airbase_id = find_build( ENGLISH, "airbase" );
    planes_needed       = 5 - num_garrisoned_in( ENGLISH, transfer_airbase_id );
    if( planes_needed ) {
      placement_x = fighter_reinforcement_x;
      placement_y = fighter_reinforcement_y;
      for( i = 0; i < planes_needed; i++ ) {
        fighter_id = create_unit( ENGLISH, placement_x, placement_y, "fighter", 1);
        air_unit_transfer_order( ENGLISH, fighter_id, find_build( ENGLISH, "airbase") );
        placement_x = placement_x + 3;
        placement_y = placement_y + 3;
      }

      fighter_zoom_id = fighter_id;
    }

    transfer_airbase_id = find_build( ENGLISH, "airbase" );
    planes_needed       = 5 - num_garrisoned_in( ENGLISH, transfer_airbase_id );
    if( planes_needed ) {
      placement_x = fighter_reinforcement_x;
      placement_y = fighter_reinforcement_y;
      for( i = 0; i < planes_needed; i++ ) {
        fighter_id = create_unit( ENGLISH, placement_x, placement_y, "fighter", 1);
        air_unit_transfer_order( ENGLISH, fighter_id, find_build( ENGLISH, "airbase") );
        placement_x = placement_x + 3;
        placement_y = placement_y + 3;
      }
    }

    enable_trigger("announce_fighter_reinforcements");
  }

  trigger announce_fighter_reinforcements( sound_finished() ) {
    // WAV:  Some fighter planes from Northern England have arrived to help us in our battle against the Nazis.  
    play_sound("fighters_arrived.wav");

    fighter_id = find_unit(ENGLISH, "fighter");

    if (fighter_id >= 0) {
      cutscene_begin();
      center_camera_on(ENGLISH, fighter_zoom_id);
    }

    enable_trigger("build_more_fighters");
  }

  trigger build_more_fighters( sound_finished() ) {
    cutscene_end();
    // WAV: We still need more fighters for the battle.  Build enough fighters in each airbase so that you have 10 in each.
    add_objective($S("Build 10 fighters in each of your airbases."), "build_fighters", "build_fighters.wav");
    center_camera_on(ENGLISH, find_build(ENGLISH, "airbase"));
    play_objective_sound("build_fighters");
    enable_trigger("fighters_built");
    set_timer("progress_check", objective_delay);
  }
  
  trigger bomber_clear( num_type( ENGLISH, "lancaster bomber" ) ) {
    kill_unit_type( ENGLISH, "lancaster bomber");
    enable_trigger("bomber_clear");
    oops_bombers = true;
  }

  trigger bombers_queued_early( oops_bombers ) {
    // WAV: You tried to build a lancaster bomber.  These bombers wreck havoc on ground targets, but 
    //      are defenseless against the incoming german fighters.  Focus on building fighters to attack german airplanes.
    play_sound("oops_bombers.wav");
  }

  trigger fighters_built( building_full( ENGLISH, english_airbase_one ) && building_full( ENGLISH, english_airbase_two ) && ( num_unit_category( ENGLISH, "air") >= 20 ) ) {
    objective_complete("build_fighters");

    // WAV: The british royal air force is complete.  We want to have all your fighters patrolling near the coast of Dover so we can defend the 
    //      German air attack no matter where it comes from.  
    play_sound("baf.wav");
    enable_trigger("all_patrol");
    set_timer("progress_check", objective_delay);
  }

  trigger all_patrol( sound_finished() ) {
    // WAV: Select all of your fighters in each airbase, and set them to patrol by using airstrike and selecting a location near Dover.
    add_objective($S("Use the airstrike command to send your fighters out to patrol the English channel."), "patrol_english_channel", "patrol_channel.wav");
    play_objective_sound("patrol_english_channel");
    enable_trigger( "all_fighters_on_patrol" );  
    set_timer("progress_check", objective_delay);
  }

  trigger all_fighters_on_patrol( all_type_patrolling( ENGLISH, "fighter" ) ) {
    objective_complete("patrol_english_channel");

    // WAV:  Excellent.  Now we are ready for the German attack.
    play_sound("ready_for_attack.wav");

    enable_trigger("german_england_air_attack");
    enable_trigger("germans_attack_britian");
    set_timer("progress_check", objective_delay);
  }

  trigger germans_attack_britian( object_type_near_build( GERMAN, "fighter", 1, ENGLISH, english_redoubt_id, 15 ) ) {
    // WAV:  The Germans are here.  It is up to our airforce now!  
    play_sound("germans_attack.wav");
    enable_trigger("germans_defeated");
  }

  trigger germans_defeated( num_type( GERMAN, "bomber" ) <= 0 ) {
    // WAV:  The German air invasion has been stopped!  England has been saved!
    play_sound("england_saved.wav");

    for( i = 0; i < num_type( GERMAN, "fighter"); i++ ) {
      fighter_id = find_all_unit( GERMAN, "fighter" );
      unit_clear_orders( GERMAN, fighter_id );
    }
    
    enable_trigger( "kill_german_fighter" );
    enable_trigger("start_bombing_campaign");
    set_timer("progress_check", objective_delay);
  }

  trigger kill_german_fighter( find_inside_unit( GERMAN, "fighter" ) ) {
    kill_unit( GERMAN, find_inside_unit( GERMAN, "fighter" ) );

    if( num_type( GERMAN, "fighter" ) > 0 ) {
      enable_trigger("kill_german_fighter");
    }
  }

  trigger start_bombing_campaign( sound_finished() ) {
    disable_trigger("bombers_queued_early");
    disable_trigger("bomber_clear");
    // WAV:  Now we can start a bombing campaign of our own.  We need to destroy the
    //       German airbases along the coast of France so that the German's won't be able to send any more attacks our way.

    play_sound("stop_german_counterattack.wav");
    enable_trigger("build_another_airbase");
    english_airbase_count = num_type( ENGLISH, "airbase" );
    set_timer("progress_check", objective_delay);
  }

  trigger build_another_airbase( sound_finished() ) {
    // WAV: Build another airbase near dover.
    add_objective($S("Build another airbase near Dover."), "build_another_airbase", "build_another_airbase.wav");
    play_objective_sound("build_another_airbase");

    enable_trigger("built_another_airbase");
    set_timer("progress_check", objective_delay);
  }

  trigger built_another_airbase( num_type( ENGLISH, "airbase" ) > english_airbase_count ) {
    objective_complete("build_another_airbase");
    // WAV: Now at the airbase lets build 10 lancaster bombers to prepare for our attack. 
    add_objective($S("Build 10 lancaster bombers at the airbase"), "build_bombers", "build_bombers.wav");
    play_objective_sound("build_bombers");
    enable_trigger( "bombers_built" );
    set_timer("progress_check", objective_delay);
  }

  trigger bombers_built( num_type( ENGLISH, "lancaster bomber") >= 10 ) {
    objective_complete("build_bombers");
    // WAV: Good, now left click on your lancaster bombers to select them. 
    add_objective($S("Left click on your Lancaster Bombers to select them."), "select_your_bombers", "select_bombers.wav");
    play_objective_sound("select_your_bombers");
    enable_trigger("bombers_selected");
    set_timer("progress_check", objective_delay);
  }

  trigger bombers_selected( object_type_selected( ENGLISH, "lancaster bomber" ) ) {
    objective_complete("select_your_bombers");
    add_reveal_point(ENGLISH, german_airbase_show_x, german_airbase_show_y, 25);

    // move camera over French airstript
    move_camera( german_airbase_show_x, german_airbase_show_y );

    // WAV: One quick way to assign airplanes to perform an airstrike is by right clicking on a target.
    play_sound("teach_rclick_airstrike.wav");

    /*
    // WAV: Select "air strike" from the bombers options menu.  This will send the lancaster bombers to attack a specific target.  
    add_objective($S("Select air strike"), "select_air_strike", "select_air_strike.wav");
    play_objective_sound("select_air_strike");
    */
    enable_trigger("air_strike_selected");
    set_timer("progress_check", objective_delay);
  }

  trigger air_strike_selected( sound_finished() ) {
    //objective_complete("select_air_strike");

    // WAV:  Right click on the airbase to send your lancaster bombers in to destroy it.
    add_objective($S("Right click on the airbase to send your bombers to attack."), "rclick_on_airbase", "rclick_on_airbase.wav");
    play_objective_sound("rclick_on_airbase");
    enable_trigger( "airbase_targetted" );
    set_timer("progress_check", objective_delay);
  }
  
  trigger airbase_targetted( all_type_attacking( ENGLISH, "lancaster bomber" ) ) {
    objective_complete("rclick_on_airbase");
    // WAV: When you select airstrike and designate a unit or building, planes will fly directly to the target and attack.
    play_sound("about_airstrike.wav");
    add_objective($S("Destroy the German airfield."), "destroy_german_airfield", "" );
    enable_trigger("airbases_destroyed");
    set_timer("progress_check", objective_delay);
  }

  trigger airbases_destroyed( num_type( GERMAN, "airbase" ) <= 1 ) {
    objective_complete("destroy_german_airfield");
    play_sound("victory.wav");
    // WAV: Excellent work!  We have defeated the Germans in the Battle of Britian and started bringing the war back to them.
    //      It is a long road ahead, but I'm sure we will prevail!
    enable_trigger("you_win");
    clear_reveal_points(ENGLISH);
    set_timer("progress_check", objective_delay);
  }

  trigger you_win( sound_finished() ) {
    victory( ENGLISH );
  }

  trigger all_military_lost( num_military_units( ENGLISH ) < 1 ) {
    victory( GERMAN );
  }


  /*
  trigger blah(  ) {
    objective_complete("");
    add_objective("", "", ".wav" );
    play_objective_sound("");
    enable_trigger("");
  }
  */
}
