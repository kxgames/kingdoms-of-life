// Josh Mitnick

/*******************************************************
Scenario 2 - Alfred the Great vs. the Danes

Map: Three British cities, one behind the other: in the
east is London, then Ethandun, then a swamp city to be
named later. A fort guards the entrance to the swamps
from the Danes.

Setup: Classical Age. While the background is being
delivered, the Danes come from London to attack Alfred's
first city, Ethandun. The shattered remnants of his forces
(including a few peasants) retreat past the fort to the
second city. Once Ethandun and London are in fog of war,
towers are built by the Danes along the most direct line.

********************************************************/

include "tut_lib.bhs"

scenario {

  labels {
    HUMAN = 1,
    COMPUTER = 2, 
  }

  labels {
    LOOKOUT_X          = 61,
    LOOKOUT_Y          = 97,
    STARTING_CIV_ID    = 0,
    BARRACKS_X         = 56,
    BARRACKS_Y         = 114,
  }

  static ethandun_id          = find_city_id($S("Ethandun"));
  static carlisle_id          = find_city_id($S("Carlisle"));
  static ethandun_x           = object_position_x( HUMAN, ethandun_id );
  static ethandun_y           = object_position_y( HUMAN, ethandun_id );
  static objective_delay      = 40;
  static first_javelineers_id  = -1;
  static barracks_id          = -1;
  static human_barracks_x     = -1;
  static human_barracks_y     = -1;
  static siege_factory_id     = -1;
  static javelineers_complete = false;
  static phalanx_complete     = false;
  static longbowmen_complete  = false;
  static archers_complete     = false;
  static catapults_complete   = false;
  static player_has_queued    = false;
  static mini_map_x           = get_button_center_x("mid_window");
  static mini_map_y           = get_button_top("mid_window");
  static general_id           = find_unit(COMPUTER, "general");
  static lighthorse_id        = find_unit(HUMAN, "light horse");
  static explore              = false;
  static current_selection_id = -1;

  run_once {
    set_type_build_time("Phalanx", type_build_time("Phalanx") / 6 );
    set_type_build_time("Longbowmen", type_build_time("Longbowmen") / 6 );
    set_type_build_time("Javelineers", type_build_time("Javelineers") / 2 );
    set_type_build_time("Siege Factory", type_build_time("Siege Factory") / 2 );
    set_type_build_time("Barracks", type_build_time("Barracks") / 1.5 );
    bubble_text_hide();
    disable_all_triggers ();
    enable_trigger("Intro");
    gain_upgrade(HUMAN, "Phalanx");
    gain_upgrade(HUMAN, "Longbowmen");
    disable_type("Explorer");
    disable_type("Tower");
    gain_upgrade(HUMAN, "Javelineers");
    disable_type("Elite Javelineers");
    disable_type("Pikemen");
    disable_type("King's Longbowmen");
    disable_type("Explorer");
    set_auto_peasant_level(3);
    set_seen (COMPUTER, HUMAN, ethandun_id);
    set_explored( HUMAN, 79, 92, 15);
    cutscene_begin();
    show_all_map_enable(HUMAN);
  }
  //=======================================================

  /**************************************
              Script Triggers
  **************************************/

  trigger Objective_Reminder( timer_expired("progress_check") && sound_finished() ) {
    clear_all_arrows();
    right = get_objectives_right();
    top   = get_objectives_top();

    if (right >= 0 && top >= 0) {
      draw_screen_arrow_line( right + 75, top - 75, right, top, 10 );
      play_sound("objective.wav");
      if(objective_delay < 300) {
       objective_delay = objective_delay * 2;
      } else {
       objective_delay = 300;
      }

    }
    set_timer("progress_check", objective_delay);
    enable_trigger("Objective_Reminder");
  }

  //Intro=====================================================
  trigger Intro () {
    /*
    for (count = 0; count < num_military_units(COMPUTER); count++) {
      id = find_military(COMPUTER);
      unit_attack_order(COMPUTER, id, HUMAN, ethandun_id);
    }
    */
    
    play_sound ("intro.wav");
    //"For years, the Vikings have been terrorizing"
    //"the east coast of Britain. Alfred, King of Wessex, has been"
    //"paying tribute to stave off the attacks, but in 878 the"
    //"Vikings decide to conquer Wessex. After a defeat at"
    //"Ethandun, Alfred retreats to the swamps near Carlisle to"
     //rebuild his forces and prepare to drive the Vikings away.");*/

    enable_trigger("Ethan_gone");
    enable_trigger("lighthorse_arrived");
    enable_trigger("general_move");
    //enable_trigger("general_attack");
    enable_trigger("catapult_move");
    enable_trigger("catapult_attack");
    enable_trigger("barbarians_gone");    
    //enable_trigger ("explore_timer");
    enable_trigger("barbarians_attack2");
    enable_trigger("barbarians_attack");
    enable_trigger("archer_attack");
  }

  //move the lighthorse to warn the citizens
  run_once{
    unit_move_order(HUMAN, lighthorse_id, 79, 92 );
  }

  //the lighthorse triggers the citizens to move but only those within the defined radius of ethandun
  trigger lighthorse_arrived( object_near(HUMAN, lighthorse_id, 79, 92, 1 ) ) {
    //lighthorse runs away with the citizens
    unit_move_order(HUMAN, lighthorse_id, 88,107 );
    num = num_type( HUMAN, "citizen" );
    for( i = 0; i < num ; i++ ) {
      citizen_id = find_unit(HUMAN, "citizen" );
      if (object_near_build(HUMAN, citizen_id, HUMAN, ethandun_id , 20)) {
       unit_move_order( HUMAN, citizen_id, 88, 107 );
      }
    }
  }

  //Have the general move to a spot, then he does his rally just to make it 
  //look like he is signalling the troops
  trigger general_move( object_near(HUMAN, lighthorse_id, 79, 92, 4 ) ) {
    unit_waypoint_order(COMPUTER, general_id, 82,88 );
  } 

  //Move in catapults and have them attack-no delay because they have to unpack
  run_once{
    num = num_type( COMPUTER, "catapult" );
    for( i = 0; i < num ; i++ ) {
      catapult_id = find_unit(COMPUTER, "catapult" );
      unit_move_order( COMPUTER, catapult_id, 88, 91 );
    }
  }
  
  //second move order
  trigger catapult_move( object_near(COMPUTER, find_unit(COMPUTER, "catapult"), 88, 91, 5 ) ) {
    num = num_type( COMPUTER, "catapult" );
    for( i = 0; i < num ; i++ ) {
      catapult_id = find_unit(COMPUTER, "catapult" );
      unit_move_order( COMPUTER, catapult_id, 83, 85 );
    }   
  }

  trigger catapult_attack( object_near(COMPUTER, find_unit(COMPUTER, "catapult"), 83, 85, 1 ) ) {
    num = num_type( COMPUTER, "catapult" );
    for( i = 0; i < num ; i++ ) {
      catapult_id = find_unit(COMPUTER, "catapult" );
      unit_attack_order(COMPUTER, catapult_id, HUMAN, ethandun_id);
    }   
  }

  //lighthorse runs south and triggers the barbarians to move in for the kill  
  trigger barbarians_attack( object_near(HUMAN, lighthorse_id, 79, 92, 1 ) ){
    num = num_type( COMPUTER, "barbarians" );
    for( i = 0; i < num ; i++ ) {
      barbarians_id = find_unit(COMPUTER, "barbarians" );
      unit_attack_to_order(COMPUTER, barbarians_id, 74, 92);
      //unit_attack_order(COMPUTER, barbarians_id, HUMAN, lighthorse_id);
    }
   
  }

  //lighthorse runs south and triggers the archers to move in for the kill  
  trigger archer_attack( object_near(HUMAN, lighthorse_id, 82, 97, 5 ) ){
    num = num_type( COMPUTER, "archers" );
    for( i = 0; i < num ; i++ ) {
      archers_id = find_unit(COMPUTER, "archers" );
      unit_move_order(COMPUTER, archers_id, 74, 92);
    }
    
  }
  
  //archers reach the city and trigger the barbarians to attack the city  
  trigger barbarians_attack2( object_near(COMPUTER, find_unit(COMPUTER, "archers"), 74, 92, 5 ) ){
    damage_object (HUMAN, ethandun_id, 98);
    //Deal a bunch of damage to the city
    num = num_type( COMPUTER, "barbarians" );
    for( i = 0; i < num ; i++ ) {
      barbarians_id = find_unit(COMPUTER, "barbarians" );
      unit_attack_order(COMPUTER, barbarians_id, HUMAN, ethandun_id);
    }
    
  } 

  //The city has fallen-the catapults, archers and some barbarians pull out first heading for the LONDON area
  trigger Ethan_gone (city_captured (HUMAN, $S("Ethandun"))) {
    for (scan = 0; scan < num_military_units(COMPUTER); scan++) {
      add_to_group(COMPUTER, find_military(COMPUTER));
    }

    group_stance_order(COMPUTER, "defensive");
    clear_group(COMPUTER);

    num = num_type( COMPUTER, "catapult" );
    for( i = 0; i < num ; i++ ) {
      catapult_id = find_unit(COMPUTER, "catapult" );
      add_to_group(COMPUTER, catapult_id);
    }
   
    num = num_type( COMPUTER, "barbarians") - 3;
    for( i = 0; i < num ; i++ ) {
      barbarians_id = find_unit(COMPUTER, "barbarians");
      add_to_group(COMPUTER, barbarians_id);
    }
    

    num = num_type( COMPUTER, "archers" );
    for( i = 0; i < num; i++ ) {
      archers_id = find_unit(COMPUTER, "archers" );
      add_to_group(COMPUTER, archers_id);
      disable_unit_ai( COMPUTER, archers_id );
    }
    
    for( i = 0; i < num_type( COMPUTER, "general"); i++ ) {
      general_id = find_unit( COMPUTER, "general");
      add_to_group(COMPUTER, general_id);
    }

    group_move_order(COMPUTER, 129, 30);

    //Timer for making danes visible to HUMAN
    explore=true;
    set_timer ( "explore" , 8 );
    enable_trigger("barbarians_gone");
  }
  
  //==========================================================

  //Once the barbarians have left the scenario continues
  trigger barbarians_gone( timer_expired("explore")  ) {

    show_all_map_disable(HUMAN);
    city_assimilate(COMPUTER, $S("Ethandun"));
    disable_all_unit_ai(HUMAN);  // to prevent if catapults are created near the border from defeating ethandun
    disable_all_unit_ai(COMPUTER);
    explore = false;
    cutscene_end();
    //popup_dialog ("", "The Danes have captured Ethandun.  We must have revenge!");
    //center_camera_on (HUMAN, carlisle_id);
    move_camera (48, 116);
    play_sound ("lostethan.wav");
    set_timer("progress_check",objective_delay);
    enable_trigger ("Objective_Reminder");
    /***WAV: "The Vikings now control Ethandun. Before we can"
    "rally the nation, we must retake that city. Our first goal is"
    "to scout the Viking position and find a route for our attack."***/
    enable_trigger("lost_citizens");
    enable_trigger ("Lookout_tower");
    enable_trigger("captured_city");
  }

  trigger lost_citizens( ( num_type( HUMAN, "citizen") == 0 ) && sound_finished() ) {
    victory( COMPUTER ); 
  }

  //Scouting and lines of sight===============================
  trigger Lookout_tower (sound_finished ()) {
    //kill_percent_of_military (COMPUTER, 60); - don't need because most troops now leave ethandun
    //popup_dialog ("", "Click OK to continue");
    play_sound ("keepwatch.wav");
  /***WAV: We need to keep watch on the Danish preparations and
           defenses. A Lookout is needed as close to the Danes
           as possible.***/
    enable_trigger ("Good_spot");
    enable_trigger("Select_tower");
    enable_trigger("is_tower_building");
    enable_trigger("is_Lookout_built");
    set_timer("progress_check",objective_delay);
  }

  trigger Good_spot (sound_finished ()) {
    //popup_dialog ("", "Click OK to continue");
    ping (1, 1, LOOKOUT_X, LOOKOUT_Y);
    move_camera (LOOKOUT_X, LOOKOUT_Y);
    play_sound ("goodspot.wav");
  /***WAV: "This is a good spot for the lookout-close enough"
      "to see what's happening, but not so close that they'll notice it"
      "and attack. Now we'll learn how to construct new buildings."***/
    enable_trigger ( "citizen");
    set_timer("progress_check",objective_delay);
  }

  trigger citizen (sound_finished ()) {
    ping_object (1, 1, 1, STARTING_CIV_ID);
    center_camera_on (HUMAN, STARTING_CIV_ID);
    add_objective($S("Select this citizen by left-clicking on him."), "select_citizen", "citizen.wav");
    play_objective_sound("select_citizen");
  /***WAV: Citizens construct buildings. To build a Lookout, first select this citizen.***/
    enable_trigger ("Select_citizen");
    set_timer("progress_check",objective_delay);
  }

  trigger Select_citizen (object_selected (HUMAN, STARTING_CIV_ID)) {
    objective_complete("select_citizen");
    play_sound ("lowerleft.wav");

    build_display_left = get_button_right("left_window");
    build_display_top  = get_button_top("left_window");
    draw_screen_arrow_line( build_display_left + 100, build_display_top - 100, build_display_left, build_display_top, 0 );
 
  /***WAV: In the lower left corner of the screen are buttons"
      "showing everything the citizen can do."***/
    enable_trigger ("Click_build_military");
    set_timer("progress_check",objective_delay);
  }

  trigger Click_build_military (sound_finished ()) {
    clear_all_arrows();
    add_objective($S("Click the Military Buildings button."), "military_menu", "clickmilitary.wav");
    play_objective_sound("military_menu");
    highlight_build_option ("Lookout");
  /***WAV: Click the Build Military button to access a menu of building choices, one of which is the Lookout."***/
    enable_trigger ("Military_menu_active");
    set_timer("progress_check",objective_delay);
  }

  trigger Military_menu_active (build_military_menu_active ()) {
    objective_complete("military_menu");
  // Select the highlighted Build Lookout button.
    add_objective($S("Select Build Lookout."), "select_lookout", "selecttower.wav" );
    play_objective_sound("select_lookout");
    enable_trigger ("Select_tower");
    set_timer("progress_check",objective_delay);
  }

  trigger Select_tower (build_option_selected ("Lookout")) {
    clear_objectives();
    clear_all_arrows();
    move_camera (LOOKOUT_X, LOOKOUT_Y);
    ping_constant (HUMAN, LOOKOUT_X, LOOKOUT_Y);
    add_objective($S("Left click on the target marker"),"place_lookout", "selecttower2.wav");
    play_objective_sound ("place_lookout");
  /***WAV: You can place the Lookout with your mouse"
      "Click near the target marker to have"
      "your citizens begin construction there.***/
    enable_trigger ("is_tower_building");
    enable_trigger ("tower_deselected");
    disable_trigger("Progress_bar");
    disable_trigger("citizen");
    disable_trigger("Select_citizen");
    disable_trigger("Progress_bar");
    disable_trigger("Click_build_military");
    disable_trigger("Military_menu_active");
    set_timer("progress_check",objective_delay);
  }
  
  trigger tower_deselected( !build_option_selected("Lookout") && !find_inactive_build( HUMAN, "Lookout") && sound_finished() ) {
    // WAV:  Right clicking when trying to place a building will clear the selection.  To place a building, 
    //       you need to select the building then left click on the location that you want to place it in.
    play_sound("building_deselected.wav");
  }

  trigger is_tower_building (find_inactive_build (HUMAN, "Lookout")) {
    disable_trigger("tower_deselected");
    clear_pings(HUMAN);
    clear_all_arrows();
    clear_objectives();
    play_sound ("civwillmove.wav");
  /***WAV: There! Now the citizen will move to that site"
      "and begin construction.***/
    enable_trigger ("Progress_bar_check");
    disable_trigger("Good_spot");
    disable_trigger("citizen");
    disable_trigger("Select_citizen");
    disable_trigger("Click_build_military");
    disable_trigger("Military_menu_active");
    disable_trigger("Select_tower");
    clear_highlight();
    set_timer("progress_check",objective_delay);
  }

  trigger Progress_bar_check( object_type_near_build( HUMAN, "Citizen", 1, HUMAN, find_inactive_build( HUMAN, "Lookout"), 1) ) {
    set_timer( "progress_bar_timer", 3 );
    enable_trigger("Progress_bar");
  }

  trigger Progress_bar ( timer_expired("progress_bar_timer") ) {
    // point to progress bar 
    x_loc = get_button_left("right_window") + 135;
    y_loc = get_button_top("right_window") + 15;
    draw_screen_arrow_line( x_loc - 100, y_loc - 100, x_loc, y_loc, -1 );   
      /***WAV: You can see how soon a building will be finished by looking at the progress bar"
    that appears when it begins construction.***/
    play_sound ("progressbar.wav");
    enable_trigger ("is_Lookout_built");
    current_selection_id = find_selected_id(HUMAN);
    enable_trigger ("inactive_lookout_deselected");
    set_timer("progress_check",objective_delay);
  }

  trigger inactive_lookout_deselected((find_selected_id(HUMAN) != current_selection_id) && (find_selected_id(HUMAN) != find_inactive_build(HUMAN, "Lookout"))) {
    clear_all_arrows();
  }

  trigger is_Lookout_built (find_build (HUMAN, "Lookout")) {
    disable_trigger("inactive_lookout_deselected");
    clear_all_arrows();
    if (!object_near(HUMAN, find_build(HUMAN, "Lookout"), LOOKOUT_X, LOOKOUT_Y, 5)) {
      play_sound ("lookoutbuilt2.wav");
  /***WAV: Unfortunately you built the tower too far away from"
      the Vikings to assess their position. Nevertheless, it's time"
      to build an army!***/
    } else {
      play_sound ("lookoutbuilt.wav");
  /***WAV: Now we can see what's going on near the"
      "Viking position. It's time to build an army!***/
    }
    disable_trigger("Good_spot");
    disable_trigger("citizen");
    disable_trigger("Select_citizen");
    disable_trigger("Progress_bar");
    disable_trigger("Click_build_military");
    disable_trigger("Military_menu_active");
    disable_trigger("Select_tower");

    enable_trigger ("Army_time");
    set_timer("progress_check",objective_delay);
  }
  
  trigger Army_time (sound_finished ()) {
    play_sound ("barrackstime.wav");
  /***WAV: To retake Ethandun, we'll need troops. To get them,"
      "we need to construct a Barracks. You can order multiple"
      "citizens to work on the same building, and they'll build it faster,"
      "so let's order several citizens to build a barracks."***/
    enable_trigger ("Multiselect");
    enable_trigger("Multiselected");
    enable_trigger("Build_barracks");
    enable_trigger("barracks_building");
    enable_trigger("Barracks_built");
    set_timer("progress_check",objective_delay);
  }

  trigger Multiselect (sound_finished ()) {
    add_objective($S("Select more than one Citizen using a drag-select box."),"multi_citizen", "select_citizen.wav");
    play_objective_sound("multi_citizen");
  /***WAV: Select more than one Citizen***/
  }

  trigger Multiselected (num_object_type_selected (HUMAN, "Citizen") > 1) {
    disable_trigger("Multiselect");
    clear_objectives();
  /***WAV: When you give an order to a group, everyone in the group will perform that order. Order the citizens to Build Military.***/
    add_objective($S("Order the group to build a military building by clicking the Military Building button."), "choose_military","build_military.wav");
    play_objective_sound("choose_military");
    highlight_build_option ("Barracks");
    set_timer("progress_check",objective_delay);
  }

  trigger Build_barracks (build_military_menu_active()) {
    disable_trigger("Multiselect");
    disable_trigger("Multiselected");
    ping (1, 1, BARRACKS_X, BARRACKS_Y);
    move_camera (BARRACKS_X, BARRACKS_Y);
    objective_complete("choose_military");
    add_objective($S("Build a barracks."), "place_barracks", "placebarracks.wav");
    play_objective_sound ("place_barracks");
  //WAV: Now select the Build Barracks button, then left click to place the barracks near the target marker
    set_timer("progress_check",objective_delay);
    enable_trigger("barracks_selected");
  }

  trigger barracks_selected( build_option_selected("Barracks") ) {
    enable_trigger("barracks_deselected");
  }

  trigger barracks_deselected( !build_option_selected("Barracks") && !find_inactive_build( HUMAN, "Barracks") && sound_finished() ) {
    // WAV:  Right clicking when trying to place a building will clear the selection.  To place a building, 
    //       you need to select the building then left click on the location that you want to place it in.
    play_sound("building_deselected.wav");
  }

  trigger barracks_building(find_inactive_build (HUMAN, "Barracks")) {
    disable_trigger("barracks_deselected");
    disable_trigger("Multiselect");
    disable_trigger("Multiselected");
    disable_trigger("Build_barracks");
    clear_objectives();
    clear_highlight();
    objective_complete("place_barracks");
  }

  trigger Barracks_built (find_build (HUMAN, "Barracks")) {
    barracks_id = find_build( HUMAN, "Barracks" );
    human_barracks_x = object_position_x( HUMAN, barracks_id );
    human_barracks_y = object_position_y( HUMAN, barracks_id );
    clear_objectives();
    disable_trigger("Multiselect");
    disable_trigger("Multiselected");
    disable_trigger("Build_barracks");
    disable_trigger("barracks_building");
    gain_upgrade(HUMAN, "Javelineers");
    play_sound ("barracksbuilt.wav");
  /***WAV: Success! Now you have a barracks, where you can start mustering"
      "troops.*/
    enable_trigger ("Select_barracks");
    set_timer("progress_check",objective_delay);
  }

  trigger Select_barracks (sound_finished ()) {
    clear_objectives();
    add_objective($S("Select your barracks"), "select_barracks", "selectbarracks.wav");
    play_objective_sound ("select_barracks");
  /***WAV: Select your Barracks."***/
    enable_trigger ("Selecting_barracks");
    set_timer("progress_check",objective_delay);
  }

  trigger Selecting_barracks (object_type_selected (HUMAN, "Barracks")) {
    objective_complete("select_barracks");
    play_sound ("barracksselected.wav");
  //WAV: Good.  With the barracks selected, you can look at what units you can build in the 
  // bottom left corner of the screen.  For now, we're interested in the first
  //     button: Create Javelineer.
    enable_trigger ("Highlight_javelineer");
    set_timer("progress_check",objective_delay);
  }

  trigger Highlight_javelineer (sound_finished ()) {
    add_objective($S("Create a Javelineer unit."),"train_javelineer","clickjavelineer.wav");
    play_objective_sound("train_javelineer");
  /***WAV: Click on the Create Javelineer button.***/
    highlight_train_option ("Javelineers");
    enable_trigger ("Click_jav");
    set_timer("progress_check",objective_delay);
  }

  trigger Click_jav (num_type_queued (HUMAN, FIND_BUILD(HUMAN, "Barracks"), "Javelineers") > 0) {
    // point to progress bar 
    x_loc = get_button_left("right_window") + 135;
    y_loc = get_button_top("right_window") + 15;
    draw_screen_arrow_line( x_loc - 100, y_loc - 100, x_loc, y_loc, -1 );
    objective_complete("train_javelineer");
    clear_highlight();
    play_sound ("javbuilding.wav");
  /***WAV: Good! You have ordered the Barracks to create one Javelineer unit."
      "The progress bar in the bottom right of the screen shows how long it will take to complete the"
      "Javelineers.***/
    enable_trigger("jav_built");
    enable_trigger("Jav_built_sound_finished");
    enable_trigger("deselected_barracks");
    set_timer("progress_check",objective_delay);
  }

  trigger deselected_barracks( !object_type_selected (HUMAN, "Barracks")) {
    clear_all_arrows();
  }
  
  trigger jav_built( num_type( HUMAN, "Javelineers" ) >= 1 ) {
    clear_all_arrows();
  }

    
  trigger Jav_built_sound_finished( ( num_type(HUMAN, "Javelineers") >= 1 ) && sound_finished() ) {
    first_javelineers_id = find_unit( HUMAN, "Javelineers");
    disable_trigger("deselected_barracks");
    clear_all_arrows();
    // WAV:  Notice that the Javelineer unit is made up of three individuals.  
    //       All your foot units consist of three figures. 
    play_sound("three_is_one.wav");
    enable_trigger("start_siege_factory");
  }

  /*
  trigger select_jav( sound_finished() && !object_type_selected( HUMAN, "Javelineers" ) ) {
    add_objective($S("Left click to select your Javelineers."), "select_jav", "select_javelineer.wav");
    // WAV:  Now, select your Javelineers.
    play_objective_sound("select_jav");
    enable_trigger("move_jav");
  }

  trigger move_jav( object_type_selected(HUMAN, "Javelineers" ) ) {
    objective_complete("select_jav");
    add_objective($S("Right-click to move the Javelineers near the lookout."), "move_jav", "move_javelineer.wav");
// WAV:  Right-click to move the Javelineers near the lookout.
    lookout_id    = find_build(HUMAN, $S("Lookout"));
    lookout_loc_x = object_position_x(HUMAN, lookout_id);
    lookout_loc_y = object_position_y(HUMAN, lookout_id);

    add_flag(lookout_loc_x - 1, lookout_loc_y + 1);
    
    if( !is_on_screen( lookout_loc_x, lookout_loc_y ) ) {
      move_camera (LOOKOUT_X, LOOKOUT_Y);
    }

    play_objective_sound("move_jav");
    //enable_trigger("moved_javelineers");
    enable_trigger("start_siege_factory");
    enable_trigger("Build_siege_factory");
    enable_trigger("Constructing_siege_factory");
    enable_trigger("Siege_factory");

    enable_trigger("deselect_army");
    set_timer("r_click_delay",1);
  }

  trigger deselect_army( sound_finished() && timer_expired("r_click_delay") && !object_type_selected(HUMAN,"Javelineers") ) {
    // WAV: Left clicking on the map will deselect your units.  Select your javelineers again then right click near your lookout to move the unit.
    play_sound("rclick_javelineers.wav");
    set_timer("r_click_delay", 10);
  }
  */

  //trigger moved_javelineers( object_near_build( HUMAN, find_unit(HUMAN, "Javelineers"), HUMAN, find_build(HUMAN, $S("Lookout")), 3 ) ) {
  //  disable_trigger("deselect_army");
  //  clear_flags();
  //  objective_complete("move_jav");
  //  // WAV: Good job.  The javelineers are now in a position to defend the city if the Vikings attack.
  //  play_sound("jav_moved.wav");
  //  enable_trigger( "start_siege_factory");
  //  enable_trigger("Build_siege_factory");
  //  enable_trigger("Constructing_siege_factory");
  //  enable_trigger("Siege_factory");
  //}

  trigger start_siege_factory( sound_finished() ) {
    // WAV: We have a barracks to train foot troops, now we need to construct a siege factory to build catapults for the attack.  Select your citizens.
    add_objective($S("Select your citizens."), "start_siege", "select_citizens_siege.wav");
    play_objective_sound("start_siege");

    //enable_trigger( "start_siege_factory");
    enable_trigger("Build_siege_factory");
    enable_trigger("Constructing_siege_factory");
    enable_trigger("Siege_factory");  
  }

  trigger Build_siege_factory( sound_finished() && num_object_type_selected(HUMAN, "Citizen") > 0 ) {
    objective_complete("start_siege");
    add_objective($S("Order your citizens to build a Siege Factory"), "build_siege","build_siege.wav");
    play_objective_sound("build_siege");
    // WAV: Now select build military in the lower left, then build siege factory. Choose a location near your city you think will be good to place the factory.
    highlight_build_option ("Siege Factory");
    disable_trigger( "start_siege_factory");
    enable_trigger("siege_selected");
    set_timer("progress_check",objective_delay);
  }

  trigger siege_selected( build_option_selected("Siege Factory") ) {
    enable_trigger("siege_deselected");
  }

  trigger siege_deselected( !build_option_selected("Siege Factory") && !find_inactive_build( HUMAN, "Siege Factory") && sound_finished() ) {
    // WAV:  Right clicking when trying to place a building will clear the selection.  To place a building, 
    //       you need to select the building then left click on the location that you want to place it in.
    play_sound("building_deselected.wav");
  }

  trigger Constructing_siege_factory( find_inactive_build (HUMAN, "Siege Factory") ) {
    disable_trigger("siege_deselected");
    // Siege factories allow us to build catapults blah blah blah
    objective_complete("start_siege");
    objective_complete("build_siege");
    clear_highlight();
    play_sound("building_siege_factory.wav");
    // WAV: Excellent. Your citizens are now constructing a Siege Factory, where you can build weapons that can heavily damage buildings.
    disable_trigger( "start_siege_factory");
    disable_trigger("Build_siege_factory");
    set_timer("progress_check",objective_delay);
  }

  trigger Siege_factory(find_build (HUMAN, "Siege Factory") && sound_finished()) {
    disable_trigger("lost_citizens");
    clear_objectives();
    add_objective($S("Select the siege factory"), "select_siege", "select_siege.wav");
    play_objective_sound("select_siege");
    // WAV: Success! Now, let's build some siege units. First, select the siege factory.
    disable_trigger( "start_siege_factory");
    disable_trigger("Build_siege_factory");
    disable_trigger("Constructing_siege_factory");
    enable_trigger("select_siege");
    set_timer("progress_check",objective_delay);
  }

  trigger select_siege(object_type_selected (HUMAN, "Siege Factory") ) {
    objective_complete("select_siege");
    add_objective($S("Select Catapult at the siege factory"), "select_catapult", "build_first_catapult.wav" );
    //WAV: Good. Now, click the catapult button. 
    play_objective_sound("select_catapult");
    enable_trigger("build_catapult");
    highlight_train_option("Catapult");
  }

  trigger build_catapult (( num_type_queued (HUMAN, find_build (HUMAN, "Siege Factory"), "Catapult") > 0) ) {
    clear_highlight();
    objective_complete("select_catapult");
    // WAV: While we wait for the first catapult, we can add another catapult to the queue.  Click on the catapult button again to add another catapult to the queue.
    add_objective($S("Select Build Catapult again to add another catapult to the queue"), "queue_catapult","queue_catapult.wav");
    play_objective_sound("queue_catapult");
    enable_trigger("Queue_catapult");
    set_timer("progress_check",objective_delay);
  }

  trigger Queue_catapult((num_type_queued (HUMAN, find_build (HUMAN, "Siege Factory"), "Catapult") > 1) || ( num_type(HUMAN, "Catapult")) ) {
    objective_complete("queue_catapult");
    play_sound("queue_task_complete.wav");
  //WAV:  Good! Now the second catapult will be built after the first one is completed. Catapult construction takes some time, so let's build some more foot troops while we wait.
    enable_trigger("select_barracks_again");
    set_timer("progress_check",objective_delay);
  }

  trigger select_barracks_again(sound_finished()) {
    add_objective($S("Select your barracks"),"select_barracks2","selectbarracks.wav");
    play_objective_sound("select_barracks2");
    enable_trigger ("Build_up_army");
    set_timer("progress_check",objective_delay);
  }

  trigger Build_up_army( object_type_selected (HUMAN, "Barracks") && sound_finished() ) {
    set_type_build_time("Javelineers", type_build_time("Javelineers") / 3 );
    set_type_build_time("Catapult", type_build_time("Catapult") / 3 );

    objective_complete("select_barracks2");
    //WAV: Good. To create a force large enough for the attack, we need to build two more javelineers, 
    //            two phalanxes, and three longbowmen at the barracks.
    add_objective($S("Build two Javelineers"), "queue_javelineers", "build_more_units.wav");
    add_objective($S("Build two Phalanx"), "queue_phalanx", "build_more_units.wav");
    add_objective($S("Build three Longbowmen"), "queue_longbowmen", "build_more_units.wav");
    add_objective($S("Build two Catapults"), "queue_catapults", "build_more_units.wav");
    play_objective_sound("queue_javelineers");
    enable_trigger("queue_javelineers");
    enable_trigger("queue_phalanx");
    enable_trigger("queue_longbowmen");
    enable_trigger("queue_catapult2");
    enable_trigger("army_built");
    enable_trigger("queue_check");
    enable_trigger("queue_reminder");

    unit_move_order( HUMAN, first_javelineers_id, human_barracks_x, human_barracks_y);

    //enable_trigger("fast_forward");
    set_timer("progress_check",objective_delay);
  }

  trigger queue_check( ( num_type_queued (HUMAN, find_build (HUMAN, "Barracks"), "Javelineers") > 1 ) ||
                       ( num_type_queued (HUMAN, find_build (HUMAN, "Barracks"), "Longbowmen") > 1 )      ||
                       ( num_type_queued (HUMAN, find_build (HUMAN, "Barracks"), "Phalanx") > 1  ) ) {
    disable_trigger("queue_reminder");
    set_timer("progress_check",objective_delay);
  }
 
  trigger queue_reminder( ( ( num_type_queued (HUMAN, find_build (HUMAN, "Barracks"), "Javelineers") == 1 ) ||
                            ( num_type_queued (HUMAN, find_build (HUMAN, "Barracks"), "Longbowmen") == 1 )      ||
                            ( num_type_queued (HUMAN, find_build (HUMAN, "Barracks"), "Phalanx") == 1 ) ) &&
                          sound_finished() ) {
    play_sound("queue_reminder.wav");
    set_timer("progress_check",objective_delay); 
  }

  trigger queue_javelineers( num_type (HUMAN, "Javelineers") >= 3 ) {
    objective_complete("queue_javelineers");
    javelineers_complete = true;
    set_timer("progress_check",objective_delay);
  }

  trigger queue_phalanx( num_type(HUMAN, "Phalanx") >= 2 ) {
    objective_complete("queue_phalanx");
    phalanx_complete = true;
    set_timer("progress_check",objective_delay);
  }

  trigger queue_longbowmen( num_type( HUMAN, "Longbowmen" ) >= 3 ) {
    objective_complete("queue_longbowmen");
    longbowmen_complete = true;
    set_timer("progress_check",objective_delay);
  }

  trigger queue_catapult2( num_type( HUMAN, "Catapult" ) >= 2 ) {
    objective_complete("queue_catapults");
    catapults_complete = true;
    set_timer("progress_check", objective_delay);
  }

  /*
  trigger fast_forward( is_shopping_list_complete() ) {
    //WAV: Good job. You've queued up everything for your army.
    //     Now, instead of having you wait for each of the units to build, 
  //     we'll just give them to you now.  Normally this would take a little while.
    play_sound("fast_forward.wav");
    enable_trigger("fast_forward2");
  }

  trigger fast_forward2(sound_finished()) {
    complete_shopping_list();
    set_timer("progress_check",objective_delay);
  }
  */

  trigger army_built( javelineers_complete && phalanx_complete && longbowmen_complete && catapults_complete && sound_finished() ) {
    //disable_trigger("fast_forward");
    play_sound ("letsgo.wav");
  //WAV: Now you've rallied a great English army.  Let us start planning our attack to retake Ethandun.
    enable_trigger("captured_city");
    enable_trigger("learn_minimap");
    set_timer("progress_check",objective_delay);
  }

  trigger learn_minimap( sound_finished() ) {
  //WAV: We're going to need to take a look at Ethandun again.  Instead of scrolling over 
  //     there, lets learn how to use the minimap to change our view around the map.
    play_sound("learn_minimap.wav");
    enable_trigger("look_minimap");
    scrolling_lock();
    scrolling_unlock_minimap();
  }

  trigger look_minimap( sound_finished() ) {
  //WAV: At the bottom center of the screen is the minimap.  It shows a zoomed out view of the entire world.  

    play_sound("look_minimap.wav");
    draw_screen_arrow_line( mini_map_x, mini_map_y - 100, mini_map_x, mini_map_y, 0);
    enable_trigger("english_minimap");
    enable_trigger("see_ethandun_minimap");
  }

  trigger english_minimap( sound_finished() ) {
    clear_all_arrows();
  // WAV: If you look at the minimap, your troops are shown on the left in red
    play_sound("english_minimap.wav");
    draw_screen_arrow_line( mini_map_x - 85, mini_map_y, mini_map_x - 85, mini_map_y + 100, 0);
    enable_trigger("danes_minimap");
  }

  trigger danes_minimap( sound_finished() ) {
    clear_all_arrows();
  //WAV: and the Vikngs are on the right in blue.
    play_sound("danes_minimap.wav");
    draw_screen_arrow_line( mini_map_x - 13, mini_map_y, mini_map_x - 13, mini_map_y + 100, 0);
    //enable_trigger("key_minimap");
    enable_trigger("look_ethandun_minimap");
  }

  /*
  trigger key_minimap( sound_finished() ) {
    clear_all_arrows();
  // WAV: The large white rectangle shows your current viewing area.  The lighter red shows the area that you control, and the bright red squares represent your units and buildings.
    play_sound("key_minimap.wav");
    //enable_trigger("carlisle_minimap");
    enable_trigger( "look_ethandun_minimap");
  }

  trigger carlisle_minimap( sound_finished() ) {
    clear_all_arrows();
    draw_screen_arrow_line( mini_map_x - 85, mini_map_y, mini_map_x - 85, mini_map_y + 100, 0);

   //WAV: The big red square is Carlisle
    play_sound("carlisle_minimap.wav");
    enable_trigger("ethandun_minimap");
  }

  trigger ethandun_minimap( sound_finished() ) {
    clear_all_arrows();
    draw_screen_arrow_line( mini_map_x - 13, mini_map_y, mini_map_x - 13, mini_map_y + 100, 0);
  
    //WAV: the big blue square is Ethandun.
    play_sound("ethandun_minimap.wav");
    enable_trigger("look_ethandun_minimap");
  }
  */

  trigger look_ethandun_minimap( sound_finished() ) {
    draw_screen_arrow_line( mini_map_x - 13, mini_map_y, mini_map_x - 13, mini_map_y + 100, 0);
    add_objective($S("Left click near Ethandun on the minimap to zoom to the city."), "look_ethandun_minimap", "look_ethandun_minimap.wav");
  // WAV: Left clicking on the minimap will change your view.  Left click on the minimap near Ethandun to move 
  // your view to the city.
    play_objective_sound("look_ethandun_minimap");
    enable_trigger("see_ethandun_minimap");
    set_timer("progress_check",objective_delay);
  }

  trigger see_ethandun_minimap( is_on_screen( ethandun_x, ethandun_y ) ) {
    objective_complete("look_ethandun_minimap");
    play_sound("see_ethandun_minimap.wav");
  // WAV: Good.  We can use the minimap to quickly scout out areas before we attack.
    enable_trigger("look_carlisle_minimap");
  }

  trigger look_carlisle_minimap( sound_finished() ) {
    clear_all_arrows();
    draw_screen_arrow_line( mini_map_x - 85, mini_map_y, mini_map_x - 85, mini_map_y + 100, 0);

    add_objective($S("Left click near Carlisle on the minimap to view the city"), "look_carlisle_minimap", "look_carlisle_minimap.wav");
    play_objective_sound("look_carlisle_minimap");
  // WAV: Now click on the minimap near Carlisle to view our city and troops again.
    enable_trigger("see_carlisle_minimap");
    set_timer("progress_check",objective_delay);
  }

  trigger see_carlisle_minimap( is_on_screen( object_position_x( HUMAN, carlisle_id), object_position_y( HUMAN, carlisle_id ) ) ) {
    clear_all_arrows();
    scrolling_unlock();
    objective_complete("look_carlisle_minimap");
    play_sound("done_minimap.wav");
  // WAV: Good.  Now we've learned how to change our view in the world quickly by using the minimap.  Now let's get our army ready to attack.   
    enable_trigger("select_all_military");
  }

  trigger select_all_military(sound_finished()) {
    // WAV: Use the left click drag box to select all your units near Carlisle
    add_objective($S("Select all your military units using a left-click drag box."), "select_all_military", "select_all_military.wav");
    play_objective_sound("select_all_military");
    enable_trigger("Mini_map2");
    enable_trigger("not_all_selected");
    set_timer("not_all_selected", 10 );
    set_timer("progress_check",objective_delay); 

    if( !is_zoomed_out() ) {
      enable_trigger("remember_to_zoom");
    }
    enable_trigger("not_all_selected");
  }

  trigger remember_to_zoom( !is_zoomed_out() && sound_finished() ) {
    // WAV: Remember that you can zoom out by rolling your mouse wheel backwards or pressing the page up key to see more of your troops at once.
    play_sound("remember_to_zoom.wav");
  }

  trigger not_all_selected( any_object_selected( HUMAN ) && !all_military_selected( HUMAN ) && sound_finished() && timer_expired( "not_all_selected") ) {
     // WAV:  You have selected some of your units but not all of them.  You need to select your infantry units
     //       and your siege units using a left click drag box.

    play_sound("not_all_selected.wav");
    set_timer("not_all_selected", 30 );
    enable_trigger("not_all_selected");
  }

  /*
  trigger Mini_map( all_military_selected(HUMAN) ) {
    objective_complete("select_all_military");
    play_sound ("usemini.wav");
  //WAV: To get an overview of what's happening, and to help guide your troops, you can use the
  //minimap at the bottom of the screen. The dots in red are your troops and citizens; the blue
  //are the Viking troops and buildings that we can see.
    mini_map_x = get_button_center_x("mid_window");
    mini_map_y = get_button_top("mid_window");
    draw_screen_arrow_line( mini_map_x, mini_map_y - 100, mini_map_x, mini_map_y, 0);

    ping( 1, 1, 69, 94);
    enable_trigger("lost_all_military");
    set_timer("lost_timer", 1);
    enable_trigger ("Mini_map2");
    set_timer("progress_check",objective_delay);
  }
  */

  trigger Mini_map2( all_military_selected(HUMAN) ) {
    disable_trigger("not_all_selected");
    disable_trigger("remember_to_zoom");
    objective_complete("select_all_military");
    play_sound ("clickmini.wav");
  /***WAV: Now move your troups to attack by right clicking near Ethandun.  You can also right click on the mini-map to direct your troups.***/
    ping( 1, 1, 69, 94);
    set_timer ("Clear_msg", 8);
    enable_trigger("Clear_msgs");
    enable_trigger("lost_all_military");
    enable_trigger("butt_kicked");
    enable_trigger("vikings_beaten");
    set_timer("progress_check",objective_delay);
    enable_trigger("attack_player");
    enable_all_unit_ai(HUMAN);
  }

  trigger attack_player( any_object_near_build( HUMAN, 1, COMPUTER, find_city_id($S("Ethandun")), 3) ) {
    enable_all_unit_ai(COMPUTER);
    for( i = 0; i < num_military_units( COMPUTER ); i++ ) {
      military_id = find_military( COMPUTER );
      if( object_near_build( COMPUTER, military_id, COMPUTER, find_city_id( $S("Ethandun")), 15) ) {
        enable_unit_ai( COMPUTER, military_id );
        unit_stance_order(COMPUTER, military_id, "aggressive");
        unit_attack_to_order(COMPUTER, military_id, 45, 101 );
      }
    }
  }

  trigger Clear_msgs (timer_expired("Clear_msg") && sound_finished() ) {
    clear_all_arrows();
    add_objective($S("Right click to have your units defeat the Viking army!"), "ethandun_battle","clickmini.wav");
    set_timer("progress_check",objective_delay);
  }

  trigger lost_all_military(!any_object_selected(HUMAN) && sound_finished() && timer_expired("lost_timer")) {
    // wav:  You've deselected your army.  Select your army again and use right click to move and attack.
    play_sound("losearmy_rclick.wav");
    set_timer("lost_timer", 10);
    set_timer("progress_check",objective_delay);
    enable_trigger("lost_all_military");
  }

  trigger butt_kicked( num_military_units( HUMAN ) < 2 ) {
    // WAV:  The Vikings are fierce foes!  We need to build more troops and attack Ethandun again to destroy their
    //       remaining forces.  
    play_sound("butt_kicked.wav");
  }

  trigger vikings_beaten( !any_unit_type_near( COMPUTER, "Barbarians", ethandun_x, ethandun_y, 25 ) && 
                          !any_unit_type_near( COMPUTER, "Archers",    ethandun_x, ethandun_y, 25 ) ) {
    objective_complete("ethandun_battle");
    //WAV: You've defeated all the Viking troops, now select your units and right click on Ethandun to retake the city!
    add_objective($S("Select your units and right click on Ethandun to retake the city."),"retake_city", "vikings_beaten.wav");
    play_objective_sound("retake_city");
    set_timer("progress_check",objective_delay);
  }

  trigger captured_city(city_captured(COMPUTER, $S("Ethandun")) && !any_unit_type_near( COMPUTER, "Barbarians", ethandun_x, ethandun_y, 25 ) 
                                                                && !any_unit_type_near( COMPUTER, "Archers",    ethandun_x, ethandun_y, 25 ) 
                                                                && !any_unit_type_near( COMPUTER, "Catapult",   ethandun_x, ethandun_y, 25 )) {
    objective_complete("retake_city");
    objective_complete("ethandun_battle");
    disable_all_triggers();
    enable_trigger("final");
    // WAV: You have defeated the Vikings and recaptured Ethandun.  Excellent work!
    play_sound("ethandun_recaptured.wav");
  }

  trigger final( sound_finished() ) {
    victory(1);
  }
}
