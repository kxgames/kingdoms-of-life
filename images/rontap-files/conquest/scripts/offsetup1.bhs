//offensive ambush conquest scenario setup

conquest 
{
  labels {
    ATTACKER,
    DEFENDER,
  }

  static int general_id1 = 0;
  static String def_capital;
  static int id = 0;
  static int att_id = 0;
  static String att_capital;
  static int city_x = 0;
  static int city_y = 0;
  static int x = 0;
  static int y = 0;
  static int att_x = 0;
  static int att_y = 0;
  static int x2 = 0;
  static int y2 = 0;
  static int x3 = 0;
  static int y3 = 0;
  static int dir = 0;
  static int center = 0;
  static int radius = 0;
  static int horse_archer = 0;
  static int light_horse = 0;
  static int cataphract = 0;
  static int diff = get_difficulty();


  //make it so the attacker can't lose if he takes then loses a city
  disable_city_defeat(ATTACKER);

  def_capital = find_capital(DEFENDER);
  id = find_city_id(def_capital);
  att_capital = find_capital(ATTACKER);
  att_id = find_city_id(att_capital);
  
  city_x = object_position_x(DEFENDER, id);
  city_y = object_position_y(DEFENDER, id);
  x = city_x + 1;
  y = city_y + 1;
  att_x = object_position_x(ATTACKER, att_id) + 1;
  att_y = object_position_y(ATTACKER, att_id) + 1;
  x2 = att_x;
  y2 = att_y;

  //ambush!
   
  x3 = object_position_x(ATTACKER, att_id) - 18;
  y3 = object_position_y(ATTACKER, att_id) - 28;

  if (x3 < 0) x3 = 1;
  if (y3 < 0) y3 = 1;

  if (!map_is_land(x, y)) {
    x3 = x3 + 16;
    y3 = y3;
    if (diff == 1) {
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        horse_archer = create_unit_in_group(DEFENDER, x3 + 15, y3, "horse archer", 1);
      }  
    }
    else if (diff == 2) {
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        horse_archer = create_unit_in_group(DEFENDER, x3 + 15, y3, "horse archer", 1);
      }  
    }
    else if (diff == 3) {
      gain_tech(DEFENDER, "Tactics");
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        light_horse = create_unit_in_group(DEFENDER, x3 + 15, y3, "light horse", 1);
      }  
    }
    else if (diff == 4) {
      gain_tech(DEFENDER, "Operations");
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        light_horse = create_unit_in_group(DEFENDER, x3 + 15, y3, "light horse", 1);
        horse_archer = create_unit_in_group(DEFENDER, x3 + 15, y3, "horse archer", 1);
      }  
    }
    else if (diff == 5) {
      gain_tech(DEFENDER, "Strategy");
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        cataphract = create_unit_in_group(DEFENDER, x3 + 15, y3, "cataphract", 1);  
      }
      for (i = 0; i < 1; i++) {
        light_horse = create_unit_in_group(DEFENDER, x3 + 15, y3, "light horse", 1);
        horse_archer = create_unit_in_group(DEFENDER, x3 + 15, y3, "horse archer", 1);
      }  
    }
    else if (diff == 6) {
      gain_tech(DEFENDER, "Strategy");
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        cataphract = create_unit_in_group(DEFENDER, x3 + 15, y3, "cataphract", 1);  
        light_horse = create_unit_in_group(DEFENDER, x3 + 15, y3, "light horse", 1);
      }
      for (i = 0; i < 2; i++) {
        horse_archer = create_unit_in_group(DEFENDER, x3 + 15, y3, "horse archer", 1);
      }  
    }
  
    group_stance_order(DEFENDER, "Raid");
    group_attack_to_order(DEFENDER, x2, y2);
  }
  else {
    if (diff == 1) {
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        horse_archer = create_unit_in_group(DEFENDER, x3 + 15, y3, "horse archer", 1);
      }  
    }
    else if (diff == 2) {
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        horse_archer = create_unit_in_group(DEFENDER, x3 + 15, y3, "horse archer", 1);
      }  
    }
    else if (diff == 3) {
      gain_tech(DEFENDER, "Tactics");
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        light_horse = create_unit_in_group(DEFENDER, x3 + 15, y3, "light horse", 1);
      }  
    }
    else if (diff == 4) {
      gain_tech(DEFENDER, "Operations");
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        light_horse = create_unit_in_group(DEFENDER, x3 + 15, y3, "light horse", 1);
        horse_archer = create_unit_in_group(DEFENDER, x3 + 15, y3, "horse archer", 1);
      }  
    }
    else if (diff == 5) {
      gain_tech(DEFENDER, "Strategy");
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        cataphract = create_unit_in_group(DEFENDER, x3 + 15, y3, "cataphract", 1);  
      }
      for (i = 0; i < 1; i++) {
        light_horse = create_unit_in_group(DEFENDER, x3 + 15, y3, "light horse", 1);
        horse_archer = create_unit_in_group(DEFENDER, x3 + 15, y3, "horse archer", 1);
      }  
    }
    else if (diff == 6) {
      gain_tech(DEFENDER, "Strategy");
      general = create_unit_upgrade(DEFENDER, x3 + 10, y3, "general", 1);
      for (i = 0; i < 1; i++) {
        cataphract = create_unit_in_group(DEFENDER, x3 + 15, y3, "cataphract", 1);  
        light_horse = create_unit_in_group(DEFENDER, x3 + 15, y3, "light horse", 1);
      }
      for (i = 0; i < 2; i++) {
        horse_archer = create_unit_in_group(DEFENDER, x3 + 15, y3, "horse archer", 1);
      }  
    }

    group_stance_order(DEFENDER, "Raid");
    group_attack_to_order(DEFENDER, x2, y2);
  }

  //setup player army
  force_transport_ability(ATTACKER);
  dir = get_conquest_invasion_dir();
  center = get_map_size() / 2;
  radius = center - 10;
  att_x = radius * sin(dir) + center;
  att_y = center - (radius * cos(dir));  
  
  create_unit_upgrade(ATTACKER, att_x, att_y, "hoplites", 1);
  create_unit_upgrade(ATTACKER, att_x - 2, att_y, "light horse", 1);
  create_unit_upgrade(ATTACKER, att_x - 4, att_y, "catapult", 1);
  create_unit_upgrade(ATTACKER, att_x - 5, att_y, "bowmen", 1);
  create_unit_upgrade(ATTACKER, att_x - 6, att_y, "slingers", 1);

}