//wheel and deal 

conquest 
{

  static String my_capital = find_capital(1);
  static int my_capital_id = find_city_id(my_capital);
  static int cap_x = object_position_x(1, my_capital_id);
  static int cap_y = object_position_y(1, my_capital_id);
  static String my_second_city;
  static String my_third_city;
  static String my_fourth_city;
  static String my_fifth_city;
  static int my_second_city_id;
  static int my_third_city_id;
  static int my_fourth_city_id;
  static int my_fifth_city_id;
  static int two_x;
  static int two_y;
  static int three_x;
  static int three_y;
  static int four_x;
  static int four_y;
  static int five_x;
  static int five_y;
  static int attack_city;
  static int diff = get_difficulty();
  static time_limit = 120;

  run_once {
    time_limit = get_time_limit();
    if (get_starting_age() > 1) {
      enable_trigger("are_we_friends_2_3");
      enable_trigger("are_we_friends_2_4");
      enable_trigger("are_we_friends_3_4");
      if (diff > 3) enable_trigger("give_stuff");
      set_timer("resources", 180);
    }
    for (defender = 4; defender > 2; defender--) {
      if (num_cities(defender) == 0) {
        new_x = get_starting_loc_x(2);
        new_y = get_starting_loc_y(2);
        create_unit_upgrade(defender, new_x, new_y, "citizen", 4);
        create_unit_upgrade(defender, new_x, new_y, "hoplites", 2);
        create_unit_upgrade(defender, new_x, new_y, "bowmen", 2);
        create_unit_upgrade(defender, new_x, new_y, "slingeres", 2);
        give_good(defender, "Food", 100);
        give_good(defender, "Timber", 100);
      }
    }
  }

  cur_time = time();

  trigger (cur_time >= time_limit) {
    defeat_attacker_and_allies();
  }

  trigger give_stuff(timer_expired("resources")) {
    amount = 100;
    for (b = 2; b < 4; b++) {
      give_good(b, "Food", amount);
      give_good(b, "Timber", amount);
      give_good(b, "Wealth", amount);
      give_good(b, "Metal", amount);
      give_good(b, "Knowledge", amount);
    }
    set_timer("resources", 180);
    enable_trigger("give_stuff");
  }    

  trigger are_we_friends_2_3(have_alliance(2,3) && have_war(1,2) && have_war(1,3)) {
    for (p = 2; p < 4; p++) {
      num_unit = num_military_units(p);
      if (num_unit > 4) {
        unit = find_military(p);
        unit_clear_orders(p, unit);
        clear_group(p);
        for (i = num_unit; i > 0; i--) {
          add_to_group(p, unit);
        }
        if (num_cities(1) == 1) attack_city = 1;
        else if (num_cities(1) == 2) attack_city = rand_int(1,2);
        else if (num_cities(1) == 3) attack_city = rand_int(1,3);
        else if (num_cities(1) == 4) attack_city = rand_int(1,4);
        else attack_city = rand_int(1,5);
        switch(attack_city) {
          case 1 : 
            group_attack_to_order(p, cap_x, cap_y);
            break;
          case 2 : 
            my_second_city = find_city_with_num(1,2);
            my_second_city_id = find_city_id(my_second_city);
            two_x = object_position_x(1, my_second_city_id);
            two_y = object_position_y(1, my_second_city_id);
            group_attack_to_order(p, two_x, two_y);
            break;
          case 3 : 
            my_third_city = find_city_with_num(1,3);
            my_third_city_id = find_city_id(my_third_city);
            three_x = object_position_x(1, my_third_city_id);
            three_y = object_position_y(1, my_third_city_id);
            group_attack_to_order(p, three_x, three_y);
            break;
          case 4 : 
            my_fourth_city = find_city_with_num(1,4);
            my_fourth_city_id = find_city_id(my_fourth_city);
            four_x = object_position_x(1, my_fourth_city_id);
            four_y = object_position_y(1, my_fourth_city_id);
            group_attack_to_order(p, four_x, four_y);
            break;
          case 5 : 
            my_fifth_city = find_city_with_num(1,5);
            my_fifth_city_id = find_city_id(my_fifth_city);
            five_x = object_position_x(1, my_fifth_city_id);
            five_y = object_position_y(1, my_fifth_city_id);
            group_attack_to_order(p, five_x, five_y);
            break;          
        }
      }
      disable_trigger("are_we_friends_2_3");
      set_timer("friend_check_2_3", 150);
    }
  }

  if (timer_expired("friend_check_2_3")) {
    enable_trigger("are_we_friends_2_3");
  }

  trigger are_we_friends_2_4(have_alliance(2,4) && have_war(1,2) && have_war(1,4)) {
    for (p = 2; p < 5; p++) {
      if (p == 3) p = 4;
      num_unit = num_military_units(p);
      if (num_unit > 4) {
        unit = find_military(p);
        unit_clear_orders(p, unit);
        clear_group(p);
        for (i = num_unit; i > 0; i--) {
          add_to_group(p, unit);
        }
        if (num_cities(1) == 1) attack_city = 1;
        else if (num_cities(1) == 2) attack_city = rand_int(1,2);
        else if (num_cities(1) == 3) attack_city = rand_int(1,3);
        else if (num_cities(1) == 4) attack_city = rand_int(1,4);
        else attack_city = rand_int(1,5);
        switch(attack_city) {
          case 1 : 
            group_attack_to_order(p, cap_x, cap_y);
            break;
          case 2 : 
            my_second_city = find_city_with_num(1,2);
            my_second_city_id = find_city_id(my_second_city);
            two_x = object_position_x(1, my_second_city_id);
            two_y = object_position_y(1, my_second_city_id);
            group_attack_to_order(p, two_x, two_y);
            break;
          case 3 : 
            my_third_city = find_city_with_num(1,3);
            my_third_city_id = find_city_id(my_third_city);
            three_x = object_position_x(1, my_third_city_id);
            three_y = object_position_y(1, my_third_city_id);
            group_attack_to_order(p, three_x, three_y);
            break;
          case 4 : 
            my_fourth_city = find_city_with_num(1,4);
            my_fourth_city_id = find_city_id(my_fourth_city);
            four_x = object_position_x(1, my_fourth_city_id);
            four_y = object_position_y(1, my_fourth_city_id);
            group_attack_to_order(p, four_x, four_y);
            break;
          case 5 : 
            my_fifth_city = find_city_with_num(1,5);
            my_fifth_city_id = find_city_id(my_fifth_city);
            five_x = object_position_x(1, my_fifth_city_id);
            five_y = object_position_y(1, my_fifth_city_id);
            group_attack_to_order(p, five_x, five_y);
            break;          
        }
      }
      disable_trigger("are_we_friends_2_4");
      set_timer("friend_check_2_4", 150);
    }
  }

  if (timer_expired("friend_check_2_4")) {
    enable_trigger("are_we_friends_2_4");
  }

  trigger are_we_friends_3_4(have_alliance(3,4) && have_war(1,3) && have_war(1,4)) {
    for (p = 3; p < 5; p++) {
      num_unit = num_military_units(p);
      if (num_unit > 4) {
        unit = find_military(p);
        unit_clear_orders(p, unit);
        clear_group(p);
        for (i = num_unit; i > 0; i--) {
          add_to_group(p, unit);
        }
        if (num_cities(1) == 1) attack_city = 1;
        else if (num_cities(1) == 2) attack_city = rand_int(1,2);
        else if (num_cities(1) == 3) attack_city = rand_int(1,3);
        else if (num_cities(1) == 4) attack_city = rand_int(1,4);
        else attack_city = rand_int(1,5);
        switch(attack_city) {
          case 1 : 
            group_attack_to_order(p, cap_x, cap_y);
            break;
          case 2 : 
            my_second_city = find_city_with_num(1,2);
            my_second_city_id = find_city_id(my_second_city);
            two_x = object_position_x(1, my_second_city_id);
            two_y = object_position_y(1, my_second_city_id);
            group_attack_to_order(p, two_x, two_y);
            break;
          case 3 : 
            my_third_city = find_city_with_num(1,3);
            my_third_city_id = find_city_id(my_third_city);
            three_x = object_position_x(1, my_third_city_id);
            three_y = object_position_y(1, my_third_city_id);
            group_attack_to_order(p, three_x, three_y);
            break;
          case 4 : 
            my_fourth_city = find_city_with_num(1,4);
            my_fourth_city_id = find_city_id(my_fourth_city);
            four_x = object_position_x(1, my_fourth_city_id);
            four_y = object_position_y(1, my_fourth_city_id);
            group_attack_to_order(p, four_x, four_y);
            break;
          case 5 : 
            my_fifth_city = find_city_with_num(1,5);
            my_fifth_city_id = find_city_id(my_fifth_city);
            five_x = object_position_x(1, my_fifth_city_id);
            five_y = object_position_y(1, my_fifth_city_id);
            group_attack_to_order(p, five_x, five_y);
            break;          
        }
      }
      disable_trigger("are_we_friends_3_4");
      set_timer("friend_check_3_4", 150);
    }
  }

  if (timer_expired("friend_check_3_4")) {
    enable_trigger("are_we_friends_3_4");
  }

  if (have_alliance(1,2)) {
    if (is_defeated(3) && is_defeated(4)) {
      victory(1);
    }
  }

  if (have_alliance(1,3)) {
    if (is_defeated(2) && is_defeated(4)) {
      victory(1);
    }
  }

  if (have_alliance(1,4)) {
    if (is_defeated(3) && is_defeated(2)) {
      victory(1);
    }
  }

}