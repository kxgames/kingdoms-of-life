// Rise of Nations
// Developer : Big Huge Games
// File Name : ceraiding1.bhs
// Knowledge Keeper : Doug Kaufman
// Lead Designer : Kristine Ishii
// Project Members : Bruce Milligan, Brian Kaiser, John Hawkins
// Project Date : September 30, 2002

/*
Chess Exercise #8 - Raiding Party
Mode : Toughest
Setup : 5 nations, with Player nation in center and Computer nations on outside.  
Map : Standard size Old World (jungle tileset)
-= Current Specs =-
100 Kill required to win.
Start with 6 Steppe Nomads, and gain 6 more every 2 minutes.
*/

include "ce_io_lib.bhs"

scenario {

  labels {
    MONGOLS = 1,
    BANTU = 2,
    MAYA = 3,
    KOREANS = 4,
    ROMANS = 5,
  }

  static int round;
  static int dead_guys;
  static int new_exp;
  static int score_data1;
  static int score_data2;
  static int score_data3;
  String player_name1;
  String player_name2;
  String player_name3;
  static int kills;


  run_once {

    String player_name = get_player_profile_name();
    set_leader_name(1, player_name);

    add_goal(1, "raiding", $S("Kill 100 civilian units (Citizens, Merchants, and Caravans) in 10 minutes to win (Caravans are worth triple)."));
    set_time_limit(10);
    set_timer("new", 120);
    new_exp = 0;
    high_scores = add_objective_text("___________________", "high_score_list", "select_army.wav");   
    high_scores = add_objective_text($S("Most Kills"),     "high_score_list", "select_army.wav");
    
    display_results("ceraiding1", false, true);

    high_scores = add_objective_text("___________________", "high_score_list", "select_army.wav"); 
    high_scores = add_objective_text($S("Current Game"),    "high_score_list", "select_army.wav"); 
    kill_count =  add_objective_text(parse($S("Civilians killed: $NUM0"), dead_guys), "civilian_killed", "select_army.wav"); 
    high_scores = add_objective_text("___________________", "high_score_list", "select_army.wav");    
    buildings_gather_disable();
    building_resource_bonus_disable();
    round = 0;
    buildings_gather_disable();
    disable_city_ai(2);
    disable_city_ai(3);
    disable_city_ai(4);
    disable_city_ai(5);
    disable_combat_ai(2);
    disable_combat_ai(3);
    disable_combat_ai(4);
    disable_combat_ai(5);
    disable_city_defeat(1);
    disable_city_defeat(2);
    disable_city_defeat(3);
    disable_city_defeat(4);
    disable_city_defeat(5);
    gain_tech(1, "Allegiance");
    gain_tech(1, "Oath of Fealty");
    gain_tech(1, "Patriotism");
    gain_tech(1, "Nationalism");
  }

  disable_type("Barracks");
  disable_type("Stable");
  disable_type("Fort");
  disable_type("Siege Factory");
  disable_type("Tower");
  disable_type("Keep");
  disable_type("Castle");
  disable_type("Citizen");
  disable_type("City");

  if (timer_expired("new")) {
    if(new_exp < 4) {
      create_unit(1, 156, 104, "Steppe Nomad", 6);
      print_msg($S("More Nomads join the Horde."));
      ping(1, 1, 156, 104);
      set_timer("new", 120);
      new_exp = new_exp + 1;
    }
  }

//keep out
  for (i = num_type(2, "Light Cavalry"); i > 0; i--) {
    light_cav = find_unit(2, "Light Cavalry");
    //unit_stance_order(2, light_cav, "Defensive");
    if (territory_object(2, light_cav) == 1) {
      switch (rand_int(1, 5)) {
        case 1:
          unit_flee_order(2, light_cav, 30, 171);
          break;
        case 2:
          unit_flee_order(2, light_cav, 132, 182);
          break;
        case 3:
          unit_flee_order(2, light_cav, 101, 230);
          break;
        case 4:
          unit_flee_order(2, light_cav, 37, 252);
          break;
        case 5:
          unit_flee_order(2, light_cav, 148, 244);
          break;
      }
    }
  }

  for (i = num_type(2, "Knight"); i > 0; i--) {
    knight = find_unit(2, "Knight");
    //unit_stance_order(2, knight, "Defensive");
    if (territory_object(2, knight) == 1){
      switch (rand_int(1, 5)) {
        case 1:
          unit_flee_order(2, knight, 30, 171);
          break;
        case 2:
          unit_flee_order(2, knight, 132, 182);
          break;
        case 3:
          unit_flee_order(2, knight, 101, 230);
          break;
        case 4:
          unit_flee_order(2, knight, 37, 252);
          break;
        case 5:
          unit_flee_order(2, knight, 148, 244);
          break;
      }
    }
  }

  for (i = num_type(2, "Impi"); i > 0; i--) {
    impi = find_unit(2, "Impi");
    //unit_stance_order(2, impi, "Defensive");
    if (territory_object(2, impi) == 1) {
      switch (rand_int(1, 5)) {
        case 1:
          unit_flee_order(2, impi, 30, 171);
          break;
        case 2:
          unit_flee_order(2, impi, 132, 182);
          break;
        case 3:
          unit_flee_order(2, impi, 101, 230);
          break;
        case 4:
          unit_flee_order(2, impi, 37, 252);
          break;
        case 5:
          unit_flee_order(2, impi, 148, 244);
          break;
      }
    }
  }

  for (i = num_type(3, "Light Cavalry"); i > 0; i--) {
    light_cav = find_unit(3, "Light Cavalry");
    //unit_stance_order(3, light_cav, "Defensive");
    if (territory_object(3, light_cav) == 1) {
      switch (rand_int(1, 5)) {
        case 1:
          unit_flee_order(3, light_cav, 71, 125);
          break;
        case 2:
          unit_flee_order(3, light_cav, 50, 25);
          break;
        case 3:
          unit_flee_order(3, light_cav, 43, 98);
          break;
        case 4:
          unit_flee_order(3, light_cav, 87, 81);
          break;
        case 5:
          unit_flee_order(3, light_cav, 46, 63);
          break;
      }
    }
  }

  for (i = num_type(3, "Pikemen"); i > 0; i--) {
    pike = find_unit(3, "Pikemen");
    //unit_stance_order(3, pike, "Defensive");
    if (territory_object(3, pike) == 1) {
      switch (rand_int(1, 5)) {
        case 1:
          unit_flee_order(3, pike, 71, 125);
          break;
        case 2:
          unit_flee_order(3, pike, 50, 25);
          break;
        case 3:
          unit_flee_order(3, pike, 43, 98);
          break;
        case 4:
          unit_flee_order(3, pike, 87, 81);
          break;
        case 5:
          unit_flee_order(3, pike, 46, 63);
          break;
      }
    }
  }

  for (i = num_type(3, "Eagle Balamob Slingers"); i > 0; i--) {
    eagle = find_unit(3, "Eagle Balamob Slingers");
    //unit_stance_order(3, eagle, "Defensive");
    if (territory_object(3, eagle) == 1) {
      switch (rand_int(1, 5)) {
        case 1:
          unit_flee_order(3, eagle, 71, 125);
          break;
        case 2:
          unit_flee_order(3, eagle, 50, 25);
          break;
        case 3:
          unit_flee_order(3, eagle, 43, 98);
          break;
        case 4:
          unit_flee_order(3, eagle, 87, 81);
          break;
        case 5:
          unit_flee_order(3, eagle, 46, 63);
          break;
      }
    }
  }

  for (i = num_type(4, "Knight"); i > 0; i--) {
    knight = find_unit(4, "Knight");
    //unit_stance_order(4, knight, "Defensive");
    if (territory_object(4, knight) == 1) {
      switch (rand_int(1, 5)) {
        case 1:
          unit_flee_order(4, knight, 243, 93);
          break;
        case 2:
          unit_flee_order(4, knight, 202, 70);
          break;
        case 3:
          unit_flee_order(4, knight, 134, 33);
          break;
        case 4:
          unit_flee_order(4, knight, 249, 37);
          break;
        case 5:
          unit_flee_order(4, knight, 272, 134);
          break;
      }
    }
  }

  for (i = num_type(4, "Pikemen"); i > 0; i--) {
    pike = find_unit(4, "Pikemen");
    //unit_stance_order(4, pike, "Defensive");
    if (territory_object(4, pike) == 1) {
      switch (rand_int(1, 5)) {
        case 1:
          unit_flee_order(4, pike, 243, 93);
          break;
        case 2:
          unit_flee_order(4, pike, 202, 70);
          break;
        case 3:
          unit_flee_order(4, pike, 134, 33);
          break;
        case 4:
          unit_flee_order(4, pike, 249, 37);
          break;
        case 5:
          unit_flee_order(4, pike, 272, 134);
          break;
      }
    }
  }

  for (i = num_type(4, "Royal Hwarang"); i > 0; i--) {
    royal = find_unit(4, "Royal Hwarang");
    //unit_stance_order(4, royal, "Defensive");
    if (territory_object(4, royal) == 1) {
      switch (rand_int(1, 5)) {
        case 1:
          unit_flee_order(4, royal, 243, 93);
          break;
        case 2:
          unit_flee_order(4, royal, 202, 70);
          break;
        case 3:
          unit_flee_order(4, royal, 134, 33);
          break;
        case 4:
          unit_flee_order(4, royal, 249, 37);
          break;
        case 5:
          unit_flee_order(4, royal, 272, 134);
          break;
      }
    }
  }

  for (i = num_type(5, "Caesar's Legions"); i > 0; i--) {
    caesar = find_unit(5, "Caesar's Legions");
    //unit_stance_order(5, caesar, "Defensive");
    if (territory_object(5, caesar) == 1) {
      switch (rand_int(1, 5)) {
        case 1:
          unit_flee_order(5, caesar, 197, 250);
          break;
        case 2:
          unit_flee_order(5, caesar, 240, 239);
          break;
        case 3:
          unit_flee_order(5, caesar, 259, 161);
          break;
        case 4:
          unit_flee_order(5, caesar, 189, 142);
          break;
        case 5:
          unit_flee_order(5, caesar, 217, 210);
          break;
      }
    }
  }

  if (unit_type_killed(2, "Citizen")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(3, "Citizen")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(4, "Citizen")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(5, "Citizen")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(2, "Scholar")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(3, "Scholar")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(4, "Scholar")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(5, "Scholar")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(2, "Caravan")) {
    dead_guys = dead_guys + 3;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(3, "Caravan")) {
    dead_guys = dead_guys + 3;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(4, "Caravan")) {
    dead_guys = dead_guys + 3;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(5, "Caravan")) {
    dead_guys = dead_guys + 3;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(2, "Merchant")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(3, "Merchant")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(4, "Merchant")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (unit_type_killed(5, "Merchant")) {
    dead_guys = dead_guys + 1;
    string_var1 = parse($S("Civilians killed: $NUM0"), dead_guys);
    obj_message = string_var1;
    change_objective_text("civilian_killed", obj_message);
  }

  if (time_later_than(10)) {
    if (dead_guys >= 100) {
      kills = dead_guys;
        save_results("ceraiding1", get_player_profile_name(), kills);
      victory(1);
    }
    else {
        kills = dead_guys;
        save_results("ceraiding1", get_player_profile_name(), kills);
      defeat(1);
    }
  }
}

