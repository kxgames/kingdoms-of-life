 include "tut_lib.bhs"

scenario {

  labels {
    HUMAN,
    COMPUTER,
  }

  static objective_delay       = 90;
  static selected_citizen_id   = -1;
  static num_raiders           = -1;
  static raiding               = -1;
  static lumbercamp_id         = find_build( HUMAN, "woodcutter's camp" );
  static lumbercamp_x          = object_position_x( HUMAN, lumbercamp_id ) + 2;
  static lumbercamp_y          = object_position_y( HUMAN, lumbercamp_id ) + 2;
  static human_first_city_name = $S("Winchester");
  static human_first_city_id   = find_city_id( human_first_city_name );
  static human_first_city_x    = object_position_x( HUMAN, human_first_city_id );
  static human_first_city_y    = object_position_y( HUMAN, human_first_city_id );
  static human_second_city_id  = -1;
  static human_second_city_x   = -1;
  static human_second_city_y   = -1;
  static human_second_camp     = -1;
  static human_second_camp_max_workers = -1;
  static human_tower_id        = find_build( HUMAN, "tower" );
  static human_barracks_id     = find_build( HUMAN, "barracks");
  static human_library_id      = find_build( HUMAN, "library");
  static human_university_id   = -1;
  static human_market_id       = -1;
  static alarm_sounded         = false;
  static spice_shown           = true;
  static is_north_shown        = true;
  static spice_x               = 64;
  static spice_y               = 122;

  // ========
  // run once
  // ========
  run_once {
    set_auto_peasant_level( 3 );
    bubble_text_hide();
    disable_all_triggers();
    show_all_map_enable(HUMAN);

    enable_trigger("intro");
    enable_trigger("enemy_raid");
    enable_trigger("warn_of_raiding");


    //enable_trigger("build_market");
    //enable_trigger("to_get_special_resources");

    //enable_trigger("arquebusiers_researching");
    //enable_trigger("military_arrive");
    //enable_trigger("enough_resources_for_age");
    enable_trigger("Objective_Reminder");
    set_timer("progress_check",objective_delay);
    
    set_base_rate (HUMAN, "Gold", 0);

    set_object_type_max_health( "woodcutter's camp",  100 );
    set_object_type_max_health( "bombard", 100 );

    set_type_build_time("woodcutter's camp", type_build_time("Woodcutter's Camp") / 3 );
    //set_type_build_time("mine", type_build_time("mine") / 3 );

    set_type_build_time("citizen", type_build_time("citizen") / 2 );
    set_type_build_time("Small City", type_build_time("Small City" ) / 4 );
    set_type_build_time("City State", type_build_time( "City State" ) / 3 );
    set_type_build_time("University", type_build_time( "University" ) / 3 );
    set_type_build_time("Scholar", type_build_time( "Scholar" ) / 5 );
    set_type_build_time("Market", type_build_time( "Market"  ) / 3);
    set_type_build_time("Despotism", type_build_time( "Despotism" ) /6);
    set_type_build_time("Caravan", type_build_time("Caravan" ) / 3 );
    set_type_build_time("Merchant", type_build_time("Merchant" ) / 3);
    set_type_build_time("Gunpowder Age", type_build_time( "Gunpowder Age" ) / 6 );
    //set_type_build_time("farm", type_build_time("farm") / 5 );
    //set_type_build_time("knight", type_build_time("knight") / 10 );
    //set_type_build_time("King's Longbowmen", type_build_time("King's Longbowmen") / 8 );
    //set_type_build_time("Trebuchet", type_build_time("Trebuchet") / 10 );
    //set_type_build_time("Barter", type_build_time("Barter") / 4 );
    //set_type_build_time("Art of War", type_build_time("Art of War") / 5 );
  }
  // ============
  // end run once
  // ============

  // ==========
  // Lost catch
  // ==========

  trigger Objective_Reminder( timer_expired("progress_check") && sound_finished() ) {
    clear_all_arrows();
    right = get_objectives_right();
    top   = get_objectives_top();

    if (right >= 0 && top >= 0) {
      draw_screen_arrow_line( right + 75, top - 75, right, top, 10 );
      play_sound("objective.wav");
      if(objective_delay < 300) {
       objective_delay = objective_delay * 2;
      } else {
       objective_delay = 300;
      }

    }
    set_timer("progress_check", objective_delay);
    enable_trigger("Objective_Reminder");
  }


  // ==============
  // end Lost catch
  // ==============

  // =====
  // Intro
  // =====

  trigger intro( ) {
    cutscene_begin();
    move_camera(get_camera_x(), get_camera_y());
    is_north_shown = true;

    // WAV: The Scottish, led by King James the 4th, have invaded Northern Britain and captured a number of strongholds.
    //      The British army is marching North to face them, but for the time being British citizens must fend for themselves.  
    play_sound("scottish_intro.wav");
    enable_trigger("warn_of_raiding");
    enable_trigger("zoom_to_camp");
  }


  trigger enemy_raid( ) {
    num_raiders = num_unit_category( COMPUTER, "Mounted");

    set_seen( COMPUTER, HUMAN, human_first_city_id );

    for( i = 0; i < num_raiders; i++ ) {
      mounted_unit_id = find_military_category( COMPUTER, "Mounted" );
      unit_attack_to_order( COMPUTER, mounted_unit_id, lumbercamp_x + 2, lumbercamp_y + 2 );
    }

    enable_trigger("continue_raiding");
    enable_trigger("raid_city");
    enable_trigger("enemy_raid_retreat");
    raiding = true;
  }

  trigger zoom_to_camp( sound_finished() ) {
    show_all_map_disable(HUMAN);
    center_camera_on( HUMAN, lumbercamp_id );

    num_raiders = num_unit_category( COMPUTER, "Mounted");

    for( i = 0; i < num_raiders; i++ ) {
      mounted_unit_id = find_military_category( COMPUTER, "Mounted" );
      kill_unit( COMPUTER, mounted_unit_id);
    }
    
    create_unit_in_group( COMPUTER, 59, 64, "Dragoon", 6);

    group_attack_to_order( COMPUTER, lumbercamp_x, lumbercamp_y );

    is_north_shown = false;
  }

  trigger warn_of_raiding( have_fought( HUMAN, COMPUTER ) ) {
    // WAV:  We must defend against the Scottish raids and prevent Winchester from falling under the rule of King James.
    play_sound("scots_raiding.wav");
    enable_trigger("show_city");
  }

  trigger show_city( sound_finished() ) {
    // WAV:  We need to protect our citizens or they will be killed by the Scottish.  
    //       We don't have any military units nearby and don't have time to train any, so we will have to 
    //       sound the alarm and have our citizens run to safety within the city.
    cutscene_end();
    center_camera_on( HUMAN, human_first_city_id );
    play_sound("protect_citizens.wav");
    enable_trigger("intro_fire_alarm");
    enable_trigger("warning");
    enable_trigger("failure");
  }

  trigger intro_fire_alarm( sound_finished() ) {
    add_objective($S("Select your city."), "alarm_select_city", "alarm_select_city.wav");
    play_objective_sound("alarm_select_city");
    // WAV: Select your city.
    enable_trigger("fire_alarm_city_selected");
    set_timer("progress_check",objective_delay);
  }

  trigger fire_alarm_city_selected( object_selected( HUMAN, human_first_city_id ) ) {
    objective_complete("alarm_select_city");
    highlight_option( "Alarm" );
    alarm_sounded = true;

    add_objective($S("Select alarm."), "alarm_fire_alarm", "alarm_select_alarm.wav");
    play_objective_sound("alarm_fire_alarm");
    // WAV: Now, press the "Alarm" button.
    enable_trigger("alarm_activated");
    set_timer("progress_check",objective_delay);
  }

  trigger alarm_activated( city_alarm_sounded( HUMAN, human_first_city_name ) ) {
    clear_highlight();
    objective_complete("alarm_fire_alarm");

    set_timer( "french_retreat", 30 );

    play_sound("alarm_sounded.wav");
    // WAV:  Good job.  Citizens near the town will run to the nearest city, fort, or tower for safety.
    //       The citizens in hiding will fire arrows out at their attackers.
    set_timer("progress_check",objective_delay);
  }

  trigger continue_raiding( !any_object_near( HUMAN, 2, lumbercamp_x, lumbercamp_y, 2)) {
    raider_count = num_unit_category( COMPUTER, "mounted" );
    for( i = 0; i < raider_count; i++ ) {
      raider_id = find_military_category( COMPUTER, "mounted" );
      unit_attack_order( COMPUTER, raider_id, HUMAN, lumbercamp_id );
    }
    enable_trigger("complete_wood_raiding");
  }

  trigger complete_wood_raiding( !find_build(HUMAN, "Woodcutter's Camp") && !any_object_near( HUMAN, 1, lumbercamp_x, lumbercamp_y, 2)) {
    raider_count = num_unit_category( COMPUTER, "mounted" );
    for( i = 0; i < raider_count; i++ ) {
      raider_id = find_military_category( COMPUTER, "mounted" );
      unit_attack_to_order( COMPUTER, raider_id, human_first_city_x, human_first_city_y );
    }
  }

  trigger raid_city(  alarm_sounded ) {
    disable_trigger("continue_raiding");
    raider_count = num_unit_category( COMPUTER, "mounted" );
    for( i = 0; i < raider_count; i++ ) {
      raider_id = find_military_category( COMPUTER, "mounted" );
      unit_attack_order( COMPUTER, raider_id, HUMAN, human_first_city_id );
    }
  }

  trigger enemy_raid_retreat( ( num_unit_category( COMPUTER, "mounted") < ( num_raiders - 1 ) ) || timer_expired( "french_retreat") ) {
    set_timer( "retreat_timer", 2 );
    raiders_remaining = num_unit_category( COMPUTER, "mounted");
    for( i = 0; i < raiders_remaining; i++ ) {
      mounted_unit_id = find_military_category( COMPUTER, "mounted" );
      unit_move_order( COMPUTER, mounted_unit_id, 35, 38 );
    }

    enable_trigger( "enemy_retreat_announce" );
  }

  trigger enemy_retreat_announce( timer_expired( "retreat_timer" ) ) {
    // WAV:  The Scots have had enough and are retreating!
    play_sound("enemy_retreat.wav");
    if (alarm_sounded) {
      enable_trigger("all_clear_intro");
    } else {
      clear_objectives();
      enable_trigger("mention_reinforcements");
    }
  }

  trigger all_clear_intro( !any_object_near_build( COMPUTER, 1, HUMAN, human_first_city_id, 20 ) && sound_finished() ) {
    //WAV:  I think we are safe for a little while, so we can send our citizens back to work.
    play_sound("all_clear_intro.wav");

    if( !object_selected( HUMAN, human_first_city_id ) ) {
      enable_trigger("all_clear_select_city");
    } else {
      enable_trigger("all_clear_city_selected");
    }
    set_timer("progress_check",objective_delay);
  }

  trigger all_clear_select_city( sound_finished() ) {
    // WAV:  Select your city again.
    add_objective($S("Select your city."), "all_clear_select_city_again", "all_clear_select_city_again.wav");
    play_objective_sound("all_clear_select_city_again");
    enable_trigger("all_clear_city_selected");
    set_timer("progress_check",objective_delay);
  }
  
  trigger all_clear_city_selected( object_selected( HUMAN, human_first_city_id ) && sound_finished() ) {
    objective_complete("all_clear_select_city_again");

    highlight_option( "All Clear" );
    add_objective($S("Select the 'All Clear' button to send your citizens back to work."), "all_clear_select_all_clear", "all_clear_select_all_clear.wav");
    play_objective_sound("all_clear_select_all_clear");
    //WAV:  Select the all clear button to send your citizens back to work

    enable_trigger("all_clear");
    set_timer("progress_check",objective_delay);
  }

  trigger all_clear(num_garrisoned_in( HUMAN, human_first_city_id ) == 0 && num_garrisoned_in( HUMAN, human_tower_id ) == 0) {
    clear_highlight();
    objective_complete("all_clear_select_all_clear");
    play_sound("citizens_back.wav");
    // WAV:  Good job.  Now your citizens will return to where they worked before you sounded the alarm.
    enable_trigger("mention_reinforcements");
    set_timer("progress_check",objective_delay);
    set_explored( HUMAN, 102, 55, 15);  // reveal forests before player gets there
  }

  trigger mention_reinforcements( sound_finished() ) {
    // WAV:  The British king knows of our situation.  The army has been divided across the country to 
    //       stop the Scottish from conquering any more land.
    //       But we have been assured that reinforcements are coming.  
    //       All we can do now is continue to gather resources while we wait for 
    //       our protection to arrive.
    cutscene_begin();
    set_explored( HUMAN, 102, 55, 15);  // reveal forests before player gets there
    play_sound("mention_reinforcements.wav");
    enable_trigger("good_wood_spot");
  }

  /*
  trigger need_more_wood( sound_finished() ) {
    // WAV:  We need to establish another woodcutters camp to replace the one that was destroyed.  
    //       The grove that we were using was small and close to the Scottish forces, making it an easy target for raiding..  
    //       We need someplace farther away from Scottish eyes.
    play_sound("need_more_wood.wav");
    zoom_in( 71, 88 );
    enable_trigger( "good_wood_spot" );
  }
  */

  trigger good_wood_spot( sound_finished() ) {
    // WAV:  We need to replace the woodcutter's camp that was destroyed in the raid.
    //       On the right side of our nation there is a large forest far from the Scottish eyes.
    zoom_in( 102, 55 );
    play_sound("good_wood_spot.wav");
    enable_trigger("explain_national_borders");
  }

  trigger explain_national_borders( sound_finished() ) {
    zoom_in( 105, 63 );
    // WAV:  Unfortunately, we can't establish a woodcutters camp because the forest is beyond our national borders.
    //       The red line indicates our national borders.  A nation cannot build outside its borders.
    //       So we will need to extend our borders so that we can build a woodcutter's camp to harvest those trees.
    play_sound("explain_national_borders.wav");
    enable_trigger("best_way_to_expand");
  }

  trigger best_way_to_expand( sound_finished() ) {
    cutscene_end();
    zoom_in_on( HUMAN, find_idle_citizen( HUMAN ) );  
    // WAV:  One of the best ways to increase your territory is by building new cities.  
    //       Lets try to build one near the woods.
    play_sound( "suggest_building_cities.wav" );

    if( object_type_selected( HUMAN, "citizen" ) ) {
      if( build_menu_active() ) {
        enable_trigger("try_city_citizen_build_selected");
      } else {
        enable_trigger( "open_build_menu" );
      }
    } else {
      enable_trigger( "try_city_select_citizen" );
    }
    set_timer("progress_check",objective_delay);
  }

  trigger try_city_select_citizen( sound_finished() ) {
    add_objective($S( "Select a citizen."), "try_city_select_citizen", "try_city_select_citizen.wav" );
    // WAV:  Select one of your citizens.
    play_objective_sound("try_city_select_citizen" );
    enable_trigger( "open_build_menu" );
    set_timer("progress_check",objective_delay);
  }

  trigger open_build_menu( object_type_selected( HUMAN, "citizen" ) && sound_finished() ) {
    selected_citizen_id = find_selected_id(HUMAN);
    objective_complete("try_city_select_citizen");
    highlight_build_option("Small City");
    add_objective ($S("Select the buildings button."), "try_city_select_buildings", "try_city_select_buildings.wav");
    play_objective_sound("try_city_select_buildings");
    // WAV:  Select the Buildings button.
    enable_trigger( "try_city_citizen_build_selected");
    set_timer("progress_check",objective_delay);
  }

  trigger try_city_citizen_build_selected( build_menu_active() && sound_finished() ) {
    objective_complete("try_city_select_buildings");
    //  WAV: You'll see that the Build City option is grayed out. Some buildings require
    //       certain technologies before they can be built. If you mouse over the build city button and read the help text, 
    //       it states that building a city requires researching Civics at the library,
    //       so let's go to the library and research Civics.
    play_sound( "build_city_greyed_out.wav" );
    enable_trigger( "research_civics" );
    set_timer("progress_check",objective_delay);
  }

  trigger research_civics( sound_finished() ) {
    clear_highlight();
    center_camera_on( HUMAN, find_build( HUMAN, "library" ) );

    highlight_tech( "City State" );
    add_objective($S("Research the blue Civics technology at the library."), "research_blue_civics", "research_blue_civics.wav" );
    play_objective_sound("research_blue_civics" );
    // WAV:  Research the first blue Civics technology, City State, at the library.
    enable_trigger("blue_researched");
    enable_trigger("blue_researching");
    set_timer("progress_check",objective_delay);
  }

  trigger blue_researching( researching_tech( HUMAN, "City State") ) {
    clear_highlight();
    set_timer("progress_check",objective_delay);
  }

  trigger blue_researched( have_tech( HUMAN, "City State" ) ) {
    objective_complete("research_blue_civics");

    // WAV:  Excellent work!  With each blue civic technology you research, you can add an additional city to your nation.
    play_sound( "civics_researched.wav" );
    enable_trigger("build_city" );
    set_timer("progress_check",objective_delay);
  }
  
  trigger build_city( sound_finished() ) {
    center_camera_on(HUMAN, selected_citizen_id);
    add_flag( 108, 64 );
    ping( HUMAN, HUMAN, 108, 64);
    highlight_build_option("Small City");
    add_objective($S("Build the city near the forest."), "build_city_trigger", "build_city.wav" );
    // WAV:  Now build a city near the forest on the right side of your nation.
    play_objective_sound( "build_city_trigger" );
    enable_trigger("city_building");
    enable_trigger( "city_built" );
    enable_trigger("city_selected");
    set_timer("progress_check",objective_delay);
  }

  trigger city_selected( build_option_selected("City") ) {
    enable_trigger("city_deselected");
    set_timer("progress_check",objective_delay);
  }

  trigger city_deselected( !build_option_selected("City") && !find_inactive_build( HUMAN, "City") && sound_finished() ) {
    // WAV:  Right clicking when trying to place a building will clear the selection.  To place a building, 
    //       you need to select the building then left click on the location that you want to place it in.
    play_sound("building_deselected.wav");
    set_timer("progress_check",objective_delay);
  }

  trigger city_building( find_inactive_build( HUMAN, "" ) ) {  // cheap, but I'm tired
    disable_trigger("city_deselected");
    clear_flags();
    clear_highlight();
  }

  trigger city_built( num_cities( HUMAN ) > 1 ) {
    objective_complete("build_city_trigger" );

    while( human_second_city_id == -1 ) {
      found_city = find_build( HUMAN, "Small City");
      if( found_city != human_first_city_id ) {
        human_second_city_id = found_city;
        human_second_city_x  = object_position_x( HUMAN, human_second_city_id );
        human_second_city_y  = object_position_y( HUMAN, human_second_city_id );
      }
    }

    // WAV:  Your city is complete, and your national borders have been extended.  Now most of the 
    //       forest is within our territory and 
    //       we can build a woodcutters camp. 
    play_sound("borders_expand_when_city_built.wav");
    set_timer("progress_check",objective_delay);
    enable_trigger( "build_camp");
  }
  
  trigger build_camp( sound_finished() ) {
    highlight_build_option("woodcutter's camp");
    add_objective($S("Build a woodcutter's camp."), "build_woodcutter_camp", "build_woodcutter_camp.wav");
    // WAV:  Build a woodcutter's camp near the forest.  Try to find a spot where 8 or 9 citizens can work.
    play_objective_sound("build_woodcutter_camp");
    ping( 1, 1, 105, 49 );
    enable_trigger( "built_camp" );
    enable_trigger("camp_building");
    enable_trigger("wood_selected");
    set_timer("progress_check",objective_delay);
  }

  trigger wood_selected( build_option_selected("Woodcutter's Camp") ) {
    enable_trigger("wood_deselected");
    set_timer("progress_check",objective_delay);
  }

  trigger wood_deselected( !build_option_selected("Woodcutter's Camp") && !find_inactive_build( HUMAN, "Woodcutter's Camp") && sound_finished() ) {
    // WAV:  Right clicking when trying to place a building will clear the selection.  To place a building, 
    //       you need to select the building then left click on the location that you want to place it in.
    play_sound("building_deselected.wav");
  }

  trigger camp_building( find_inactive_build( HUMAN, "Woodcutter's Camp") ) {
    disable_trigger("wood_deselected");
    clear_highlight();
    set_timer("progress_check",objective_delay);
  }

  trigger built_camp( find_build( HUMAN, "Woodcutter's Camp" ) ) {
    human_second_camp = find_build( HUMAN, "Woodcutter's Camp");
    human_second_camp_max_workers = max_workers_at_building( HUMAN, human_second_camp );
    objective_complete( "build_woodcutter_camp" );

      
    if( !is_rally_set( HUMAN, human_second_city_id ) ) {
      enable_trigger("teach_rally_point");
    } else {
      enable_trigger("military_arrive");
    }
    set_timer("progress_check",objective_delay);
  }

  trigger teach_rally_point( sound_finished() ) {
    // WAV:  We need to fill up the woodcutters camp with workers.
    //       One quick way to assign new citizens to the woodcutter's camp is to give the city a rally point.
    //       A rally point directs units to go to a specific location when they are built.
    play_sound("teach_rally_point.wav");

    if( !object_selected( HUMAN, human_second_city_id ) ) {
      enable_trigger("rally_points_select_city");
    } else {
      enable_trigger("rally_points_click_rally");
    }
    set_timer("progress_check",objective_delay);
  }

  trigger rally_points_select_city( sound_finished() ) {
    add_objective($S("Select your new city."), "rally_points_select_city", "rally_points_select_city.wav");
    // WAV:  Select your new city.
    play_objective_sound("rally_points_select_city");
    enable_trigger( "rally_points_click_rally");
    set_timer("progress_check",objective_delay);
  }

  trigger rally_points_click_rally( object_selected( HUMAN, human_second_city_id ) ) {
    highlight_option( "Rally Point" );
    objective_complete("rally_points_select_city");
    add_objective($S("Select Rally Point."), "rally_points_click_rally", "rally_points_click_rally.wav");
    // WAV:  Now, select the Rally Point button in the City's interface
    play_objective_sound("rally_points_click_rally");
    enable_trigger("rally_points_rally_clicked");
    set_timer("progress_check",objective_delay);
  }
  
  trigger rally_points_rally_clicked( is_rally_selected() ) {
    objective_complete("rally_points_click_rally");
    clear_highlight();

    add_objective($S("Left click on your woodcutter's camp."), "rally_points_click_camp", "rally_points_click_camp.wav" );
    // WAV:  Now left click on your woodcutter's camp to set it as your rally point.  This will make new citizens
    //       created at the city immediately start working at the camp.
    play_objective_sound("rally_points_click_camp");
    enable_trigger("rally_point_set");
    set_timer("rally_point_timer", 1);
    enable_trigger("is_rally_cancelled");
    set_timer("progress_check",objective_delay);
  }

  trigger is_rally_cancelled( !is_rally_selected() && !is_rally_set( HUMAN, human_second_city_id ) ) {
    // WAV:  Right clicking will clear your rally point.  Select rally point at the city again and 
    //       left click on the woodcutter's camp to place it there.
    play_sound("cancelled_rally_point.wav");
  }

  trigger rally_point_set( is_rally_set( HUMAN, human_second_city_id) ) {
    disable_trigger("is_rally_cancelled");
    rally_x = get_rally_x( HUMAN, human_second_city_id );
    rally_y = get_rally_y( HUMAN, human_second_city_id );

    point_on_camp = false;
    num_camps = num_type(HUMAN, "Woodcutter's Camp");
    
    for(i = 0; i < num_camps; i++) {
      camp_id = find_build(HUMAN, "Woodcutter's Camp");
      camp_x = object_position_x(HUMAN, camp_id);
      camp_y = object_position_y(HUMAN, camp_id);
      if ((rally_x == camp_x) && (rally_y == camp_y)) {
        point_on_camp = true;
      }
    }

    if( point_on_camp ) {
      enable_trigger( "rally_point_set_on_camp");
    } else {
      if( timer_expired( "rally_point_timer" ) ) {
        // WAV:  You set the rally point, but it was not on the woodcutter's camp.  Select your city and select rally point again, 
        //       and left click on the woodcutters camp to have the workers start working there when they are ready.
        play_sound("rally_point_incorrect.wav");
        set_timer( "rally_point_timer", 20 );
      }
      enable_trigger("rally_point_set");
    }
      set_timer("progress_check",objective_delay);
  }

  trigger rally_point_set_on_camp( ) {
    objective_complete("rally_points_click_camp");
    // WAV:  Good, now all the citizens built at the city will go to work at the woodcutters camp.  
    //       If you build more citizens than there are openings at the woodcutters camp, they
    //       will move near the camp and wait for your command.  
    play_sound("rally_points_complete.wav");
    enable_trigger( "start_queuing_citizens");
  }

  trigger start_queuing_citizens( sound_finished() ) {
    add_objective($S( "Create enough citizens at your city to fill the woodcutter's camp to capacity."), "queue_citizens", "queue_citizens.wav" );
    // WAV:  Now create enough Citizens at your new city to fill the woodcutter's camp to capacity.  
    //       Remember to mouseover your woodcutter's camp to see how many you need.
    play_objective_sound("queue_citizens");
    enable_trigger("queue_citizens");
    set_timer("progress_check",objective_delay);
  }


  trigger queue_citizens( num_type_queued( HUMAN, human_second_city_id, "citizen") >= ( human_second_camp_max_workers - num_workers_at_building( HUMAN, human_second_camp )  )  ){
    objective_complete( "queue_citizens");
    enable_trigger("military_arrive");

    // WAV:  You can also use rally points on military buildings to have your newly constructed units 
    //       gather near a strategic location.
    play_sound("rally_points_strategic_location.wav");

    // send in general
    //new_unit = create_unit_upgrade(HUMAN, 138, 79, $S("General"), 1);
    //unit_move_order( HUMAN, new_unit, 110, 91);
    set_timer("progress_check",objective_delay);
  }  

  

  trigger military_arrive( sound_finished() ) {
    zoom_in( 114, 94 );
    cutscene_begin();

    // WAV:  Our reinforcements have just arrived!  We are saved from the Scots!
    play_sound("reinforcements_arrive.wav");
    
    //set_timer("more_military", 1);
    enable_trigger( "more_military_arrives" );
    set_timer("progress_check",objective_delay);
  }

  trigger more_military_arrives( /*timer_expired("more_military" )*/ ) {
    create_unit_in_group( HUMAN, 110, 62, "Light Cavalry", 3 );
    create_unit_in_group( HUMAN, 102, 54, "Elite Javelineers", 5 );
    create_unit_in_group( HUMAN, 122, 54, "Elite Javelineers", 6 );
    group_move_order( HUMAN, 114, 91 );
    
    set_timer("wait_for_march_in", 8);
    enable_trigger("no_mistake");
    
    /*
    for( i = 0; i < num_type( HUMAN, "Light Cavalry"); i++ ) {
      cavalry_id = find_unit( HUMAN, "Light Cavalry" );
      unit_move_order( HUMAN, cavalry_id, 110, 86 );
    }

    set_timer("even_more_military", 2);
    enable_trigger( "maybe_mistake" );
    */
  }

  /*
  trigger maybe_mistake( timer_expired("even_more_military") ) {
    create_unit_upgrade( HUMAN, 138, 79, "Elite Javelineers", 15 );

    for( i = 0; i < num_type( HUMAN, "Elite Javelineers"); i++ ) {
      javelineers_id = find_unit( HUMAN, "Elite Javelineers" );
      unit_move_order( HUMAN, javelineers_id, 114, 91 );
    }

    set_timer("wait_for_march_in", 8);
    enable_trigger("no_mistake");
  }
  */

  trigger no_mistake( timer_expired("wait_for_march_in") ) {
    // WAV:  The general claims there is no mistake: this is the entire reinforcement.
    //       These javelineers and a few light cavarly are all the English command could spare to send us.
    //       These old stick throwers won't put a dint in the Scottish Army's shiny new armor.
    play_sound("this_is_no_mistake.wav");
    //enable_trigger("maybe_upgrade");
    enable_trigger("advancement");
  }

  /*
  trigger maybe_upgrade( sound_finished() ) {
    ui_show();
    scrolling_unlock();
    zooming_unlock();
    // WAV:  We have to find something to make these reinforcements more fearsome.  We should consider trying to
    // upgrade the javelineers to a more advanced type of light infantry.
    play_sound("consider_upgrades.wav");
    enable_trigger("intro_upgrade");
  }

  trigger intro_upgrade( sound_finished() ) {
    // WAV:  Unit upgrades are available in the type of building that the unit would be created in.  For the Javelineers,
    //       that would be the barracks.
    play_sound("unit_upgrades.wav");
    enable_trigger("select_barracks");
  }

  trigger select_barracks( sound_finished() ) {
    center_camera_on( HUMAN, human_barracks_id );
    add_objective($S("Select your barracks."), "select_barracks", "select_barracks.wav");
    play_objective_sound("select_barracks");
    // WAV:  Select your barracks 
    enable_trigger("barracks_selected");
  }

  trigger barracks_selected( object_selected( HUMAN, human_barracks_id ) ) {
    objective_complete("select_barracks");
    // WAV:  The top row of units are ones currently available to be built.
    //       Below each unit is its upgrade. If you look below the Elite Javeliiers, it
    //       looks like they can be upgraded to Arquebusiers!
    play_sound("look_at_upgrades.wav");
    enable_trigger("unit_disabled");
  }

  trigger unit_disabled( sound_finished() ) {
    // WAV:  Unfortunately, we cannot upgrade at this time.  If you mouse over the arquebusiers button to find 
    //       the requirements 

    highlight_train_option("Arquebusiers");
    //       for the upgrade, it will state that our nation needs to be at the gunpowder age to upgrade.
    play_sound("arquebusiers_disabled.wav");
    enable_trigger("try_to_age_up");
  }

  trigger try_to_age_up( sound_finished() ) {
    clear_highlight();
    center_camera_on( HUMAN, human_library_id );
    // WAV:  Advancing to the next age requires research in your library.
    play_sound("advancing_age.wav");
    highlight_tech("Gunpowder Age");

    if( !object_selected( HUMAN, human_library_id ) ) {
      enable_trigger("try_to_age_select_library");
    } else {
      enable_trigger("try_to_age_talk_about_age");
    }
  }

  trigger try_to_age_select_library( sound_finished() ) {
    add_objective($S("Select your library."), "try_to_age_library_select", "try_to_age_library_select.wav");
    play_objective_sound("try_to_age_library_select");
    // WAV:  Select your library
    enable_trigger("try_to_age_talk_about_age");
    highlight_tech( "Gunpowder Age");
  }

  trigger try_to_age_talk_about_age( object_selected( HUMAN, human_library_id ) && sound_finished() ) {
    objective_complete("try_to_age_library_select");
    // WAV:  The top row of buttons in the library record your nations progress through the ages.  We are currently in 
    //       the medieval age and we want to advance to the gunpowder age.  If you mouseover the gunpowder age
    //       you'll find that we need food and knowledge to perform the research.
    play_sound("try_to_age_talk_about_age.wav");
    enable_trigger("need_knowledge");
  }
  */

  trigger advancement( sound_finished() ) {
    // WAV:  We will need to upgrade to the gunpowder age or our army will be crushed.
    //       To upgrade to the gunpowder age, we will need to start gathering knowledge.
    play_sound("talk_about_advancement.wav");
    enable_trigger("need_knowledge");
  }

  trigger need_knowledge( sound_finished() ) {
    clear_highlight();
    cutscene_end();
    // WAV:  Knowledge is gathered by building universities and filling them up with scholars.  
    play_sound("need_knowledge.wav");
    enable_trigger("build_university");
    set_timer("progress_check",objective_delay);
  }
  
  trigger build_university( sound_finished() ) {
    //center_camera_on( HUMAN, find_idle_peasant( HUMAN ) );


    // WAV:  So first, select a citizen and build a university.

    highlight_build_option("University");

    add_objective($S("Select a citizen and build a university."), "build_university", "build_university.wav");
    play_objective_sound("build_university");
    enable_trigger("university_built");
    enable_trigger("university_building");
    enable_trigger("university_selected");
    set_timer("progress_check",objective_delay);
  }

  trigger university_selected( build_option_selected("University") && sound_finished() ) {
    enable_trigger("university_deselected");
  }

  trigger university_deselected( !build_option_selected("University") && !find_inactive_build( HUMAN, "University") && sound_finished() ) {
    // WAV:  Right clicking when trying to place a building will clear the selection.  To place a building, 
    //       you need to select the building then left click on the location that you want to place it in.
    play_sound("building_deselected.wav");
  }

  trigger university_building( find_inactive_build( HUMAN, "University" ) ) {
    disable_trigger("university_deselected");
    clear_highlight();
  }

  trigger university_built( find_build( HUMAN, "University" ) && sound_finished() ) {
    objective_complete("build_university");
    human_university_id = find_build( HUMAN, "University" );

    play_sound("university_built.wav");
    // WAV:  Universities generate some knowledge on their own, but need scholars to be fully effective.

    if( !object_selected( HUMAN, human_university_id ) ) {
      enable_trigger("select_university");
    } else {
      enable_trigger("scholars_trained");
    }
    set_timer("progress_check",objective_delay);
  }

  trigger select_university( sound_finished() ) {
    add_objective($S("Select your university."), "select_university", "select_university.wav");
    // WAV:  Select your university.  
    play_objective_sound("select_university");
    enable_trigger("scholars_trained");
    set_timer("progress_check",objective_delay);
  }
  
  /*
  trigger train_scholars( object_selected( HUMAN, human_university_id ) && sound_finished() ) {
    objective_complete("select_university");
    play_sound( "need_scholars.wav");
    // We need to build scholars in the university to gain knowledge.  
    enable_trigger("scholars_trained");
  }
  */

  trigger scholars_trained( object_selected( HUMAN, human_university_id ) && sound_finished() ) {
    objective_complete("select_university");

    if( num_type(HUMAN, "wealth") < 335 ) {
      set_good(HUMAN, "wealth", 335);
    }

    highlight_train_option("Scholar");
    add_objective($S("Build 7 scholars at the university."), "train_scholars", "train_scholars.wav");
    play_objective_sound("train_scholars");
    // If you look at the help text for the Scholar build button, it shows that scholars cost around 20 wealth.
    // It looks like we have just enough wealth to afford to fill up the university with scholars.
    // Build 7 scholars at the university.
    enable_trigger("scholars_one_finish");
    enable_trigger("clear_scholar_highlight");
    set_timer("progress_check",objective_delay);
  }

  trigger clear_scholar_highlight( num_type_queued( HUMAN, human_university_id, "Scholar") > 0 ) {
    clear_highlight();  
  }

  trigger scholars_one_finish( ( num_workers_at_building( HUMAN, human_university_id ) > 0 ) && sound_finished() ) {
    play_sound("scholar_complete.wav");
    // WAV: When a scholar is complete, they appear within the university.  Each scholar in a university adds +5 to your knowledge 
    // gathering rate. 
    enable_trigger("scholars_all_done");
  }

  trigger scholars_all_done( ( num_workers_at_building( HUMAN, human_university_id ) >= 7 ) && sound_finished() ) {
    objective_complete("train_scholars");

    play_sound("out_of_gold.wav");
    // WAV: We have filled our university to capacity and we will gather enough knowledge soon to advance to the gunpowder age.
    //      Purchasing the scholars has depleated much of our wealth, and we currently are not gathering any at this point.
    //      We need to start gathering more wealth to refill our coffers.
    enable_trigger("talk_about_wealth");
    set_timer("progress_check",objective_delay);
  }

  trigger talk_about_wealth( sound_finished() ) {
    play_sound("talk_about_resources.wav");
  // WAV:  You gain wealth by establishing trade routes with 
  //       caravans between your cities.
    enable_trigger("need_market");
  }

  trigger need_market( sound_finished() ) {
  // WAV:  To build caravans, we will need to first build a market.
    play_sound("need_market.wav");
    enable_trigger("build_market");
  }

  trigger build_market( sound_finished() ) {
    highlight_build_option( "Market" );
    // WAV:  Build a market.
    add_objective($S("Build a market."), "build_market", "build_market.wav");
    play_objective_sound("build_market");
    enable_trigger("market_built");
    enable_trigger("market_building");
    enable_trigger("market_selected");
    set_timer("progress_check",objective_delay);
  }

  trigger market_selected( build_option_selected("Market") ) {
    enable_trigger("market_deselected");
  }

  trigger market_deselected( !build_option_selected("Market") && !find_inactive_build( HUMAN, "Market") && sound_finished() ) {
    // WAV:  Right clicking when trying to place a building will clear the selection.  To place a building, 
    //       you need to select the building then left click on the location that you want to place it in.
    play_sound("building_deselected.wav");
  }

  trigger market_building( find_inactive_build( HUMAN, "Market" ) ) {
    disable_trigger("market_deselected");
    clear_highlight();
    set_timer("progress_check",objective_delay);
  }

  trigger market_built( num_type( HUMAN, "Market" ) > 0 ) {
    objective_complete("build_market");
    human_market_id = find_build( HUMAN, "Market" );
    
    add_objective($S("Select your market."), "select_market", "select_market.wav");
    // WAV:  Good! Now, select your market.
    play_objective_sound("select_market");
    enable_trigger("select_market");
    set_timer("progress_check",objective_delay);
  }

  trigger select_market( object_selected( HUMAN, human_market_id ) ) {
    objective_complete("select_market");

    highlight_train_option("caravan");
    add_objective($S("Build a caravan"), "build_caravan", "build_caravan.wav");
    play_objective_sound("build_caravan");
    // WAV:  You can build caravans and merchants at the market.  We want to build a caravan.
    enable_trigger( "caravan_built" );
    enable_trigger("caravan_building");
    set_timer("progress_check",objective_delay);
  }

  trigger caravan_building( num_type_queued( HUMAN, human_market_id, "Caravan" ) > 0 ) {
    clear_highlight();
    set_timer("progress_check",objective_delay);
  }


  trigger caravan_built( num_type( HUMAN, "Caravan" ) >= 1 ) {
    objective_complete("build_caravan");

  // WAV:  When caravans are built, they are idle for a moment. If available, they then find an open route between cities 
  //       and start to establish a trade route.
    play_sound("caravan_behavior.wav");
    enable_trigger("caravan_rules");
  }

  /*
  trigger watch_caravan( sound_finished() ) {
    add_objective($S("Follow the caravan."), "follow_caravan", "follow_caravan.wav");
    play
    // WAV:  Follow the caravan as it walks between your cities. 
    play_objective_sound("follow_caravan");
    enable_trigger("caravan_rules");
  }
  */

  trigger caravan_rules( sound_finished() ) {
    // WAV:  A trade route can be established between any two cities. The number of trade routes is limited to your level
    //       of commerce technology, plus 1.
    //       We currently have two cities, thus we only need one caravan to generate wealth from the trade route.
    //       If you want to generate more wealth, build more cities and caravans to travel between them.
    play_sound("caravan_rules.wav");
    enable_trigger("while_waiting_for_route");
  }

  trigger while_waiting_for_route( sound_finished() ) {
    // WAV:  While we are waiting for the caravan to generate more wealth for us, we can start looking at other special resources around
    //       the map.
    play_sound("mention_special_resources.wav");
    enable_trigger("other_special_resources");
  }

  trigger route_complete( num_caravan_routes( HUMAN ) >= 1 ) {
    objective_complete("follow_caravan");

    play_sound("established_trade_route.wav");
    // WAV:  Good, we've established a trade route to generate wealth!
    enable_trigger("other_special_resources");
    set_timer("progress_check",objective_delay);
  }

  trigger other_special_resources( sound_finished() ) {
    // WAV:  Besides the basic resources of food, timber, metal, wealth, and knowledge, there are special resources
    //       that we can also control.
    play_sound("other_special_resources.wav");
    enable_trigger("intro_spice");
  }

  trigger intro_spice( sound_finished() ) {
    add_reveal_point(HUMAN, spice_x, spice_y, 15);
    move_camera( spice_x, spice_y );
    play_sound("spice.wav");
    // WAV:  This is the spice special resource. 

    if( get_resource_at_mouse() ) {
      enable_trigger("moused_over_spice");
    } else {
      enable_trigger("mouse_over_spice");
    }
    set_timer("progress_check",objective_delay);
  }

  trigger mouse_over_spice( sound_finished() ) {
    add_objective($S("Move your mouse over the spice and read the help text."), "mouse_over_spice", "mouse_over_spice.wav");
    // Move your mouse over the spice and read the help text to find what effect it has on your nation.
    play_objective_sound("mouse_over_spice");
    enable_trigger("moused_over_spice");
    set_timer("progress_check",objective_delay);
  }
    
  trigger moused_over_spice( get_resource_at_mouse() ) {
    enable_trigger("kept_moused_over_spice");
    set_timer("moused_over_spice", 2);
  }

  trigger kept_moused_over_spice( get_resource_at_mouse() && timer_expired("moused_over_spice") ) {
    objective_complete("mouse_over_spice");

    play_sound("moused_over_spice.wav");
    // WAV:  If you read the help text it says that we get a bonus for caravan income!  This will help us generate
    //       even more wealth!
    
    enable_trigger("to_get_special_resources");
  }

  trigger to_get_special_resources( sound_finished() ) {
    // WAV:  We need to build a merchant to take advantage of the spice.
    play_sound("need_merchant.wav");
    enable_trigger("build_merchant");
  }

  trigger build_merchant( sound_finished() ) {
    if( !is_on_screen( object_position_x( HUMAN, human_market_id ), object_position_y( HUMAN, human_market_id ) ) ) {
      center_camera_on( HUMAN, human_market_id );
    }
    highlight_train_option("Merchant");
    add_objective($S("Build a merchant at your market."), "build_merchant", "build_merchant.wav");
    play_objective_sound("build_merchant");
    // WAV:  Build a merchant at the market.
    enable_trigger("merchant_built");
    enable_trigger("merchant_building");
    set_timer("progress_check",objective_delay);
  }

  trigger merchant_building( num_type_queued( HUMAN, human_market_id, "Merchant") ) {
    clear_highlight();
  }

  trigger merchant_built( num_type( HUMAN, "Merchant" ) > 0 ) {
    objective_complete("build_merchant");

    add_objective($S("Select your merchant and right click on the spice to have it start gathering it."), "active_merchant", "start_spice_gathering.wav");
    play_objective_sound("active_merchant");
    // WAV:  Good job.  To have your merchant start using the spice, select your merchant and right click on the spice.
    enable_trigger("merchant_deployed");
    enable_trigger("unit_crossing_water");
    set_timer("progress_check",objective_delay);
  }

  trigger unit_crossing_water( object_near( HUMAN, find_unit(HUMAN, "Merchant"), spice_x, spice_y, 26) ){
    play_sound("unit_crossing_water.wav");
  // WAV:  Units can travel across water if you have a dock and two commerce technologies researched at your library.
  //       We have the needed requirements, so your merchant will pack itself into a boat and move across the water.
    merchant_id = find_unit( HUMAN, "Merchant");
    merchant_x  = object_position_x( HUMAN, merchant_id );
    merchant_y  = object_position_y( HUMAN, merchant_id );
    if( !is_on_screen( merchant_x, merchant_y ) ) {
      center_camera_on( HUMAN, merchant_id );
    }
    set_timer("progress_check",objective_delay);
  }

  trigger merchant_deployed( is_merchant_unpacked( HUMAN, find_unit( HUMAN, "Merchant" ) ) ) {
    // WAV:  Your merchant has set up shop and is now gathering spice for your nation!
    objective_complete("active_merchant");
    play_sound("merchant_deployed.wav");
    enable_trigger("talk_about_wealth_again");
    spice_shown = false;
    clear_reveal_points(HUMAN);
    set_timer("progress_check",objective_delay);
  }

  trigger talk_about_wealth_again( sound_finished() ) {
    // WAV:  Now you have established wealth income by making a caravan route between cities, 
    //       and recieved a bonus by moving a merchant to collect the spice special resource.  Good job!
    play_sound("congrats_on_wealth.wav");
    //enable_trigger("fill_up_university");
    enable_trigger("resources_gathered");
  }
   
  //trigger yap_about_special_resources( sound_finished() ) {
  //  // WAV:  There are other special resoures that can .  Bison, tobacco, whales, papyrus, and bears.
  //  //       They each generate a unique special ability that helps your nation.
  //  play_sound("yap_about_special_resources.wav");
  //  enable_trigger("fill_up_university");
  //}
  

  //trigger fill_up_university( sound_finished() ) {
  //  // WAV:  Now we have generated enough wealth to build more scholars at our university.
  //  center_camera_on( HUMAN, human_university_id );
  //  play_sound("enough_wealth_for_scholars.wav");
  //  enable_trigger("build_more_scholars");
  //}

  //trigger build_more_scholars( sound_finished() ) {
    
  //  add_objective($S("Build enough scholars to fill your university to its capacity."), "university_full", "university_capacity.wav");
  //  play_objective_sound("university_full");
  //  // WAV:  So, build more scholars at your university to fill it to capacity at seven.
  //  enable_trigger("scholars_complete");
  //}

  //trigger scholars_complete( num_workers_at_building( HUMAN, human_university_id ) == max_workers_at_building( HUMAN, human_university_id ) ) {
  //  objective_complete("university_full");
  //  // WAV:  Good, now we're producing as much knowledge at we can at the university.  
  //  // It looks like we have enough knowledge to advance to the Gunpowder age!
  //  play_sound( "full_university.wav");
  //  enable_trigger("enough_resources_for_age");
  //}

  trigger resources_gathered( sound_finished() ) {
    play_sound("ready_for_age_up.wav");
    // WAV:  While we've been setting up our caravan routes to gather wealth, our scholars 
    //       have generated enough knowledge to upgrade to the gunpowder age.
    enable_trigger("select_library_for_age");
  }

  trigger select_library_for_age( sound_finished() ) {
    // WAV:  To advance in age, we need to do research in the library.  Select your library.
    add_objective($S("Select your library."), "select_library_for_age", "select_library_for_age.wav");
    play_objective_sound("select_library_for_age");
    enable_trigger("enough_resources_for_age");
    set_timer("progress_check",objective_delay);
  }

  trigger enough_resources_for_age( object_selected( HUMAN, human_library_id ) ) {
    objective_complete("select_library_for_age");
    add_objective($S("Select your library and upgrade to the Gunpowder age."), "upgrade_to_gunpowder", "upgrade_to_gunpowder.wav");
    play_objective_sound("upgrade_to_gunpowder");
    highlight_tech("Gunpowder Age");
    // WAV:  The top row of buttons in the library record your nations progress through the ages.  We are currently in 
    //       the medieval age and we want to advance to the gunpowder age.  Select your library and upgrade to the 
    //       Gunpowder age.
    enable_trigger( "age_complete" );
    enable_trigger( "researching_age" );
    set_timer("progress_check",objective_delay);
  }
  
  trigger researching_age( researching_tech( HUMAN, "Gunpowder Age" ) ) {
    clear_highlight();
  }

  trigger age_complete( have_tech(HUMAN, "Gunpowder Age" ) ) {
    objective_complete("upgrade_to_gunpowder");

    if( num_type( HUMAN, "food" ) < 375 ) {  // hack to give the player more food for the arquebusiers upgrade
      give_good( HUMAN, "food", 375 - num_type(HUMAN, "food") );
    }

    play_sound("advanced_in_age.wav");
    // WAV:  Congratulations! Our nation has advanced from the medival age to the gunpowder age!  
    //       Your buildings 
    //       Among other advantages, advancing in age
    //       allows your units to be upgraded and more advanced buildings to be constructed.
    enable_trigger("select_barracks");
    set_timer("progress_check",objective_delay);
  }

  trigger select_barracks( sound_finished() ) {
    center_camera_on( HUMAN, human_barracks_id );
    add_objective($S("Select your barracks."), "select_barracks", "select_barracks.wav");
    play_objective_sound("select_barracks");
    // WAV:  Select your barracks 
    enable_trigger("barracks_selected");
    set_timer("progress_check",objective_delay);
  }

  trigger barracks_selected( object_selected( HUMAN, human_barracks_id ) ) {
    objective_complete("select_barracks");
    // WAV:  The top row of units are ones currently available to be built.
    //       Below each unit is its upgrade. If you look below the Elite Javeliiers, it
    //       looks like they can be upgraded to Arquebusiers!
    play_sound("look_at_upgrades.wav");
    enable_trigger("now_research_units");
  }  

  trigger now_research_units( sound_finished() ) {
    highlight_train_option("Arquebusiers");
    add_objective($S("Research the Arquebusier upgrade at the barracks."), "research_arquebusiers", "research_arquebusiers.wav");
    play_objective_sound("research_arquebusiers");
    // WAV:  Now let us upgrade our Javelineers to modern units before King James attacks.  
    //       Select the Arquebusiers upgrade to start researching this new unit type.
    enable_trigger("arquebusiers_researching");
    //enable_trigger("slowly_researching");
    set_timer("progress_check",objective_delay);
  }

  /*
  trigger slowly_researching( researching_tech( HUMAN, "Arquebusiers" ) ) {
    clear_highlight();
  }
  */

  trigger arquebusiers_researching( find_current_upgrade( HUMAN, "Slingers" ) == "Arquebusiers" ) {
    disable_trigger("warning");
    disable_trigger("failure");
    clear_highlight();
    objective_complete("research_arquebusiers");

    play_sound("notice_arquebusiers.wav");
    // WAV:  Note that all of your elite javelineers are now Arquebusiers.  Whenever you research
    //       a unit upgrade, all of your existing units of old unit type will outfit themselves 
    //       to the new type.
    enable_trigger("move_military_to_protect");
    set_timer("progress_check",objective_delay);
  }

  trigger move_military_to_protect( sound_finished() ) {

    num_scottish_military = num_military_units( COMPUTER );
    for( i = 0; i < num_scottish_military; i++ ) {
      military_id = find_military( COMPUTER );
      add_to_group(COMPUTER, military_id);
    }

    group_attack_to_order(COMPUTER, human_first_city_x, human_first_city_y);

    add_flag(90, 98);
    add_objective($S("Move your military above your first city to prepare for the attack."), "attack_prepare", "attack_prepare.wav");
    play_objective_sound("attack_prepare");

    // WAV:  Our spies report preparations from Liecester to the North.  
    //       I think King James has grown restless and is ready to battle.  
    //       Move your entire military near your city of Winchester to prepare for the attack.
    enable_trigger("army_rallied");
    set_timer("progress_check",objective_delay);

    enable_trigger("scottish_arriving");
    enable_trigger("scottish_defeated");
    enable_trigger("english_defeated");
  }

  trigger army_rallied( object_type_near_build( HUMAN, "Arquebusiers", 4, HUMAN, human_first_city_id,  12 )) {
    clear_flags();
    objective_complete("attack_prepare");

    // WAV:  Remember to sound your alarm when the Scottish attack so that your citizens will run to safety and fire guns
    //       at the attackers.
    play_sound("remember_alarm.wav");
    disable_trigger("Objective_Reminder");
  }

  trigger scottish_arriving( any_object_near_build( COMPUTER, 1, HUMAN, human_first_city_id, 20) ) {
    play_sound("english_honor.wav");
    // WAV:  The Scottish have arrived for the attack!  Fight bravely for British honor and do not let Winchester fall to the Scots!
    add_objective($S("Defend your city!"), "defend_city", "" );
  }

  trigger scottish_defeated( num_military_units( COMPUTER ) == 0 ) {
    objective_complete("defend_city");

    // WAV:  Congratulations! We have defeated the Scottish attack and survived against all odds!
    //       
    play_sound("survived.wav");
    enable_trigger("we_won");
  }

  trigger english_defeated( ( num_military_units( HUMAN ) <= 1 ) && ( num_military_units( COMPUTER ) > 1 ) ) {
    // WAV:  The English king underestimated the strength of the scottish units.  Build more Arquebusiers 
    //       quickly at the barracks or we will lose the city!
    play_sound("build_arquebusiers.wav");
  }

  trigger warning( any_object_near( HUMAN, 1, 26, 30, 30 ) ) {
    // WAV:  Liester is heavily fortified and we don't have the units available for a siege.  It would be best if you moved your units back to Winchester to defend the city.
    play_sound("warning.wav");
    enable_trigger("failure");
  }

  trigger failure( any_object_near( HUMAN, 1, 26, 30, 18 ) ) {
    clear_objectives();
    disable_all_triggers();
    enable_trigger("scottish_defeated");
    
    num_scottish_military = num_military_units( COMPUTER );
    clear_group(COMPUTER);
    for( i = 0; i < num_scottish_military; i++ ) {
      military_id = find_military( COMPUTER );
      add_to_group(COMPUTER, military_id);      
    }

    group_attack_to_order( COMPUTER, human_first_city_x, human_first_city_y);

  
    bombard_id = find_unit(COMPUTER, "bombard");
    unit_attack_ground_order(COMPUTER, bombard_id, human_first_city_x, human_first_city_y);

    // WAV:  Your little scouting mission has been found out by the Scottish!
    //       No more time for preparations!  Ready or not, there they come.
    play_sound("failure.wav");
  }

  trigger we_won( sound_finished() ) {
    victory( HUMAN );
  }

  /*
  trigger blah(  ) {
    objective_complete("");
    add_objective("", "", ".wav" );
    play_objective_sound("");
    enable_trigger("");
  }
  */
}
