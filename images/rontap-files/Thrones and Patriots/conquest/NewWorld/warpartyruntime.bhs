include "ctw_lib.bhs"

       conquest
{
if (get_ctw_campaign() == "The New World") {
  new_world_rules();
}

labels {
}

static int diff = get_difficulty();
static int unit_countdown = 25;
static int MAX_UNITS = 20;
static int MIN = 180;
static int MAX = 240;
static int orig_time = 0;
static int x = get_starting_loc_x(1);
static int y = get_starting_loc_y(1);
static int message_counter = 0;

run_once {
  if (get_ctw_campaign() == "The New World") {
    new_world_setup();
  }
  disable_all_triggers();
  disable_city_defeat(1);

  add_objective_text(parse("Destroy $d0 more enemy units.", unit_countdown), "Unit_Obj", 0);

  enable_trigger("MDK");
  enable_trigger("Unit_Spawn");
  set_timer("Spawn", rand_int(MIN, MAX));

  switch (diff) {
    case 1:
      MIN = 110;
      MAX = 120;
      MAX_UNITS = 35;
      break;
    case 2:
      MIN = 120;
      MAX = 130;
      MAX_UNITS = 30;
      break;
    case 3:
      MIN = 140;
      MAX = 150;
      MAX_UNITS = 25;
      break;
    case 4:
      MIN = 160;
      MAX = 190;
      MAX_UNITS = 20;
      break;
    case 5:
      MIN = 220;
      MAX = 250;
      MAX_UNITS = 17;
      break;
    case 6:
      MIN = 290;
      MAX = 310;
      MAX_UNITS = 14;
      break;
    default:
      MIN = 350;
      MAX = 370;
      MAX_UNITS = 10;
      break;
  }
  orig_time = type_build_time("Small City");
  gain_tech(2, "Civic");
  give_good(2, "Food", 60);
  give_good(2, "Timber", 60);
  place_city_with_cost(2);
  set_type_build_time("Small City", 1);
  enable_trigger("BuildTimeGuy");
  if (get_age() > 2) {
    disable_trigger("barbarians");
  }
  else {
    enable_trigger("barbarians");
  }
}

trigger barbarians(age(1) == get_ending_age()) {
  barbarian_upgrade();
}

trigger BuildTimeGuy(find_inactive_build(2, "Small City") < 0)
{
  set_type_build_time("Small City", orig_time);
}

trigger MDK(unit_any_killed(2))
{
  unit_countdown--;
  if (unit_countdown == 1) {
    change_objective_text("Unit_Obj", parse("Destroy $d0 more enemy unit.", unit_countdown));
  }
  else {
    change_objective_text("Unit_Obj", parse("Destroy $d0 more enemy units.", unit_countdown));
  }
  
  enable_trigger("MDK");
}

trigger Unit_Spawn(timer_expired("Spawn"))
{
  start_var = rand_int(1, 5);

  success = 0;
  do {
  switch (start_var) {
    case 1:
      x = 20;
      y = 20;
      if (!map_is_land(x, y) || !map_is_passable(x, y)) {
        success = 0;
        start_var++;
      }
      else {
        success = 1;
      }
      break;
    case 2:
      x = 20;
      y = world_y_size() - 21;
      if (!map_is_land(x, y) || !map_is_passable(x, y)) {
        success = 0;
        start_var++;
      }
      else {
        success = 1;
      }
      break;
    case 3:
      x = world_x_size() - 21;
      y = 20;
      if (!map_is_land(x, y) || !map_is_passable(x, y)) {
        success = 0;
        start_var++;
      }
      else {
        success = 1;
      }
      break;
    default:
      x = world_x_size() - 21;
      y = world_y_size() - 21;
      if (!map_is_land(x, y) || !map_is_passable(x, y)) {
        success = 0;
        start_var = 1;
      }
      else {
        success = 1;
      }
      break;
    }
  }while(success < 1);

  if (num_units(1) < MAX_UNITS) {
    if (message_counter < 1) {
      popup_dialog($S("Warriors from the local villages have joined your war party!"));
      message_counter++;
    }
    else if (message_counter < 2) {
      popup_dialog($S("News of your raid has spread! More local warriors have joined your cause."));
    }
    else {
      popup_dialog($S("Young warriors from the area have joined your war party! They hope to prove themselves in battle!"));
    }
    if (get_ctw_campaign() == "The New World") {
      if (get_age() == 3) {
        unit = create_unit(1, x, y, "Dragoon", 4);
        add_to_group(1, unit);
      }
      else {
        unit = create_unit(1, x, y, "Carabineer", 4);
        add_to_group(1, unit);
      }
    }
    else {
      create_unit_upgrade(1, x, y, "Horse Archer", 4);
    }
    create_unit_upgrade(1, x, y, "Light Horse", 4);
    ping(1, 1, x, y);
  }
  enable_trigger("Unit_Spawn");
  set_timer("Spawn", rand_int(MIN, MAX));
}

if (unit_countdown < 1) {
  victory(1);
}

if (num_units(1) < 1) {
  defeat(1);
}

if(time() >= get_time_limit()) {
  defeat(1);
}

}