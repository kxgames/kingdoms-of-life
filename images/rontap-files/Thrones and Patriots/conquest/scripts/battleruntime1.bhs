conquest
{
  labels  {
    DEFENDER,
    ATTACKER,
  }

  int how_long = 110;
  int unit_name;
  int pl_x;
  int pl_y;
  int gtr = 0;
  int n = 0;
  int icu = 0;
  static int diff = get_difficulty();
  static int id1 = 0;
  static int id2 = 0;
  static int id3 = 0;
  static int id1_health = 0;
  static int id2_health = 0;
  static int id3_health = 0;
  static int step = 1;
  static int attack_count = 1;
  static int who = 2;
  static int time = 1;
  static int x_diff = 0;
  static int y_diff = 0;
  static int unit_x = 0;
  static int unit_y = 0;
  static int x_check = 0;
  static int y_check = 0;
  static int x_distance_absl = 0;
  static int y_distance_absl = 0;
  static int x_distance = 0;
  static int y_distance = 0;
  static int building_x = 0;
  static int building_y = 0;
  static int x_check_absl = 0;
  static int y_check_absl = 0;
  static int barracks = 0;
  static int rax = 0;
  static int ray = 0;
  static int x = 0;
  static int y = 0;
  static int x2 = 0;
  static int y2 = 0;
  static int scout = 0;
  static int who_unit = 0;
  static int time_through = 0;
  static int build_units = 1;
  static int time_of_end = get_time_limit();

  run_once {  
    disable_all_triggers();
    disable_trigger("bigAttack");
    disable_city_defeat(1);
    disable_city_defeat(2);
    field_battle_enable();
    for (n = num_type(DEFENDER, "barracks"); n > 0; n--) {
      icu = find_military_build(DEFENDER);
      set_seen(ATTACKER, DEFENDER, icu);
    }
    for (n = num_type(DEFENDER, "stable"); n > 0; n--) {
      icu = find_military_build(DEFENDER);
      set_seen(ATTACKER, DEFENDER, icu);
    }
    for (n = num_type(DEFENDER, "airbase"); n > 0; n--) {
      icu = find_military_build(DEFENDER);
      set_seen(ATTACKER, DEFENDER, icu);
    }
    set_timer("more_res", how_long);
    gain_tech(1, "The Art of War");
    gain_tech(1, "Mercenaries");
    gain_tech(2, "The Art of War");
    gain_tech(2, "Mercenaries");
    gain_upgrade(2, "Light Horse");
    gain_upgrade(1, "Light Horse");

    //set-up group
    for (n = num_military_units(2); n > 0; n--) {
      unit_name = find_military(2);
      unit_clear_orders(2, unit_name);
      add_to_group(2, unit_name);
      gtr = gtr + 1;
      //print_game_msg("unit count: " + gtr);
    }
    barracks = find_build(1, "Barracks");
    rax = object_position_x(1, barracks);
    ray = object_position_y(1, barracks);
    group_attack_to_order(2, rax, ray);
    set_timer("group_reinit", 15);

    disable_trigger("attack");
    enable_trigger("first_attack");
    if (diff == 5 || diff == 3) set_timer("attack1", 14);
    else if (diff == 1) set_timer("attack1", 20);
    else set_timer("attack1", 17);
    set_timer("final_attack", 180);
  }

  if (timer_expired("group_reinit")) {
    for (n = num_military_units(2); n > 0; n--) {
      unit_name = find_military(2);
      unit_clear_orders(2, unit_name);
      add_to_group(2, unit_name);
      gtr = gtr + 1;
      //print_game_msg("unit count: " + gtr);
    }
    barracks = find_build(1, "Barracks");
    rax = object_position_x(1, barracks);
    ray = object_position_y(1, barracks);
    group_attack_to_order(2, rax, ray);
  }

  trigger first_attack(timer_expired("attack1")) {
    enable_trigger("attack");
    if (diff == 6) {
      set_timer("attack1", 10);
    }
    else if (diff == 5) {
      set_timer("attack1", 11); 
    }
    else if (diff == 4) {
      set_timer("attack1", 13);
    }
    else if (diff == 3) {
      set_timer("attack1", 15);
    }
    else if (diff == 2) {
      set_timer("attack1", 18);
    }
    else {
      set_timer("attack1", 20);
    }
    enable_trigger("first_attack");
  }

  trigger attack() {
    who = 2;
    //find human army
    for (i = 0; i < 5; i++) {
      who_unit = find_unit(1, "");
      scout = find_unit(1, "scout");
      if (who_unit == scout) who_unit = find_unit(1, "");
      unit_x = object_position_x(1, who_unit);
      unit_y = object_position_y(1, who_unit);
      if (time == 1) {
        x_check = unit_x;
        y_check = unit_y;
        time = 2;
      } 
      else {
        x_diff = unit_x - x_check;
        y_diff = unit_y - y_check;
        if (x_diff < 7) {
          x_check = (unit_x + x_check)/2;
        }
        if (y_diff < 7) {
          y_check = (unit_y + y_check)/2;
        }
      }
    }
    //find place spot for army
    building_id = find_military_build(who);
    building_x = object_position_x(who, building_id);
    building_y = object_position_y(who, building_id);
    x_distance = x_check - building_x;
    y_distance = y_check - building_y;
    x_distance_absl = absl_int(x_distance);
    y_distance_absl = absl_int(y_distance);
    if (x_check_absl > y_check_absl) {
      if ((x_check - building_x) > 0) {
        x = x_check - 25;
      }
      else x = x_check + 25;
      if ((y_check - building_y) > 0) {
        y = y_check - 18;
      }
      else y = y_check + 18;
    }
    else {
      if ((y_check - building_y) > 0) {
        y = y_check - 25;
      }
      else y = y_check + 25;
      if ((x_check - building_x) > 0) {
        x = x_check - 18;
      }
      else x = x_check + 18;
    }
    if (diff == 5) {
      switch (rand_int(1,3)) {
        case 1:
            create_unit_upgrade(who, x, y, "bowmen", 3);
            create_unit_in_group(who, x, y, "slingers", 3);
          break;
        case 2:
            create_unit_upgrade(who, x, y, "hoplites", 5);
          break;
        case 3:
            create_unit_upgrade(who, x, y, "light horse", 3);
            create_unit_in_group(who, x, y, "horse archer", 2);  
          break;
      } 
    }
    else if (diff == 6) {
      switch (rand_int(1,3)) {
        case 1:
            create_unit_upgrade(who, x, y, "bowmen", 3);
            create_unit_in_group(who, x, y, "slingers", 3);
          break;
        case 2:
            create_unit_upgrade(who, x, y, "hoplites", 5);
          break;
        case 3:
            create_unit_upgrade(who, x, y, "light horse", 3);
            create_unit_in_group(who, x, y, "horse archer", 2);      
          break;
      } 
    }      
    else if (diff == 4) {
      switch (rand_int(1,3)) {
        case 1:
            create_unit_upgrade(who, x, y, "bowmen", 2);
            create_unit_in_group(who, x, y, "slingers", 3);
          break;
        case 2:
            create_unit_upgrade(who, x, y, "hoplites", 4);
          break;
        case 3:
            create_unit_upgrade(who, x, y, "light horse", 2);
            create_unit_in_group(who, x, y, "horse archer", 2);        
          break;
      } 
    }
    else {
      switch (rand_int(1,3)) {
        case 1:
            create_unit_upgrade(who, x, y, "bowmen", 2);
            create_unit_in_group(who, x, y, "slingers", 3);
          break;
        case 2:
            create_unit_upgrade(who, x, y, "hoplites", 3);
          break;
        case 3:
            create_unit_upgrade(who, x, y, "light horse", 2);
            create_unit_in_group(who, x, y, "horse archer", 2);      
          break;
      } 
    }
    group_attack_to_order(who, x_check, y_check);
    attack_count++;
    disable_trigger("attack");
  }

  if (timer_expired("final_attack")) {
    set_timer("final_attack", 150);
    enable_trigger("bigAttack");
  }

  trigger bigAttack() {
    who = 2;
    x = get_starting_loc_x(who);
    y = get_starting_loc_y(who);
    x2 = x;
    y2 = y;

    force_transport_ability(who);
    build_units = rand_int(1,4);
    if (build_units == 1) {
    //drop in units
      create_unit_upgrade(who, x - 3, y, "hoplites", 2);
      create_unit_in_group(who, x - 5, y, "bowmen", 2);
      create_unit_in_group(who, x - 4, y, "slingers", 2);
      create_unit_in_group(who, x - 1, y, "light horse", 2);
      create_unit_in_group(who, x - 6, y, "scout", 1);
      if (age(who) > 0) {
        create_unit_in_group(who, x - 2, y, "cataphract", 1);
        create_unit_in_group(who, x - 6, y, "horse archer", 2);
      } 
      create_unit_in_group(who, x - 6, y, "general", 1);
      if (age(who) > 5) create_unit_in_group(who, x - 8, y, "helicopter", 1);
      if (age(who) > 4) create_unit_in_group(who, x - 9, y, "anti-aircraft gun", 1);
    }
    else if (build_units == 2) {
    //drop in units
      create_unit_upgrade(who, x - 3, y, "hoplites", 1);
      create_unit_in_group(who, x - 5, y, "bowmen", 3);
      create_unit_in_group(who, x - 4, y, "slingers", 2);
      create_unit_in_group(who, x - 1, y, "light horse", 2);
      create_unit_in_group(who, x - 6, y, "scout", 1);
      if (age(who) > 0) {
        create_unit_in_group(who, x - 2, y, "cataphract", 1);
        create_unit_in_group(who, x - 6, y, "horse archer", 2);
      } 
      create_unit_in_group(who, x - 6, y, "general", 1);
      if (age(who) > 5) create_unit_in_group(who, x - 8, y, "helicopter", 1);
      if (age(who) > 4) create_unit_in_group(who, x - 9, y, "anti-aircraft gun", 1);
    }
    else if (build_units == 3) {
    //drop in units
      create_unit_upgrade(who, x - 3, y, "hoplites", 2);
      create_unit_in_group(who, x - 5, y, "bowmen", 1);
      create_unit_in_group(who, x - 4, y, "slingers", 2);
      create_unit_in_group(who, x - 1, y, "light horse", 3);
      create_unit_in_group(who, x - 6, y, "scout", 1);
      if (age(who) > 0) {
        create_unit_in_group(who, x - 2, y, "cataphract", 1);
        create_unit_in_group(who, x - 6, y, "horse archer", 2);
      } 
      create_unit_in_group(who, x - 6, y, "general", 1);
      if (age(who) > 5) create_unit_in_group(who, x - 8, y, "helicopter", 1);
      if (age(who) > 4) create_unit_in_group(who, x - 9, y, "anti-aircraft gun", 1);
    }
    else {
    //drop in units
      create_unit_upgrade(who, x - 3, y, "hoplites", 3);
      create_unit_in_group(who, x - 5, y, "bowmen", 2);
      create_unit_in_group(who, x - 4, y, "slingers", 1);
      create_unit_in_group(who, x - 1, y, "light horse", 2);
      create_unit_in_group(who, x - 6, y, "scout", 1);
      if (age(who) > 0) {
        create_unit_in_group(who, x - 2, y, "cataphract", 1);
        create_unit_in_group(who, x - 6, y, "horse archer", 2);
      } 
      create_unit_in_group(who, x - 6, y, "general", 1);
      if (age(who) > 5) create_unit_in_group(who, x - 8, y, "helicopter", 1);
      if (age(who) > 4) create_unit_in_group(who, x - 9, y, "anti-aircraft gun", 1);
    }
    group_attack_to_order(2, rax, ray);
  }

  if (timer_expired("more_res")) {
    if (diff < 3) {
      give_good(DEFENDER, "food", 400);
      give_good(DEFENDER, "timber", 600);
      give_good(DEFENDER, "wealth", 200);
      give_good(DEFENDER, "metal", 200);
      give_good(DEFENDER, "oil", 200);
      if (how_long > 45) how_long = how_long - 45;
      set_timer("more_res", how_long);
    }
    else if (diff == 3 || diff == 4) {
      give_good(DEFENDER, "food", 300);
      give_good(DEFENDER, "timber", 450);
      give_good(DEFENDER, "wealth", 150);
      give_good(DEFENDER, "metal", 150);
      give_good(DEFENDER, "oil", 150);
      if (how_long > 30) how_long = how_long - 30;
      set_timer("more_res", how_long);
    }
    else if (diff > 4) {
      give_good(DEFENDER, "food", 200);
      give_good(DEFENDER, "timber", 300);
      give_good(DEFENDER, "wealth", 100);
      give_good(DEFENDER, "metal", 100);
      give_good(DEFENDER, "oil", 100);
      if (how_long > 15) how_long = how_long - 15;
      set_timer("more_res", how_long);
    }
  }

  trigger ((num_military_units(DEFENDER) == 0) || ((num_military_units(DEFENDER) == 1) && (num_type(DEFENDER, "scout") == 1)) || ((num_military_units(DEFENDER) == 2) && (num_type(DEFENDER, "scout") == 2))) {
    for (n = num_type(DEFENDER, "barracks"); n > 0; n--) {
      rax = find_build(DEFENDER, "barracks");
      damage_object(DEFENDER, rax, 75);
    }
    for (n = num_type(DEFENDER, "stable"); n > 0; n--) {
      rax = find_build(DEFENDER, "stable");
      damage_object(DEFENDER, rax, 75);
    }
    for (n = num_type(DEFENDER, "airbase"); n > 0; n--) {
      rax = find_build(DEFENDER, "airbase");
      damage_object(DEFENDER, rax, 75);
    }
  }

  trigger (num_military_buildings(DEFENDER) == 0) {
    victory(ATTACKER);
  }

  trigger (num_military_units(ATTACKER) == 0) {
    victory(DEFENDER);
  }
  
  trigger (time_later_than(time_of_end)) {
    victory(DEFENDER);
  }

}