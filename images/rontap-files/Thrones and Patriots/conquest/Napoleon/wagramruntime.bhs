include "game_structs.bhs"

int conquest tech_level(int who, String category);

conquest {


  static int french = 1;

  static int austrians = 2;
  static UnitGroup austrians_navy;
  static UnitGroup a_first_division;
  static UnitGroup a_second_division;
  static UnitGroup austrians_rebels;
  static UnitGroup napoleon_hunters;
  static UnitGroup archduke;
  static int austrians_traitors;
  static int napoleon = find_unit(french, "Napoleon");

  static String essling_name = "Essling";
  static String aspern_name = "Aspern";
  
  static int diff = get_difficulty();
  static int city_time = 7-diff;
  int building = find_city_id(aspern_name);
  
  static int ax = object_position_x(austrians, building);
  static int ay = object_position_y(austrians, building);

  int unit;
  int x;
  int y;
  String city_name;

  static int end_time = get_time_limit();
  int cur_time;

  int amount;
  int charles;
  int general_id;
  String nation_name;
  static int city_diff = 3;

  run_once {  
    if (diff > 2) {
      city_diff++;
    }
    if (diff > 3) {
      city_diff++;
    }
    if (diff > 4) {
      city_diff++;
    }
    if (diff > 5) {
      city_diff++;
    }
    //archduke charles' group
    archduke.nation = austrians;
    //archduke.add_to_group(146);
    if (nation_name != "Greeks") {
      nation_name = find_nation(austrians);
      charles = find_unit(austrians, "Archduke Charles");
      x = object_position_x(austrians, charles);
      y = object_position_y(austrians, charles);
      kill_unit_anim(austrians, charles, 1);
      if (nation_name == "British") {
        general_id = create_unit(austrians, x, y, "Wellington", 1);
      } else if (nation_name == "Turks") {
        general_id = create_unit(austrians, x, y, "Djezzar", 1);
      } else if (nation_name == "Russians") {
        general_id = create_unit(austrians, x, y, "General Kutosov", 1);
      } else if (nation_name == "Germans") {
        general_id = create_unit(austrians, x, y, "General Blucher", 1);
      } else {
        general_id = create_unit(austrians, x, y, "General", 1);
      }
      archduke.add_to_group(general_id);
    }
    archduke.add_to_group(142);
    archduke.add_to_group(143);
    archduke.add_to_group(204);
    archduke.add_to_group(207);
    archduke.add_to_group(208);
    archduke.add_to_group(210);
    archduke.add_to_group(211); 
    archduke.add_to_group(212);
    archduke.add_to_group(213);       
    archduke.add_to_group(214);
    archduke.add_to_group(215);
    archduke.add_to_group(180);
    archduke.add_to_group(183);
    archduke.add_to_group(186);
    archduke.add_to_group(192);
    archduke.add_to_group(195);
    archduke.add_to_group(198);
    for (i = 0; i < archduke.units.length; i++) {
      unit_ignore_orders(austrians, archduke.units[i]);
    }
    austrians_navy.nation = austrians;
    a_first_division.nation = austrians;
    a_second_division.nation = austrians;
    austrians_rebels.nation = french;
    napoleon_hunters.nation = austrians;
    building = find_build(french, "Anchorage");
    x = object_position_x(french, building);
    y = object_position_y(french, building);    
    for (n = num_military_units(austrians); n > 0; n--) {
      unit = find_military(austrians);
      if (unit_category(austrians, unit) == "Sail") {
        //austrians_navy.add_to_group(unit);
        unit_attack_to_order(austrians, unit, x, y);
      }
    }
    austrians_traitors = num_military_units(austrians);
    //austrians_navy.group_attack_to_order(x - 2,y - 2);

    set_timer("new_sloops", 1);
    set_timer("new_man", 61);
    set_timer("new_bomb", 121);
    set_timer("new_fire", 181);
    ctw_add_objective_text($S("Capture the Austrian (Blue) cities of Aspern and Essling."), "Aspern-Essling", "");
    ctw_add_objective_text($S("Hint: Watch out for an Austrian counter-attack on Vienna."), 5, "");
    disable_trigger("free_ae");
    if (diff > 2) set_timer("new_navy", 30);
  }
  
  if (time_later_than(city_time)) {
    city_time += 7-diff;
    if (num_cities(2) <= tech_level(2, "Civic")+1 && num_cities(2) <= city_diff) {
      building = find_build(2, "");
      place_orphan_building(2, "Small City", building);    
    }
  } 
  
  trigger (time_later_than(5)) {
    //archduke.group_clear_orders();
    city_name = find_capital(french);
    building = find_city_id(city_name);
    x = object_position_x(french,building);
    y = object_position_y(french,building);
    archduke.group_attack_to_order(x,y);
    unit_move_order(austrians, 146, x - 25, y);
    for (i = 0; i < archduke.units.length; i++) {
      unit_obey_orders(austrians, archduke.units[i]);
    }
  }
  
  cur_time = time_min();
  if (cur_time >= end_time) defeat(french);

  if (timer_expired("new_navy") && num_type(french, "Anchorage") > 0) {
    //building = find_build(austrians, "Anchorage");
    x = 310;
    y = 242;
    if (diff > 4) amount = 2;
    else amount = 1;
    create_unit_upgrade(austrians, x, y, "Sloop", amount);
    create_unit_in_group(austrians, x, y, "Man O' War", amount);
    create_unit_in_group(austrians, x, y, "Bomb Ketch", amount);
    building = find_build(french, "Anchorage");
    x = object_position_x(french, building);
    y = object_position_y(french, building);
    group_attack_to_order(austrians, x, y);
    set_timer("new_navy", 20);
  }

  //add new navy units to austrian_navy division
  /*unit = get_last_type_built(austrians, "Sloop");
  if (unit > -1) {
    austrians_navy.add_to_group(unit);
  }

  unit = get_last_type_built(austrians, "Man O' War");
  if (unit > -1) {
    austrians_navy.add_to_group(unit);
  }

  unit = get_last_type_built(austrians, "Bomb Ketch");
  if (unit > -1) {
    austrians_navy.add_to_group(unit);
  }

  unit = get_last_type_built(austrians, "Heavy Fireship");
  if (unit > -1) {
    austrians_navy.add_to_group(unit);
  }*/

  if (find_build(french, "Anchorage") > 0) {
    building = find_build(french, "Anchorage");
    x = object_position_x(french, building) - 5;
    y = object_position_y(french, building) - 3;
    for (n = num_type(austrians, "man o' war"); n > 0; n--) {
      unit = find_unit(austrians, "man o' war");
      if (is_idle(austrians, unit)) unit_attack_order(austrians, unit, french, building);
    }
    for (n = num_type(austrians, "bomb ketch"); n > 0; n--) {
      unit = find_unit(austrians, "bomb ketch");
      if (is_idle(austrians, unit)) unit_attack_order(austrians, unit, french, building);
    }   
    x = 6;
    y = 178;
    for (n = num_type(austrians, "sloop"); n > 0; n--) {
      unit = find_unit(austrians, "sloop");
      if (is_idle(austrians, unit)) unit_attack_to_order(austrians, unit, x, y);
    }
    x = 204;
    y = 115;
    for (n = num_type(austrians, "heavy fireship"); n > 0; n--) {
      unit = find_unit(austrians, "heavy fireship");
      if (is_idle(austrians, unit)) unit_attack_to_order(austrians, unit, x, y);
    }        
  } else {
    x = 190;
    y = 202;
    for (n = num_type(austrians, "man o' war"); n > 0; n--) {
      unit = find_unit(austrians, "man o' war");
      if (is_idle(austrians, unit)) unit_attack_to_order(austrians, unit, x, y);
    }
    x = 190;
    y = 262;
    for (n = num_type(austrians, "bomb ketch"); n > 0; n--) {
      unit = find_unit(austrians, "bomb ketch");
      if (is_idle(austrians, unit)) unit_attack_to_order(austrians, unit, x, y);
    }  
    x = 6;
    y = 178; 
    for (n = num_type(austrians, "sloop"); n > 0; n--) {
      unit = find_unit(austrians, "sloop");
      if (is_idle(austrians, unit)) unit_attack_to_order(austrians, unit, x, y);
    }
    x = 204;
    y = 115;
    for (n = num_type(austrians, "heavy fireship"); n > 0; n--) {
      unit = find_unit(austrians, "heavy fireship");
      if (is_idle(austrians, unit)) unit_attack_to_order(austrians, unit, x, y);
    }     
  }    

  //new austrian ships
  trigger austrian_ships(num_unit_category(austrians, "Sail") > 0) {
    if (diff > 4) amount = 60;
    else if (diff > 2) amount = 75;
    else amount = 90;
    if (timer_expired("new_sloops")) {
      train_unit(austrians, 1, "Sloop");
      set_timer("new_sloops", 2 * amount);
    }
    if (timer_expired("new_man")) {
      train_unit(austrians, 1, "Man O' War");
      set_timer("new_man", 3 * amount);
    }
    if (timer_expired("new_bomb")) {
      train_unit(austrians, 1, "Bomb Ketch");
      set_timer("new_bomb", 4 * amount);
    }
    if (timer_expired("new_fire")) {
      train_unit(austrians, 1, "Heavy Fireships");
      set_timer("new_fire", 4 * amount);
    }
    enable_trigger("austrian_ships");
  }
  
  if (diff > 2 && diff < 5 && time_earlier_than(45)) {
    set_population_cap(2,250);
  }
  else if (diff > 4) {
    if (time_earlier_than(45)) {
      set_population_cap(2, 300);
    }
    else if (time_earlier_than(75)) {
      set_population_cap(2, 250);
    }
    else {
      set_population_cap(2, 200);
    }
  }

  trigger ae_yours(city_captured(austrians, aspern_name) && city_captured(austrians, essling_name)) {
    ctw_objective_complete("Aspern-Essling");
    ctw_add_objective_text($S("Capture the enemy capital."), "generic", "");
    //enable_trigger("free_ae");
    //enable_trigger("ae_freed");
    set_timer("FAE", 60);
    enable_trigger("free_ae");
    //disable_trigger("nap_in_trouble");
  }

  //free aspern-essling
  trigger free_ae(timer_expired("FAE")) {
    city_name = find_capital(austrians);
    building = find_city_id(city_name);
    x = object_position_x(austrians, building) + 2;
    y = object_position_y(austrians, building);
    unit = create_unit(austrians, x, y, "General", 1);
    a_first_division.add_to_group(unit);
    for (n = 0; n < diff; n++) {
      unit = create_unit(austrians, x, y, "Musketeers", 1);
      a_first_division.add_to_group(unit);
    }
    for (n = 0; n < diff; n++) {
      unit = create_unit(austrians, x, y, "Fusiliers", 1);
      a_first_division.add_to_group(unit);
    }
    for (n = 0; n < diff; n++) {
      unit = create_unit(austrians, x, y, "Royal Stratiotai", 1);
      a_first_division.add_to_group(unit);
    }
    for (n = 0; n < diff; n++) {
      unit = create_unit(austrians, x, y, "Supply Wagon", 1);
      a_first_division.add_to_group(unit);
    }
    for (n = 0; n < diff; n++) {
      unit = create_unit(austrians, x, y, "Cannon", 1);
      a_first_division.add_to_group(unit);
    }
    for (n = 0; n < diff; n++) {
      unit = create_unit(austrians, x, y, "Hussar", 1);
      a_second_division.add_to_group(unit);
    }
    for (n = 0; n < diff; n++) {
      unit = create_unit(austrians, x, y, "Carabineer", 1);
      a_second_division.add_to_group(unit);
    }
    
    building = find_city_id(aspern_name);
    x = object_position_x(french, building);
    y = object_position_y(french, building);
    a_first_division.group_attack_to_order(x,y);

    building = find_city_id(essling_name);
    x = object_position_x(french, building);
    y = object_position_y(french, building);
    a_first_division.group_attack_to_order(x,y);
  }

}

int conquest tech_level(int who, String category)
{
  if (category == "Military") {
    if (!have_tech(who, "The Art of War")) {
      return 0;
    } else if (!have_tech(who, "Mercenaries")) {
      return 1;
    } else if (!have_tech(who, "Standing Army")) {
      return 2;
    } else if (!have_tech(who, "Conscription")) {
      return 3;
    } else if (!have_tech(who, "Levee en Masse")) {
      return 4;
    } else if (!have_tech(who, "Nation-in-Arms")) {
      return 5;
    } else if (!have_tech(who, "Selective Service")) {
      return 6;
    } else {
      return 7;
    }
  } else if (category == "Civic") {
    if (!have_tech(who, "City State")) {
      return 0;
    } else if (!have_tech(who, "Empire")) {
      return 1;
    } else if (!have_tech(who, "Feudalism")) {
      return 2;
    } else if (!have_tech(who, "Divine Right")) {
      return 3;
    } else if (!have_tech(who, "Constitution")) {
      return 4;
    } else if (!have_tech(who, "Great Power")) {
      return 5;
    } else if (!have_tech(who, "International Law")) {
      return 6;
    } else {
      return 7;
    }
  } else if (category == "Commerce") {
    if (!have_tech(who, "Barter")) {
      return 0;
    } else if (!have_tech(who, "Coinage")) {
      return 1;
    } else if (!have_tech(who, "Trade")) {
      return 2;
    } else if (!have_tech(who, "Mercantilism")) {
      return 3;
    } else if (!have_tech(who, "Finance")) {
      return 4;
    } else if (!have_tech(who, "Assembly Line")) {
      return 5;
    } else if (!have_tech(who, "Globalization")) {
      return 6;
    } else {
      return 7;
    }
  } else if (category == "Science") {
    if (!have_tech(who, "Written Word")) {
      return 0;
    } else if (!have_tech(who, "Mathematics")) {
      return 1;
    } else if (!have_tech(who, "Chemistry")) {
      return 2;
    } else if (!have_tech(who, "Laws of Nature")) {
      return 3;
    } else if (!have_tech(who, "Electricity")) {
      return 4;
    } else if (!have_tech(who, "Electronics")) {
      return 5;
    } else if (!have_tech(who, "Computerization")) {
      return 6;
    } else {
      return 7;
    }
  } else {
    return -1;
  }

}
