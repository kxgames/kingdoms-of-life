include "ctw_lib.bhs"

conquest {
if (get_ctw_campaign() == "Napoleon") {
  napoleon_rules();
}

  int french = 1;
  int knights = 2;
  
  int diff = get_difficulty();
  int army_x;
  int army_y;
  int unit;
  
  set_leader_difficulty(knights, diff);

  disable_city_defeat(knights);

  army_x = get_map_size();
  army_y = rand_int(get_map_size()-50,get_map_size()-1);

  //create_unit_in_group(knights, army_x + 1, army_y, "fire raft", diff);
  //create_unit_in_group(knights, army_x + 2, army_y, "trireme", diff);
  //create_unit_in_group(knights, army_x + 3, army_y, "dromon", diff);

  //rename_type("Cuirassier", $S("Knights of Malta"));

  String cap = find_capital(knights);
  int building = find_city_id(cap);
  x = object_position_x(knights, building) + 2;
  y = object_position_y(knights, building);
  String nation_name = find_nation(knights);
  if (nation_name == "Greeks") {
    create_unit(knights, x, y, "Archduke Charles", 1);
  } else if (nation_name == "British") {
    create_unit(knights, x, y, "Wellington", 1);
  } else if (nation_name == "Turks") {
    create_unit(knights, x, y, "Djezzar", 1);
  } else if (nation_name == "Russians") {
    create_unit(knights, x, y, "General Kutosov", 1);
  } else if (nation_name == "Germans") {
    create_unit(knights, x, y, "General Blucher", 1);
  } else {
    general_id = create_unit(knights, x, y, "General", 1);
  }

  int des_fort = 0;
  int tower_des = 1;
  int stable_des = 2;;
  int rax_des = 3;
  int mil_des = 4;
  int can_des = 5;
  int horse_des = 6;

  int des_array[] = [0,0,0,0,0,0];

  if (diff == 5) {
    des_array[des_fort] = 4;
    des_array[tower_des] = 3;
    des_array[stable_des] = 2;
    des_array[mil_des] = 1;
    des_array[can_des] = 3;
    des_array[horse_des] = 2;
  }
  else if (diff == 4) {
    des_array[des_fort] = 7;
    des_array[tower_des] = 4;
    des_array[stable_des] = 4;
    des_array[mil_des] = 2;
    des_array[can_des] = 6;
    des_array[horse_des] = 4;
  }
  else if (diff == 3) {
    des_array[des_fort] = 10;
    des_array[tower_des] = 6;
    des_array[stable_des] = 6;
    des_array[mil_des] = 3;
    des_array[can_des] = 10;
    des_array[horse_des] = 6;
  }
  else if (diff == 2) {
    des_array[des_fort] = 12;
    des_array[tower_des] = 9 ;
    des_array[stable_des] = 7;
    des_array[mil_des] = 4;
    des_array[can_des] = 13;
    des_array[horse_des] = 7;
  }
  else if (diff == 1) {
    des_array[des_fort] = 13;
    des_array[tower_des] = 9;
    des_array[stable_des] = 8;
    des_array[mil_des] = 4;
    des_array[can_des] = 17;
    des_array[horse_des] = 8;
  }
  
  des_array[3] = des_array[2];

  String des_names[] = ["Fort", "Tower", "Stable", "Barracks", "Siege Factory", "Cannon", "Cuirassier"];

  for (i = 0; i < des_array.length; i++) {
    if (des_names[i] == "Cannon" || des_names[i] == "Cuirassier") {
      for (a = 0; a < des_array[i]; a++) {
        unit = find_all_unit(2, des_names[i]);
        kill_unit_anim(2, unit, 1);
      }
    }
    else {
      for (a = 0; a < des_array[i]; a++) {
        building = find_build(2, des_names[i]);
        destroy_building(2, building);
      }
    }
  }

  for (i = 0; i < num_type(2, "Cannon"); i++) {
    unit = find_unit(2, "Cannon");
    unit_ignore_orders(2, unit);
  }

}