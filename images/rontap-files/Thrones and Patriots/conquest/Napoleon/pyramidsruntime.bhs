int conquest even_goods (int amount);

conquest
{

  static int mam_wood[] = [43,44,45,48,51,54,59,64,70,76,84,92,99];
  static int mam_gold[] = [29,30,31,33,36,39,44,49,55,62,66,66,66];
  static int owed_mam;
  int res_1;
  int res_2;

  static int french = 1;
  static int egyptians = 2;
  static int people = 3;
  static int alex;
  static String alex_name = "Alexandria";
  static String jaffa_name = "Jaffa";
  static String rose_name = "Rosetta";
  
  static int nap = find_all_unit(french, "Napoleon");
  
  static int diff = get_difficulty();
  
  static int stone_id = find_city_id("Rosetta");
  static int sx = object_position_x(egyptians, stone_id);
  static int sy = object_position_y(egyptians, stone_id);
  int alex_id = find_city_id(alex_name);
  static int ax = object_position_x(egyptians, alex_id);
  static int ay = object_position_y(egyptians, alex_id);

  static int registry[] = [-1,-1,-1];
  
  static rate;
  int bonus_rate;
  
  int x;
  int y;
  int unit;
  int building;
  
  static int end_time = get_time_limit();
  int cur_time;
  
  static int cities_purple = num_cities(people);

  run_once {
    set_timer("mam_create", 30);
    disable_trigger("french_assimilate");
    disable_give_attrition(people);
    if (nap < 0) nap = find_unit(french, "General");
    ctw_add_objective_text($S("Capture the enemy capital."), 20, "");
    ctw_add_objective_text($S("Hint: Try capturing the coastal city of Alexandria before going further inland."), 41, "");
    //ctw_add_objective_text($S("Hint: Unclaimed territory causes attrition."), 42, "");
    disable_trigger("give_people");
    disable_trigger("people_military");
    disable_trigger("give_resources");
    disable_trigger("take_citizen");
    disable_trigger("idle_french");
    disable_trigger("near_stone");
    disable_trigger("new_citizens");
    //disable_trigger("select_alex");
    //disable_trigger("lose_alex");
    //disable_trigger("nap_gone");    
    disable_trigger("mames");
    disable_trigger("near_alex");
  }
  
  trigger french_assimilate(timer_expired("FA")) {
    for (i = 0; i < num_cities(french); i++) {
      city_name = find_city_name(french);
      if (city_being_assimilated(french, city_name)) {
        city_assimilate(french, city_name);
      }
    }
    enable_trigger("french_assimilate");
    set_timer("FA", 1);
  }
  
  cur_time = time_min();
  
  if (cur_time >= end_time) {
    defeat(french);
  }    

  trigger new_citizens(num_type(french, "Citizen") == 0) {
    enable_trigger("new_citizens");
    building = find_city_id(alex_name);
    x = object_position_x(people, building);
    y = object_position_y(people, building);
    for (i = 0; i < 3; i++) {
      registry[i] = create_unit(french, x + 3, y, "Citizen", 1);
    }
  }
  
  if (num_cities(people) != cities_purple) {
    if (num_cities(people) > cities_purple) {
      clear_game_msg();
      cities_purple++;
    }
    else {
      cities_purple--;
    }
  }
  
  trigger (num_cities(french) > 0) {
    city_name = find_city_name(french);
    ctw_objective_complete(41);
    if (popup_choice(parse("Sire, we should give control of the city of $STRING0 to the Egyptian people. Our war is against the Mamelukes, after all, not the Egyptian people. Also, this could spur goodwill from Egyptian cities down the line.", city_name), $S("I agree"), $S("No way")) == 1) {
      building = find_build(french, "Large City");
      if (building < 0) building = find_build(french, "Small City");
      for (n = num_civilian_buildings(french); n > 0; n--) {
        unit = find_civilian_build(french);
        if (unit == building) {
          unit = find_civilian_build(french);
        }
        unit = switch_teams(egyptians, french, unit);
        switch_teams(people, egyptians, unit);
      }
      city_name = find_city_with_num(people, num_cities(people));
      building = find_city_id(city_name);
      set_object_health(people, building, 100);
      x = object_position_x(people, building);
      y = object_position_y(people, building);
      create_unit(people, x + 2, y, "citizen", 3);
      create_unit(people, x - 2, y, "citizen", 2);
      create_unit(people, x, y + 2, "citizen", 3);
      create_unit(people, x, y - 2, "citizen", 2);
      enable_trigger("give_people");  
      enable_trigger("people_military");   
      enable_trigger("give_resources"); 
      enable_trigger("take_citizen");
      enable_trigger("idle_french");
      if (city_name == rose_name) {
        enable_trigger("near_alex");
      }
      else {
        enable_trigger("near_stone");
      }
      set_timer("get_goods", 1);
      make_alliance(people, french);
      //disable_give_attrition(people);
      add_visibility(french, people);
      popup_dialog($S("You have freed the Egyptians (Purple). As part of the agreement, we will not build any new cities in Egypt. However, since they need our military support, the Egyptians can help us construct our military buildings. If you select one of their Citizens, he will switch to our team temporarily."));
      unit = popup_choice($S("Also, as thanks for freeing them, the Egyptians have agreed to pay us taxes. At what percent shall we tax the free Egyptians (Purple) commerce?"), $S("50%"), $S("33%"), $S("20%"));
      ctw_add_objective_text($S("Hint: Select an Egyptian citizen in order to construct military buildings."), 88, "");
      if (diff < 4) {
        for (i = 0; i < 3; i++) {
          registry[i] = create_unit(french, x + 3, y, "Citizen", 1);
        }
        enable_trigger("new_citizens");
      }
      if (unit == 0) {
        rate = 2;
        popup_dialog($S("The Egyptians will pay us 50% of their resource production. The current amount of taxes for each resource can be seen by looking at your resource gather rate in the upper left corner."));
      }
      else if (unit == 1) {
        rate = 4;
        popup_dialog($S("The Egyptians will pay us 33% of their resource production. The current amount of taxes for each resource can be seen by looking at your resource gather rate in the upper left corner."));
      }
      else if (unit == 2) {
        rate = 5;
        popup_dialog($S("The Egyptians will pay us 20% of their resource production. The current amount of taxes for each resource can be seen by looking at your resource gather rate in the upper left corner."));
      }
      city_assimilate(people, alex_name);
      alex = find_city_id("alexandria");
      place_building(people, "Barracks",alex_name);
      place_building(people, "Stable",alex_name);
      place_building(people, "Siege Factory",alex_name);
      //ctw_remove_objective(42);
      //ctw_add_objective_text($S("Hint: Unclaimed territory causes attrition."), 42, "");
      disable_type_by_tribe("Fishermen", "French");
      disable_type_by_tribe("Library", "French");
      disable_type_by_tribe("Temple", "French");
      disable_type_by_tribe("Market", "French");
      disable_type_by_tribe("University", "French");
      disable_type_by_tribe("Senate", "French");
      disable_type_by_tribe("Farm", "French");
      disable_type_by_tribe("Woodcutter's Camp", "French");
      disable_type_by_tribe("Mine", "French");
      disable_type_by_tribe("Smelter", "French");
      disable_type_by_tribe("Lumber Mill", "French");
      disable_type_by_tribe("Granary", "French");  
    } else {
      enable_type("Small City");
      enable_type("Militia");
      enable_type("Minutemen");
      disable_type("Partisan");
      enable_trigger("french_assimilate");
      set_capital(1, find_city_name(1));
      set_object_health(1, find_city_id(find_city_name(1)),100);
      set_timer("FA", 1);
    }
    //add_objective_text($S("Capture all Mameluke (Blue) cities"), 48, "");
  }

    for (n = num_military_buildings(egyptians); n > 0; n--) {
      building = find_military_build(egyptians);
      if (num_type_queued(egyptians, building, "") > 0) {
        unit = num_type_queued(egyptians, building, "");
        clear_build_queue(egyptians, building, 0);
        x = object_position_x(egyptians, building) + 2;
        y = object_position_y(egyptians, building);
        //create_unit(porus, x, y, "War Elephant", unit);
        if (diff < 3) {
          if (num_military_units(egyptians) < 30) {
            owed_mam += unit;
          }
        }
        else {
          owed_mam += unit;
        }
        pay_amount = num_type(egyptians, "Royal Mameluke");
        if (pay_amount >= mam_gold.length) {
          pay_amount = mam_gold.length - 1;
        }
        res_1 = num_type(egyptians, "Timber");
        if (res_1 >= mam_gold[pay_amount]) {
          take_good(egyptians, "Timber", mam_gold[pay_amount]);//13, 183
        }
        else {
          even_goods(mam_gold[pay_amount]);
        }
        res_2 = num_type(egyptians, "Wealth");
        if (res_2 >= mam_gold[pay_amount]) {          
          take_good(egyptians, "Wealth", mam_gold[pay_amount]);//8, 119
        }
        else {
          even_goods(mam_gold[pay_amount]);
        }            
      }  
    }
  
 // popup_dialog(owed_mam);
  
  if (timer_expired("mam_create")) {
    for (i = 0; i < owed_mam; i++) {
      if (!pop_cap_warning(egyptians)) {
        building = find_military_build(egyptians);
        x = object_position_x(egyptians, building) + 2;
        y = object_position_y(egyptians, building);
        create_unit(egyptians, x, y, "Royal Mameluke", 1);
        owed_mam--;
      }
    }  
    //owed_cha = 0;
    set_timer("mam_create", 25);
  }  
  
  trigger near_stone(any_object_near(french, 1, sx, sy, 7)) {
    popup_dialog($S("The people of Rosetta are handing you the city without a fight, due to your humane treatment of the Egyptians in Alexandria."));
    building = find_city_id(rose_name);
    switch_teams(people, egyptians, building);
    for (n = num_city_buildings(egyptians, rose_name, "", 1); n > 0; n--) {
      unit = find_build_at_city(egyptians, rose_name, "", 1);
      if (unit == building) unit = find_build_at_city(egyptians, rose_name, "", 1);
      switch_teams(people, egyptians, unit);
    }
    city_assimilate(people, rose_name);
    city_name = find_city_with_num(people, num_cities(people));
    building = find_city_id(city_name);
    x = object_position_x(people, building);
    y = object_position_y(people, building);
    create_unit(people, x + 2, y, "citizen", 3);
    create_unit(people, x - 2, y, "citizen", 2);
    create_unit(people, x, y + 2, "citizen", 3);
    create_unit(people, x, y - 2, "citizen", 2);
  }

  trigger near_alex(any_object_near(french, 1, ax, ay, 7)) {
    popup_dialog($S("The people of Alexandria are handing you the city without a fight, due to your humane treatment of the Egyptians in Rosetta."));
    building = find_city_id(rose_name);
    switch_teams(people, egyptians, building);
    for (n = num_city_buildings(egyptians, alex_name, "", 1); n > 0; n--) {
      unit = find_build_at_city(egyptians, alex_name, "", 1);
      if (unit == building) unit = find_build_at_city(egyptians, alex_name, "", 1);
      switch_teams(people, egyptians, unit);
    }
    city_assimilate(people, alex_name);
    city_name = find_city_with_num(people, num_cities(people));
    building = find_city_id(city_name);
    x = object_position_x(people, building);
    y = object_position_y(people, building);
    create_unit(people, x + 2, y, "citizen", 3);
    create_unit(people, x - 2, y, "citizen", 2);
    create_unit(people, x, y + 2, "citizen", 3);
    create_unit(people, x, y - 2, "citizen", 2);
  }
  
  trigger take_citizen() {
    enable_trigger("take_citizen");
    for (n = num_type(people, "citizen"); n > 0; n--) {
      unit = find_unit(people, "citizen");
      if (object_selected(people, unit)) {
        building = switch_teams(french, people, unit);
        select_object(french, french, building);
        set_timer("check_idles", 5);
      }
    }
  }
  
  trigger idle_french(timer_expired("check_idles")) {
    enable_trigger("idle_french");
    for (n = num_type(french, "citizen"); n > 0; n--) {
      unit = find_unit(french, "citizen");
      if (is_idle(french, unit) && !object_selected(french,unit)) {
        if (registry[0] != unit && registry[1] != unit && registry[2] != unit) {
          switch_teams(people, french, unit);
        }
      }
    }
    set_timer("check_idles", 5);
  }
  
  if (num_military_units(people) > 0) {
    for (n = num_military_units(people); n > 0; n--) {
      unit = find_military(people);
      switch_teams(french, people, unit);
    }
  }
  
  if (num_type(people, "Supply Wagon") > 0) {
    for (n = num_type(people, "Supply Wagon"); n > 0; n--) {
      unit = find_unit(people, "Supply Wagon");
      switch_teams(french, people, unit);
    }
  }
  
  trigger give_resources(timer_expired("get_goods")) {
    enable_trigger("give_resources");
    bonus_rate = (num_type(people, "Citizen")) + (num_cities(people) * 2);
    set_timer("get_goods", 1);
    unit = gather_rate(people, "Food");
    set_base_rate(people, "Food", -1 * unit/rate);
    set_base_rate(french, "Food", (unit/rate) + bonus_rate);
    unit = gather_rate(people, "Timber");
    set_base_rate(people, "Timber", -1 * unit/rate);
    set_base_rate(french, "Timber", (unit/rate) + bonus_rate); 
    unit = gather_rate(people, "Wealth");
    set_base_rate(people, "Wealth", -1 * unit/rate);
    set_base_rate(french, "Wealth", (unit/rate) + bonus_rate); 
    unit = gather_rate(people, "Metal");
    set_base_rate(people, "Metal", -1 * unit/rate);
    set_base_rate(french, "Metal", (unit/rate) + bonus_rate); 
  }            
  
  trigger people_military(num_military_buildings(people) > 0) {
    for (n = num_military_buildings(people); n > 0; n--) {
      unit = find_military_build(people);
      switch_teams(french, people, unit);
    }    
    enable_trigger("people_military");
  }
  
  //give the free Egyptians any cities you take
  trigger give_people(num_cities(french) > 0 || find_build(french, "Small City") == 1 || find_build(french, "Large City") == 1) {
    building = find_build(french, "Large City");
    if (building < 0) building = find_build(french, "Small City");
    city_name = find_city_name(french);
    building = find_city_id(city_name);
    x = object_position_x(people, building);
    y = object_position_y(people, building); 
    building = switch_teams(egyptians, french, building);   
    switch_teams(people, egyptians, building);  
    city_assimilate(people, city_name);
    enable_trigger("give_people");  
    create_unit(people, x + 2, y, "citizen", 3);
    create_unit(people, x - 2, y, "citizen", 2);
    create_unit(people, x, y + 2, "citizen", 3);
    create_unit(people, x, y - 2, "citizen", 2);    
  }
  
  trigger new_egypts(num_cities(egyptians) < 3 && diff > 3) {
    popup_dialog($S("Many of the Mamelukes (Blue) have taken to the hillsides. We will now have to worry about their raids. The only way to stop them is to destroy their Fortresses in their cities and to the West and South."));
    building = create_building_upgrade(egyptians, 6, 270, "Fortress");
    set_seen(french, egyptians, building);
    building = create_building_upgrade(egyptians, 6, 218, "Fortress");
    set_seen(french, egyptians, building);    
    if (diff > 4) {
      building = create_building_upgrade(egyptians, 6, 158, "Fortress");
      set_seen(french, egyptians, building);
    }
    building = create_building_upgrade(egyptians, 274, 274, "Fortress");
    set_seen(french, egyptians, building);
    ctw_remove_objective(42);
    ctw_add_objective_text($S("Destroy the Mameluke (Blue) Fortresses in their cities and to the West and the South."), 15, "");
    ctw_add_objective_text($S("Hint: Unclaimed territory causes attrition."), 42, "");
    enable_trigger("mames");
    set_timer("mamers", 1);
  }
  
  //set_timer("mamers", 1);
  
  trigger mames(timer_expired("mamers")) {
    for (n = num_type_upgrade(egyptians, "Fort"); n > 0; n--) {
      building = find_build(egyptians, "Fort");
      x = object_position_x(egyptians, building);
      y = object_position_y(egyptians, building);
      create_unit_upgrade(egyptians, x, y + 2, "Royal Mameluke", 1);
      building = find_unit(french, "");
      x = object_position_x(french, building);
      y = object_position_y(french, building);
      if (x == 0 && y == 0) {
        x = get_map_size()/3;
        y = x;
      }
      group_attack_to_order(egyptians, x, y);
    }
    set_timer("mamers", 150/diff);
    enable_trigger("mames");
  }      

  trigger (num_cities(egyptians) == 0) {
    ctw_objective_complete(20);
    ctw_objective_complete(48);
  }
  
  trigger (find_capital(egyptians) == "" && num_type(egyptians, "Fortress") == 0) {
    ctw_objective_complete(15);
    victory(french);
  }

  trigger (find_capital(egyptians) == "" && diff < 4) {
    victory(french);
  }

  

}

int conquest even_goods (int amount)
{

  int food = num_type(2, "Food");
  int wood = num_type(2, "Timber");
  int metal = num_type(2, "Metal");
  int wealth = num_type(2, "Wealth");
  
  if (food >= amount) {
    take_good(2, "Food", amount);
    return 1;
  }
  else {
    amount += -food;
    take_good(2, "Food", amount);
  }
  if (wood >= amount) {
    take_good(2, "Timber", amount);
    return 1;
  }
  else {
    amount += -wood;
    take_good(2, "Timber", amount);
  } 
  if (wealth >= amount) {
    take_good(2, "Wealth", amount);
    return 1;
  }
  else {
    amount += -wealth;
    take_good(2, "Wealth", amount);
  } 
  if (metal >= amount) {
    take_good(2, "Metal", amount);
    return 1;
  }
  else {
    amount += -metal;
    take_good(2, "Metal", amount);
  } 
     
  return 0;

}