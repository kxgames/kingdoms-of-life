scenario
{

labels {
HUMAN = 1,
PRUSSIA = 2
}

string newunit_str;
int newunit_int;
int x_int;
int y_int;
int i;
int unit_int;
int random_int;
int idle;
static int toggle_int = 3;
static int diff_int = get_difficulty();
static int jena_int = find_city_id("jena");
static int diffmod_int;
static int jenahealth_int = object_health(PRUSSIA, jena_int);
static int disable1_int = 0;
static int disable2_int = 0;
static int disable3_int = 0;
static int disable4_int = 0;
static int redo_int = 1;
int nation;
String nation_name;
int x;
int y;
int unit;
String city_name;
static int diff = get_difficulty();

run_once {
  if (get_ctw_campaign() == "Napoleon") {
    for (nation = 2; nation < 9; nation++) {
      nation_name = find_nation(nation);
      if (nation_name == "Turks") {
        if (num_cities(nation) == 0) {
          unit = find_unit(nation, "");
          x = object_position_x(nation, unit);
          y = object_position_y(nation, unit);
        }
        else {
          city_name = find_capital(nation);
          building = find_city_id(city_name);
          x = object_position_x(nation, building) + 2;
          y = object_position_y(nation, building);
        }
        create_unit(nation, x, y, "Djezzar", 1);
        create_unit_upgrade(nation, x + 1, y, "Musketeers", 2);
        if (diff > 1) {
          create_unit_upgrade(nation, x + 1, y, "Musketters", 2);
          create_unit_upgrade(nation, x, y + 1, "Hussar", 1);
          create_unit_upgrade(nation, x, y + 1, "Supply Wagon", 1);
        }
        if (diff > 2) {
          create_unit_upgrade(nation, x, y + 2, "Musketeers", 2);
          create_unit_upgrade(nation, x + 2, y, "Horse Archer", 1);
          create_unit_upgrade(nation, x + 2, y, "Hussar", 1);
        }
        if (diff > 4) {
          create_unit_upgrade(nation, x, y + 2, "Fusiliers", 1);
        }
      } // if (nation_name == "Turks"
      else if (nation_name == "British") {
        if (num_cities(nation) == 0) {
          unit = find_unit(nation, "");
          x = object_position_x(nation, unit);
          y = object_position_y(nation, unit);
        } else {
          city_name = find_capital(nation);
          building = find_city_id(city_name);
          x = object_position_x(nation, building) + 2;
          y = object_position_y(nation, building);
        }
        create_unit(nation, x, y, "Wellington", 1);
      } // else if (nation_name == "British"
      else if (nation_name == "Greeks") {
        if (num_cities(nation) == 0) {
          unit = find_unit(nation, "");
          x = object_position_x(nation, unit);
          y = object_position_y(nation, unit);
        } else {
          city_name = find_capital(nation);
          building = find_city_id(city_name);
          x = object_position_x(nation, building) + 2;
          y = object_position_y(nation, building);
        }
        create_unit(nation, x, y, "Archduke Charles", 1);
      } // else if (nation_name == "Greeks"
      else if (nation_name == "Germans") {
        if (num_cities(nation) == 0) {
          unit = find_unit(nation, "");
          x = object_position_x(nation, unit);
          y = object_position_y(nation, unit);
        } else {
          city_name = find_capital(nation);
          building = find_city_id(city_name);
          x = object_position_x(nation, building) + 2;
          y = object_position_y(nation, building);
        }
        create_unit(nation, x, y, "General Blucher", 1);
      } // else if (nation_name == "Germans"
      else if (nation_name == "Russians") {
        if (num_cities(nation) == 0) {
          unit = find_unit(nation, "");
          x = object_position_x(nation, unit);
          y = object_position_y(nation, unit);
        } else {
          city_name = find_capital(nation);
          building = find_city_id(city_name);
          x = object_position_x(nation, building) + 2;
          y = object_position_y(nation, building);
        }
        create_unit(nation, x, y, "General Kutosov", 1);
      } // else if (nation_name == "Russians"
    } // for (nation = 2; nation < 9; nation++
  } // if (get_ctw_campaign() == "Napoleon"

  //set_nation_name(PRUSSIA, $S("Prussians"));
  if (diff_int > 4)
    diffmod_int = 2;
  else if (diff_int > 2)
    diffmod_int = 1;
  else diffmod_int = 0;
  set_time_limit(15 - diff_int);
  set_defeat_message($S("Enemy reinforcements have arrived!  We must retreat!"));
  disable_city_defeat(HUMAN);
  disable_tech(PRUSSIA, "allegiance");
  disable_type("general");
  disable_type("spy");
  disable_type("citizen");
  disable_trigger ("town_trg");
  disable_trigger ("finalspawn_trg");
  unit_costs_disable();
  gain_tech(HUMAN, "Fortification");
  gain_tech(HUMAN, "Bombardment");
  gain_tech(HUMAN, "Operations");
  gain_tech(HUMAN, "Tactics");
  gain_tech(HUMAN, "Artificial Intelligence");
  ctw_add_objective_text($S("Units can be created instantly to reinforce fallen allies."), "reinforce1_obj", "");
  ctw_add_objective_text($S("HINT: Use the infinite queue feature to keep your ranks up."), "reinforce2_obj", "");
  ctw_add_objective($S("Capture the fringe cities to force the battle onto open field."), "fringe_obj", "");
  
  create_unit_upgrade(PRUSSIA, 48, 91, "musketeers", 4 + diffmod_int + diff_int);
  group_attack_to_order(PRUSSIA, 5, 99);
  clear_group(PRUSSIA);
  create_unit_upgrade(PRUSSIA, 48, 91, "cuirassier", 4 + diffmod_int + diff_int);
  group_attack_to_order(PRUSSIA, 5, 99);
  clear_group(PRUSSIA);
  create_unit_upgrade(PRUSSIA, 72, 177, "musketeers", 1 + 2*diffmod_int);
  group_attack_to_order(PRUSSIA, 75, 235);
  clear_group(PRUSSIA);
  create_unit_upgrade(PRUSSIA, 72, 177, "fusiliers", 7 + 2*diffmod_int + diff_int);
  group_attack_to_order(PRUSSIA, 75, 235);
  clear_group(PRUSSIA);
  create_unit_upgrade(PRUSSIA, 183, 138, "musketeers", 4 + diffmod_int + diff_int);
  group_attack_to_order(PRUSSIA, 235, 157);
  clear_group(PRUSSIA);
  create_unit_upgrade(PRUSSIA, 183, 138, "fusiliers", 4 + diffmod_int + diff_int);
  group_attack_to_order(PRUSSIA, 235, 157);
  clear_group(PRUSSIA);
  create_unit_upgrade(PRUSSIA, 189, 57, "musketeers", 10 + 2*diffmod_int + diff_int);
  group_attack_to_order(PRUSSIA, 234, 54);
  clear_group(PRUSSIA);
} // run_once

// ****************************************************************************************************
// When a Prussian unit is killed, create a unit at the town and send it to defend a random fringe city
trigger spawnenemy_trg(unit_any_killed(PRUSSIA)) {
  random_int = rand_int (1, 4);
  switch (random_int) {
    case 1:
      newunit_str = "musketeers";
      break;
    case 2:
      newunit_str = "fusiliers";
      break;
    case 3:
      newunit_str = "cuirassier";
      break;
    case 4:
      newunit_str = "carabineer";
      break;
  }
  newunit_int = create_unit_upgrade(PRUSSIA, 123, 22, newunit_str, 1);
  while (redo_int == 1) {
    redo_int = 0;
    random_int = rand_int(1,4);
    switch (random_int) {
      case 1:
        x_int = 5;
        y_int = 99;
        if (disable1_int == 1) redo_int = 1;
        break;
      case 2:
        x_int = 75;
        y_int = 235;
        if (disable2_int == 1) redo_int = 1;
        break;
      case 3:
        x_int = 235;
        y_int = 157;
        if (disable3_int == 1) redo_int = 1;
        break;
      case 4:
        x_int = 235;
        y_int = 54;
        if (disable4_int == 1) redo_int = 1;
        break;
    }
  } // while (redo_int
  redo_int = 1;
  unit_attack_to_order(PRUSSIA, newunit_int, x_int, y_int);
  enable_trigger ("spawnenemy_trg");
} // trigger spawnenemy_trg

// Disable fringe cities for enemy troop movements
trigger disable1_trg(city_captured(PRUSSIA, "Naumburg")) {
  destroy_building(HUMAN, find_city_id("Naumburg"));
  disable1_int = 1;
} // trigger disable1_trg

trigger disable2_trg(city_captured(PRUSSIA, "Erfurt")) {
  destroy_building(HUMAN, find_city_id("Erfurt"));
  disable2_int = 1;
} // trigger disable2_trg

trigger disable3_trg(city_captured(PRUSSIA, "Soolfeld")) {
  destroy_building(HUMAN, find_city_id("Soolfeld"));
  disable3_int = 1;
} // trigger disable3_trg

trigger disable4_trg(city_captured(PRUSSIA, "Gera")) {
  destroy_building(HUMAN, find_city_id("Gera"));
  disable4_int = 1;
} // trigger disable4_trg

// Enable a slower spawn rate once the fringe cities are captured
trigger nofringe_trg(num_cities(PRUSSIA) == 1 && find_city_owner("Jena") == PRUSSIA) {
  ctw_objective_complete("fringe_obj");
  popup_dialog($S("The enemy is retreating to rally around Jena.  Now is our moment!"));
  ctw_add_objective($S("Use your superior numbers to take Jena."), "town_obj", "");
  disable_trigger ("spawnenemy_trg");
  enable_trigger ("finalspawn_trg");
  enable_trigger ("town_trg");
  enable_production_ai(PRUSSIA);
  enable_all_unit_ai(PRUSSIA);
  for (i = num_units(PRUSSIA); i > 0; i--) {
    unit_int = find_all_military(PRUSSIA);
    unit_attack_to_order(PRUSSIA, unit_int, 125, 45);
  }
} // trigger nobarracks_trg

// After the fringe cities are gone, Prussian units will spawn less frequently and stay near the city.
trigger finalspawn_trg(unit_any_killed(PRUSSIA)) {
  if (toggle_int > 2) {
    random_int = rand_int (1,4);
    switch (random_int) {
      case 1:
        newunit_str = "musketeers";
        break;
      case 2:
        newunit_str = "fusiliers";
        break;
      case 3:
        newunit_str = "cuirassier";
        break;
      case 4:
        newunit_str = "carabineer";
        break;
    }
    newunit_int = create_unit_upgrade(PRUSSIA, 123, 22, newunit_str, 1);
    unit_patrol_order(PRUSSIA, newunit_int, 123, 60);
  } // if (toggle_int
  toggle_int++;
  if (toggle_int == 6) toggle_int = 1;
  enable_trigger ("finalspawn_trg");
} // trigger finalspawn_trg

// Victory
trigger town_trg(num_cities(PRUSSIA) == 0) {
  victory(HUMAN);
}

trigger defeat_trg(time_later_than(15 - diff_int)) {
  defeat(HUMAN);
}

idle = find_idle_military(PRUSSIA);
if (idle > -1) unit_attack_to_order(PRUSSIA, idle, 123, 60);
}