//offensive conquest scenario setup

include "ctw_lib.bhs"

conquest
{

  alexander_setup();

  labels {
    ATTACKER,
    DEFENDER,
  }

  String nation_name = find_nation(2);

  if (get_territory_owner(get_attack_to()) == "") {
    set_leader_name(2, $S("Barbarian Leader"));
  }
  else {
    if (nation_name == "Egyptians") {
      set_leader_name(2, $S("Pharaoh Nectanebo II"));
    }
    else if (nation_name == "Indians") {
      if (get_turn() >= 11) {
        set_leader_name(2, $S("Chandragupta Maurya"));
      }
      else {
        set_leader_name(2, $S("Dhana Nanda"));
      }
    }
    else if (nation_name == "Romans") {
      set_leader_name(2, $S("Dictator L. Papirius Cursor"));
    }
    else if (nation_name == "Persian") {
      if (get_ctw_int("artaxerxes") == 1) {
        set_leader_name(2, $S("Artaxerxes"));
      }
      else if (get_ctw_int("spitamenes") == 1) {
        set_leader_name(2, $S("Spitamenes I"));
      }
      else {
        set_leader_name(2, $S("Darius III"));
      }
    }
  }


  force_transport_ability(1);

  int nation;
  int unit;
  int building;
  int x;
  int y;
  String city_name;
  String campaign = get_ctw_campaign();
  int diff = get_difficulty();

  if (campaign == "Alexander the Great") {
    for (nation = 2; nation < 9; nation++) {
      nation_name = find_nation(nation);
      if (nation_name == "Persian") {
        if (num_type(nation, "Darius") == 0) {
          city_name = find_capital(nation);
          building = find_city_id(city_name);
          x = object_position_x(nation, building) + 2;
          y = object_position_y(nation, building);
          create_unit(nation, x, y, "Darius", 1);  
        }        
      } else if (nation_name == "Indian") {
        city_name = find_capital(nation);
        building = find_city_id(city_name);
        x = object_position_x(nation, building) + 2;
        y = object_position_y(nation, building);
        create_unit(nation, x, y, "Chandragupta Maurya", 1);  
      }
    }
  }

  String unit_array[];
  String build_array[];
  
  unit_array = tactics_deletion_list("Unit");
  build_array = tactics_deletion_list("Building");

  for (u = 0; u < unit_array.length; u++) {
    unit = find_unit(2, unit_array[u]);
    kill_unit_anim(2, unit, 1);
  }

  for (b = 0; b < build_array.length; b++) {
    building = find_build(2, build_array[b]);
    destroy_building(2, building);
  }

  int px;
  int py;
  int tx;
  int ty;

  int step = 1;

  String attack_to = get_attack_to();
  String attack_from = get_attack_from();

  int player_age = age(1); 

  //make it so the attacker can't lose if he takes then loses a city
  disable_city_defeat(ATTACKER);

  String def_capital = find_capital(DEFENDER);
  int id = find_city_id(def_capital);
  int city_x = object_position_x(DEFENDER, id);
  int city_y = object_position_y(DEFENDER, id);
  x = city_x + 1;
  y = city_y + 1;

  //give player technologies
  if (age(ATTACKER) > 3) gain_tech(ATTACKER, "Tactics");
  if (age(ATTACKER) > 4) gain_tech(ATTACKER, "Operations");
  if (age(ATTACKER) > 6) gain_tech(ATTACKER, "Strategy");

  int alex_id = find_all_unit(ATTACKER, "Alexander");
  px = object_position_x(ATTACKER, alex_id);
  py = object_position_y(ATTACKER, alex_id);

  int value;

  if (diff > 4) {
    value = 4;
  }
  else {
    value = 3;
  }

  if (diff > 2) {
    for (n = 0; n < value; n++) {
      if (attack_to == "Libya") {
        switch(step) {
          case 1: 
            x = 58;
            y = 51;
            step++;
            break;
          case 2:
            x = 163;
            y = 63;
            step++;
            break;
          case 3:
            x = 34;
            y = 68;
            break;
          case 4:
            x = 138;
            y = 134;
            break;
        }   
      } else if (attack_to == "Sindhu") {
        switch(step) {
          case 1: 
            x = 8;
            y = 141;
            step++;
            break;
          case 2:
            x = 127;
            y = 221;
            step++;
            break;
          case 3:
            x = 76;
            y = 110;
            break;
          case 4:
            x = 162;
            y = 148;
            break;
        }
      } else if (attack_to == "Sicily") {
        switch(step) {
          case 1: 
            x = 11;
            y = 139;
            step++;
            break;
          case 2:
            x = 108;
            y = 211;
            step++;
            break;
          case 3:
            x = 219;
            y = 225;
            break;
          case 4:
            x = 121;
            y = 73;
            break;
        }          
      }     
      if (diff > 4) {
        create_unit_upgrade(DEFENDER, x, y, "bark", 2);
        create_unit_in_group(DEFENDER, x, y, "trireme", 2);
        create_unit_in_group(DEFENDER, x, y, "fire raft", 2);
        group_patrol_order(DEFENDER, px, py);
      }
      else {
        create_unit_upgrade(DEFENDER, x, y, "bark", 1);
        create_unit_in_group(DEFENDER, x, y, "trireme", 1);
        create_unit_in_group(DEFENDER, x, y, "fire raft", 1);
        group_patrol_order(DEFENDER, px, py);
      }
    }
  }

}