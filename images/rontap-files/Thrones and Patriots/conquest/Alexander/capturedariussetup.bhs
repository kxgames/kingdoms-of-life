include "ctw_lib.bhs"

conquest
{

  alexander_setup();

  labels {
    ALEXANDER,
    BESSUS,
    SPITAMENES,
    SATRAP,
    DARIUS,
  }

  set_object_type_max_health("Darius", 2000);
  set_unit_type_speed("Darius", 6);

  int diff = get_difficulty();
  disable_type_by_tribe("Small City", "Persian");

  int nation;
  int amount = diff * 4;
  int building;

  for (i = 1; i < 9; i++) {
    gain_tech(i, "Commerce");
    if (i > 1) {
      disable_tech(i, "Feudalism");
    }
  }
  
  disable_city_defeat(BESSUS);
  disable_city_defeat(SPITAMENES);
  disable_city_defeat(DARIUS);

  set_leader_name(2, $S("Bessus"));

  for (nation = 2; nation < 9; nation++) {
    set_leader_difficulty(nation, diff);
    if (nation == DARIUS) amount = amount * 2;
    else amount = amount;
    set_base_rate(nation, "Food", diff * amount);
    set_bonus_cap(nation, "Food", diff * amount);
    set_base_rate(nation, "Timber", diff * amount);
    set_bonus_cap(nation, "Timber", diff * amount);
    set_base_rate(nation, "Metal", diff * amount);
    set_bonus_cap(nation, "Metal", diff * amount);
    set_base_rate(nation, "Wealth", diff * amount);
    set_bonus_cap(nation, "Wealth", diff * amount);
    set_base_rate(nation, "Knowledge", diff * amount);
    set_bonus_cap(nation, "Knowledge", diff * amount);
    if (diff < 4) {
      for (i = 0; i < num_type(nation, "Fort"); i++) {
        building = find_build(nation, "Fort");
        destroy_building(nation, building);
      }
    }
  }

  amount = 1000 - diff * 100;

  give_good(ALEXANDER, "Food", amount);
  give_good(ALEXANDER, "Timber", amount);
  give_good(ALEXANDER, "Metal", amount);
  give_good(ALEXANDER, "Wealth", amount);

  amount = 200 + diff * 50;

  for (nation = 2; nation < 5; nation++) {
    give_good(nation, "Food", amount);
    give_good(nation, "Timber", amount);
    give_good(nation, "Metal", amount);
    give_good(nation, "Wealth", amount);
  }

  //disable_city_defeat(DARIUS);
  //unit_ai_disable(DARIUS);

  int des;
  int darius_id = find_unit(DARIUS, "Darius");
  
  if (diff < 3) {
    for (n = 2; n < 6; n++) {
      des = (int)(num_military_units(n)/2);
      for (i = 0; i < des; i++) { 
        unit = find_military(n);
        if (n == DARIUS && unit == darius_id) {
          unit = find_military(n);
        }
        kill_unit_anim(n, unit, 1);
     }
   }
 }

}
