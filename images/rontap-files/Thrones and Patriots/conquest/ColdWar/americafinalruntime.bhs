                                       int conquest raze_city(String city_name);
                                       include "ctw_lib.bhs"

       conquest
{

static int diff = get_difficulty();
///cosmodrome
static int c1_silo = 0;
static int c2_silo = 0;
static int c3_silo = 0;
static int c4_silo = 0;
int new_nuke_total;

///military complex
static int m1_barracks = 0;
static int m2_barracks = 0;
static int m3_redoubt = 0;
static int m4_auto = 0;
static int m5_auto = 0;
static int m6_siege = 0;
static int m7_air = 0;
static int m8_air = 0;

///oil field
static int o1_well = 2025;
static int o2_well = 2028;
static int o3_refinery = 2029;
static int o4_refinery = 2031;

static int rescue_complete = 0;

static UnitGroup first_division;
static UnitGroup second_division;

run_once {
  ctw_add_objective($S("Destroy the Oil Wells and Refineries located in the west."), "Oil_id", 0);
  ctw_add_objective($S("Destroy the Missile Silos at the Baykonur Cosmodrome."), "Cosmo_id", 0);
  ctw_add_objective($S("Destroy the Military Base that is located in the northeast."), "Military_id", 0);
  ctw_add_objective($S("Rescue the Scientists being held in the Military Base by garrisoning them in your Fort."), "Rescue_id", 0);
  set_timer("STRIKE", 5);
  set_timer("SCHOLAR", 30);
  set_timer("UNITS", 600);

  ///////cosmodrome
  c1_silo = create_building_upgrade(2, 18, 17, "Missile Silo");
  c2_silo = create_building_upgrade(2, 19, 27, "Missile Silo");
  c3_silo = create_building_upgrade(2, 26, 25, "Missile Silo");
  c4_silo = create_building_upgrade(2, 27, 14, "Missile Silo");

  /*set_type_build_time("Nuclear Missile", 1); //2250000 = 30 minutes
  give_good(2, "Knowledge", 8000);
  give_good(2, "Oil", 8000);
  train_unit_at(2, 1, "Nuclear Missile", c1_silo);
  train_unit_at(2, 1, "Nuclear Missile", c2_silo);
  train_unit_at(2, 1, "Nuclear Missile", c3_silo);
  train_unit_at(2, 1, "Nuclear Missile", c4_silo);*/

  /////military complex
  m1_barracks = create_building_upgrade(2, 163, 26, "Barracks");
  m2_barracks = create_building_upgrade(2, 163, 32, "Barracks");
  m3_redoubt = create_building_upgrade(2, 163, 38, "Redoubt");
  add_reveal_point(1, 163, 38, 10);
  m4_auto = create_building_upgrade(2, 169, 38, "Auto Plant");
  m5_auto = create_building_upgrade(2, 169, 32, "Auto Plant");
  m6_siege = create_building_upgrade(2, 175, 38, "Siege Factory");
  m7_air = create_building_upgrade(2, 169, 19, "Airbase");
  m8_air = create_building_upgrade(2, 176, 26, "Airbase");
  create_building_upgrade(2, 171, 42, "Radar Air Defense");
  create_building_upgrade(2, 175, 42, "Radar Air Defense");

  create_building_upgrade(2, 177, 96, "Radar Air Defense");
  create_building_upgrade(2, 160, 86, "Radar Air Defense");

  unit_id = create_unit_in_group(2, 158, 38, "Scholar", 1);
  unit_garrison_order(2, unit_id, m3_redoubt);
  unit_id = create_unit_in_group(2, 158, 38, "Scholar", 1);
  unit_garrison_order(2, unit_id, m3_redoubt);
  unit_id = create_unit_in_group(2, 158, 38, "Scholar", 1);
  unit_garrison_order(2, unit_id, m3_redoubt);
  unit_id = create_unit_in_group(2, 158, 38, "Scholar", 1);
  unit_garrison_order(2, unit_id, m3_redoubt);
  unit_id = create_unit_in_group(2, 158, 38, "Scholar", 1);
  unit_garrison_order(2, unit_id, m3_redoubt);

  /////oil field
  create_building_upgrade(2, 54, 119, "Radar Air Defense");
  create_building_upgrade(2, 64, 132, "Radar Air Defense");
  create_building_upgrade(2, 46, 142, "Radar Air Defense");

  set_base_rate(1, "Metal", 60);
  set_base_rate(1, "Oil", 60);
  set_base_rate(1, "Wealth", 80);

  clear_group(2);
  x = 126;
  y = 142;
  create_unit_in_group(2, x, y, "Infantry", diff-2);
  group_patrol_order(2, 102, 170);

  clear_group(2);
  x = 148;
  y = 99;
  create_unit_in_group(2, x, y, "Infantry", diff-2);
  group_patrol_order(2, 168, 75);

  clear_group(2);
  x = 51;
  y = 163;
  create_unit_in_group(2, x, y, "Infantry", diff-2);
  group_patrol_order(2, 52, 113);

  clear_group(2);
  x = 20;
  y = 58;
  create_unit_in_group(2, x, y, "Infantry", diff-2);
  group_patrol_order(2, 46, 31);

  clear_group(2);

  first_division.nation = 2;
  second_division.nation = 2;

  if (diff > 2) {
    unit_id = -1;
    x = 146;
    y = 34;
    for (i = 0; i < diff; i++) {
      unit_id = create_unit_upgrade(2, x, y, "Infantry", 1);
      first_division.add_to_group(unit_id);
    }
    first_division.group_patrol_order(162, 54);

    unit_id = -1;
    x = 162;
    y = 58;
    for (i = 0; i < diff; i++) {
      unit_id = create_unit_upgrade(2, x, y, "Infantry", 1);
      second_division.add_to_group(unit_id);
    }
    second_division.group_patrol_order(182, 54);
  }
  else {
    disable_trigger("first_patrol");
    disable_trigger("second_patrol");
  }

  rename_type("Informer", $S("Missile Strike"));
  disable_trigger("NoMoreScholars");
  disable_trigger("RescueTrig");
}

if (timer_expired("SCHOLAR") != 0) {
  unit_id = find_unit(2, "Scholar");
  switch_teams(1, 2, unit_id);
}

if (num_type_upgrade(1, "Scholar") > 0) {
  enable_trigger("NoMoreScholars");
  enable_trigger("RescueTrig");
}

trigger NoMoreScholars(num_type_upgrade(1, "Scholar") < 1) {
  defeat(1);
}

trigger RescueTrig(find_unit(1, "Scholar") < 0 && find_inside_unit(1, "Scholar") > -1) {
  ctw_objective_complete("Rescue_id");
  rescue_complete = 1;
}

if (timer_expired("STRIKE") != 0) {
  for (i = 0; i < num_buildings(2); i++) {
    build_id = find_build(2, "");
    if (is_infiltrated(2, build_id)) {
      x = 199;
      y = 199;
      create_missile_and_target_build(1, x, y, "Cruise Missile", 2, build_id);
      remove_infiltrated(2, build_id);
      show_notice($S("Cruise Missile launched!"), "launch_notice", 1);
    }
  }
  set_timer("STRIKE", 5);
}

trigger (building_destroyed(2, c1_silo) && building_destroyed(2, c2_silo) && building_destroyed(2, c3_silo) && building_destroyed(2, c4_silo)) {
  ctw_objective_complete("Cosmo_id");
  first_division.group_attack_to_order(22, 30);
}

trigger (building_destroyed(2, m1_barracks) && building_destroyed(2, m2_barracks) && building_destroyed(2, m3_redoubt) && building_destroyed(2, m4_auto) && building_destroyed(2, m5_auto) && building_destroyed(2, m6_siege) && building_destroyed(2, m7_air) && building_destroyed(2, m8_air)) {
  ctw_objective_complete("Military_id");
}

trigger (building_destroyed(2, o1_well) && building_destroyed(2, o2_well) && building_destroyed(2, o3_refinery) && building_destroyed(2, o4_refinery)) {
  ctw_objective_complete("Oil_id");
  second_division.group_attack_to_order(46, 114);
}

trigger first_patrol(object_near(2, first_division.units[0], 22, 30, 5)) {
  first_division.group_patrol_order(22, 6);
}

trigger second_patrol(object_near(2, second_division.units[0], 46, 114, 5)) {
  second_division.group_patrol_order(46, 150);
}

if (num_cities(1) > 0) {
  city_name = find_city_name(1);
  building = find_city_id(city_name);
  x = object_position_x(1, building);
  y = object_position_y(1, building);
  for (i = 0; i < num_type(2, "Citizen"); i++) {
    unit = find_unit(2, "Citizen");
    citizen_to_militia(2, unit);
    if (object_near(2, unit, x, y, 35)) {
      switch_teams(1, 2, unit);
    }
  }
  raze_city(city_name);
  popup_dialog(parse("You have razed the city of $STRING0. The local Citizens have defected and joined your force.", city_name));
}

if (timer_expired("UNITS") != 0 && num_units(2) < 125) {
  for (i = 0; i < num_type_upgrade(2, "Barracks"); i++) {
    build_id = find_build(2, "Barracks");
    give_good(2, "Food", 200);
    give_good(2, "Timber", 200);
    train_unit_at(2, 1, "Infantry", build_id);
  }
  for (i = 0; i < num_type_upgrade(2, "Auto Plant"); i++) {
    give_good(2, "Metal", 200);
    give_good(2, "Oil", 200);
    build_id = find_build(2, "Auto Plant");
    train_unit_at(2, 1, "Tank", build_id);
  }
  for (i = 0; i < num_type_upgrade(2, "Siege Factory"); i++) {
    give_good(2, "Food", 200);
    give_good(2, "Wealth", 200);
    build_id = find_build(2, "Siege Factory");
    train_unit_at(2, 1, "Anti-Aircraft Battery", build_id);
  }
  for (i = 0; i < num_type_upgrade(2, "Airbase"); i++) {
    give_good(2, "Wealth", 200);
    give_good(2, "Oil", 200);
    build_id = find_build(2, "Airbase");
    train_unit_at(2, 1, "Jet Fighter", build_id);
  }
  set_timer("UNITS", 60);
}

if (time() >= get_time_limit()) {
  defeat(1);
}

if (rescue_complete == 1) {
  ctw_remove_objective("Cosmo_id"); 
  ctw_remove_objective("Military_id"); 
  ctw_remove_objective("Oil_id"); 

  new_nuke_total = get_total_nukes("Russians")/2;
  nukes_destroyed = 0;
  if (get_total_nukes("Russians") > 0) {
    while (get_total_nukes("Russians") > new_nuke_total) {
      if (get_num_nukes("Mongolia") > 0) {
        ctw_remove_nuke("Mongolia");
        nukes_destroyed++;
      }
      else if (get_num_nukes("Eastern Siberia") > 0) {
        ctw_remove_nuke("Eastern Siberia");
        nukes_destroyed++;
      }
      else if (get_num_nukes("Kazakhstan") > 0) {
        ctw_remove_nuke("Kazakhstan");
        nukes_destroyed++;
      }
      else if (get_num_nukes("Western Siberia") > 0) {
        ctw_remove_nuke("Western Siberia");
        nukes_destroyed++;
      }
      else if (get_num_nukes("Karelia") > 0) {
        ctw_remove_nuke("Karelia");
        nukes_destroyed++;
      }
      else if (get_num_nukes("Ukraine") > 0) {
        ctw_remove_nuke("Ukraine");
        nukes_destroyed++;
      }
      else if (get_num_nukes("Russia") > 0) {
        ctw_remove_nuke("Russia");
        nukes_destroyed++;
      }   
      else {
        new_nuke_total = 100;
      }
    }
    if (get_total_nukes("Russians") == new_nuke_total) {
      if (nukes_destroyed == 1) {
        popup_dialog(parse("As a result of our successful mission, we have gained a Cultural Dominance Bonus Card, a Trade Embargo Bonus Card, and $d0 Soviet Nuclear Missile has been destroyed!", nukes_destroyed));
      }
      else {
        popup_dialog(parse("As a result of our successful mission, we have gained a Cultural Dominance Bonus Card, a Trade Embargo Bonus Card, and $d0 Soviet Nuclear Missiles have been destroyed!", nukes_destroyed));
      }
    }
    else {
      if (nukes_destroyed > 0) {
        if (nukes_destroyed == 1) {
          popup_dialog(parse("As a result of our successful mission, we have gained a Cultural Dominance Bonus Card, a Trade Embargo Bonus Card, $d0 Tribute, and $d1 Soviet Nuclear Missile has been destroyed!", 100, nukes_destroyed));
        }
        else {
          popup_dialog(parse("As a result of our successful mission, we have gained a Cultural Dominance Bonus Card, a Trade Embargo Bonus Card, $d0 Tribute, and $d1 Soviet Nuclear Missiles have been destroyed!", 100, nukes_destroyed));
        }
        give_player_ctw_tribute(100);
      }
      else {
        popup_dialog(parse("As a result of our successful mission, we have gained a Cultural Dominance Bonus Card, a Trade Embargo Bonus Card, and $d0 Tribute.", 200));
        give_player_ctw_tribute(200);
      }
    }
  }
  else {
    popup_dialog(parse("As a result of our successful mission, we have gained a Cultural Dominance Bonus Card, a Trade Embargo Bonus Card, and $d0 Tribute.", 200));
    give_player_ctw_tribute(200);
  }
  
  give_player_bonus_card("Cultural Dominance");
  give_player_bonus_card("Trade Embargo");

  victory(1);
}

}

int conquest raze_city(String city_name) {
  int building;
  String building_name;
  int build_destroyed = 0;
  int nation = 1;
  
  for (step = 1; step < 12; step++) {
    switch(step){
      case 1:
        building_name = "Temple";
        break;
      case 2:
        building_name = "Market";
        break;
      case 3:
        building_name = "Library";
        break;
      case 4:
        building_name = "Senate";
        break;
      case 5:
        building_name = "University";
        break;
      case 6:
        building_name = "Farm";
        break;
      case 7:
        building_name = "Woodcutter's Camp";
        break;
      case 8:
        building_name = "Mine";
        break;
      case 9:
        building_name = "Granary";
        break;
      case 10:
        building_name = "Smelter";
        break;
      case 11:
        building_name = "Lumber Mill";
        break;
    }
    for (n = num_city_buildings(nation, city_name, building_name, 1); n > 0; n--) {
      building = find_build_at_city(nation, city_name, building_name, 1);
      destroy_building(nation, building);
      build_destroyed++;
    }
  }
  building = find_city_id(city_name);
  destroy_building(nation, building);
  build_destroyed = build_destroyed + 3;

  return build_destroyed;
}
